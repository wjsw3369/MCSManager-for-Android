{"version":3,"file":"app.js","mappings":";;;;;;;AAAa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;;;;;;;ACVa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAe;AACf;AACA;;;;;;;ACpBa;AACb;AACA,6CAA6C;AAC7C;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,8BAA8B,GAAG,sBAAsB,GAAG,wBAAwB,GAAG,sBAAsB,GAAG,mBAAmB,GAAG,mBAAmB,GAAG,oBAAoB,GAAG,eAAe,GAAG,gBAAgB,GAAG,iBAAiB,GAAG,cAAc,GAAG,6BAA6B,GAAG,oBAAoB,GAAG,uBAAuB,GAAG,mBAAmB,GAAG,uBAAuB,GAAG,kBAAkB,GAAG,mBAAmB,GAAG,sBAAsB;AAC7b,yCAAyC,mBAAO,CAAC,kCAAkB;AACnE,wBAAwB;AACxB,0CAA0C,mBAAO,CAAC,mCAAmB;AACrE,sBAAsB;AACtB,0CAA0C,mBAAO,CAAC,mCAAmB;AACrE,8BAA8B;AAC9B,iCAAiC,mBAAO,CAAC,0BAAU;AACnD,sBAAsB;AACtB,sBAAsB,mBAAO,CAAC,iCAAiB;AAC/C,kDAAiD,EAAE,qCAAqC,0CAA0C,EAAC;AACnI,+CAA8C,EAAE,qCAAqC,uCAAuC,EAAC;AAC7H,oBAAoB,mBAAO,CAAC,+BAAe;AAC3C,8CAA6C,EAAE,qCAAqC,oCAAoC,EAAC;AACzH,sBAAsB,mBAAO,CAAC,iCAAiB;AAC/C,mDAAkD,EAAE,qCAAqC,2CAA2C,EAAC;AACrI,+CAA8C,EAAE,qCAAqC,uCAAuC,EAAC;AAC7H,mDAAkD,EAAE,qCAAqC,2CAA2C,EAAC;AACrI,gDAA+C,EAAE,qCAAqC,wCAAwC,EAAC;AAC/H,kBAAkB,mBAAO,CAAC,6BAAa;AACvC,yDAAwD,EAAE,qCAAqC,6CAA6C,EAAC;AAC7I,0CAAyC,EAAE,qCAAqC,8BAA8B,EAAC;AAC/G,6CAA4C,EAAE,qCAAqC,iCAAiC,EAAC;AACrH,4CAA2C,EAAE,qCAAqC,gCAAgC,EAAC;AACnH,2CAA0C,EAAE,qCAAqC,+BAA+B,EAAC;AACjH,gDAA+C,EAAE,qCAAqC,oCAAoC,EAAC;AAC3H,cAAc,mBAAO,CAAC,yBAAS;AAC/B,+CAA8C,EAAE,qCAAqC,+BAA+B,EAAC;AACrH,qBAAqB,mBAAO,CAAC,gCAAgB;AAC7C,+CAA8C,EAAE,qCAAqC,sCAAsC,EAAC;AAC5H;;;;;;;ACnCa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,WAAW;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,cAAc;AAC3D;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAe;AACf;;;;;;;ACpDa;AACb;AACA;AACA;AACA,6CAA6C;AAC7C;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,8BAA8B,mBAAO,CAAC,KAAK;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAe;AACf;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,eAAe;AACtC;AACA;AACA;AACA;AACA;;;;;;;AC9Ga;AACb;AACA,6CAA6C;AAC7C;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mBAAmB,GAAG,sBAAsB,GAAG,kBAAkB;AACjE,wBAAwB,mBAAO,CAAC,eAAe;AAC/C,6BAA6B,mBAAO,CAAC,IAAI;AACzC,wCAAwC,mBAAO,CAAC,eAAe;AAC/D,+BAA+B,mBAAO,CAAC,MAAM;AAC7C,iCAAiC,mBAAO,CAAC,QAAQ;AACjD,qCAAqC,mBAAO,CAAC,YAAY;AACzD;AACA;AACA,kBAAkB;AAClB;AACA,yEAAyE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,2DAA2D,KAAK;AAChE;AACA;AACA;AACA,uDAAuD,IAAI;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;;;;;;;AC/Ia;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,oBAAoB,GAAG,uBAAuB,GAAG,mBAAmB,GAAG,uBAAuB;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;;;;;;;ACnHa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;;;;;;;ACZa;AACb;AACA,6CAA6C;AAC7C;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,kBAAkB;AAClB,6BAA6B,mBAAO,CAAC,IAAI;AACzC,mCAAmC,mBAAO,CAAC,UAAU;AACrD,6BAA6B,mBAAO,CAAC,IAAI;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,mBAAmB;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;;;;;;;AClFa;AACb;AACA,6CAA6C;AAC7C;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,+BAA+B,mBAAO,CAAC,MAAM;AAC7C,mCAAmC,mBAAO,CAAC,UAAU;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,mBAAmB;AAChF;AACA;AACA;AACA,6DAA6D,mBAAmB;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,MAAM;AAC1C,yDAAyD,KAAK;AAC9D;AACA,2DAA2D,mBAAmB;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,MAAM;AAC1C,yDAAyD,KAAK;AAC9D;AACA;AACA,iEAAiE,mBAAmB;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,sFAAsF,KAAK;AAC3F;AACA;AACA;AACA;AACA;AACA,kBAAe;AACf;AACA;AACA;;;;;;;ACpHa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,oBAAoB,GAAG,eAAe,GAAG,iBAAiB,GAAG,gBAAgB,GAAG,cAAc,GAAG,6BAA6B;AAC9H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oGAAoG,SAAS;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AAC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","sources":["webpack://mcsmanager-daemon/../common/dist/array.js","webpack://mcsmanager-daemon/../common/dist/global_variable.js","webpack://mcsmanager-daemon/../common/dist/index.js","webpack://mcsmanager-daemon/../common/dist/instance_stream.js","webpack://mcsmanager-daemon/../common/dist/mcping.js","webpack://mcsmanager-daemon/../common/dist/process_tools.js","webpack://mcsmanager-daemon/../common/dist/query_wrapper.js","webpack://mcsmanager-daemon/../common/dist/string_utils.js","webpack://mcsmanager-daemon/../common/dist/system_info.js","webpack://mcsmanager-daemon/../common/dist/system_storage.js","webpack://mcsmanager-daemon/../common/dist/typecheck.js","webpack://mcsmanager-daemon/./src/app.ts","webpack://mcsmanager-daemon/./src/common/compress.ts","webpack://mcsmanager-daemon/./src/common/system_storage.ts","webpack://mcsmanager-daemon/./src/const.ts","webpack://mcsmanager-daemon/./src/entity/commands/base/command.ts","webpack://mcsmanager-daemon/./src/entity/commands/base/command_parser.ts","webpack://mcsmanager-daemon/./src/entity/commands/cmd.ts","webpack://mcsmanager-daemon/./src/entity/commands/dispatcher.ts","webpack://mcsmanager-daemon/./src/entity/commands/docker/docker_pty_resize.ts","webpack://mcsmanager-daemon/./src/entity/commands/docker/docker_pull.ts","webpack://mcsmanager-daemon/./src/entity/commands/docker/docker_start.ts","webpack://mcsmanager-daemon/./src/entity/commands/general/general_command.ts","webpack://mcsmanager-daemon/./src/entity/commands/general/general_install.ts","webpack://mcsmanager-daemon/./src/entity/commands/general/general_kill.ts","webpack://mcsmanager-daemon/./src/entity/commands/general/general_restart.ts","webpack://mcsmanager-daemon/./src/entity/commands/general/general_start.ts","webpack://mcsmanager-daemon/./src/entity/commands/general/general_stop.ts","webpack://mcsmanager-daemon/./src/entity/commands/general/general_update.ts","webpack://mcsmanager-daemon/./src/entity/commands/kill.ts","webpack://mcsmanager-daemon/./src/entity/commands/minecraft/mc_ping.ts","webpack://mcsmanager-daemon/./src/entity/commands/nullfunc.ts","webpack://mcsmanager-daemon/./src/entity/commands/process_info.ts","webpack://mcsmanager-daemon/./src/entity/commands/pty/pty_resize.ts","webpack://mcsmanager-daemon/./src/entity/commands/pty/pty_start.ts","webpack://mcsmanager-daemon/./src/entity/commands/pty/pty_stop.ts","webpack://mcsmanager-daemon/./src/entity/commands/restart.ts","webpack://mcsmanager-daemon/./src/entity/commands/start.ts","webpack://mcsmanager-daemon/./src/entity/commands/steam/rcon_command.ts","webpack://mcsmanager-daemon/./src/entity/commands/stop.ts","webpack://mcsmanager-daemon/./src/entity/commands/task/mc_players.ts","webpack://mcsmanager-daemon/./src/entity/commands/task/openfrp.ts","webpack://mcsmanager-daemon/./src/entity/commands/task/time.ts","webpack://mcsmanager-daemon/./src/entity/config.ts","webpack://mcsmanager-daemon/./src/entity/ctx.ts","webpack://mcsmanager-daemon/./src/entity/instance/Instance_config.ts","webpack://mcsmanager-daemon/./src/entity/instance/instance.ts","webpack://mcsmanager-daemon/./src/entity/instance/life_cycle.ts","webpack://mcsmanager-daemon/./src/entity/instance/preset.ts","webpack://mcsmanager-daemon/./src/entity/instance/process_config.ts","webpack://mcsmanager-daemon/./src/i18n/index.ts","webpack://mcsmanager-daemon/./src/routers/Instance_router.ts","webpack://mcsmanager-daemon/./src/routers/auth_router.ts","webpack://mcsmanager-daemon/./src/routers/environment_router.ts","webpack://mcsmanager-daemon/./src/routers/file_router.ts","webpack://mcsmanager-daemon/./src/routers/http_router.ts","webpack://mcsmanager-daemon/./src/routers/info_router.ts","webpack://mcsmanager-daemon/./src/routers/instance_event_router.ts","webpack://mcsmanager-daemon/./src/routers/passport_router.ts","webpack://mcsmanager-daemon/./src/routers/schedule_router.ts","webpack://mcsmanager-daemon/./src/routers/stream_router.ts","webpack://mcsmanager-daemon/./src/service/async_task_service/index.ts","webpack://mcsmanager-daemon/./src/service/async_task_service/quick_install.ts","webpack://mcsmanager-daemon/./src/service/dependencies.ts","webpack://mcsmanager-daemon/./src/service/docker_process_service.ts","webpack://mcsmanager-daemon/./src/service/docker_service.ts","webpack://mcsmanager-daemon/./src/service/download.ts","webpack://mcsmanager-daemon/./src/service/file_router_service.ts","webpack://mcsmanager-daemon/./src/service/http.ts","webpack://mcsmanager-daemon/./src/service/instance_update_action.ts","webpack://mcsmanager-daemon/./src/service/log.ts","webpack://mcsmanager-daemon/./src/service/mission_passport.ts","webpack://mcsmanager-daemon/./src/service/protocol.ts","webpack://mcsmanager-daemon/./src/service/router.ts","webpack://mcsmanager-daemon/./src/service/system_file.ts","webpack://mcsmanager-daemon/./src/service/system_instance.ts","webpack://mcsmanager-daemon/./src/service/system_instance_control.ts","webpack://mcsmanager-daemon/./src/service/system_visual_data.ts","webpack://mcsmanager-daemon/./src/service/version.ts","webpack://mcsmanager-daemon/./src/service/version_adapter.ts","webpack://mcsmanager-daemon/./src/tools/filepath.ts","webpack://mcsmanager-daemon/external commonjs \"@iarna/toml\"","webpack://mcsmanager-daemon/external commonjs \"@koa/router\"","webpack://mcsmanager-daemon/external commonjs \"axios\"","webpack://mcsmanager-daemon/external commonjs \"dockerode\"","webpack://mcsmanager-daemon/external commonjs \"events\"","webpack://mcsmanager-daemon/external commonjs \"fs-extra\"","webpack://mcsmanager-daemon/external commonjs \"i18next\"","webpack://mcsmanager-daemon/external commonjs \"iconv-lite\"","webpack://mcsmanager-daemon/external commonjs \"koa\"","webpack://mcsmanager-daemon/external commonjs \"koa-body-patch\"","webpack://mcsmanager-daemon/external commonjs \"koa-send\"","webpack://mcsmanager-daemon/external commonjs \"log4js\"","webpack://mcsmanager-daemon/external commonjs \"module-alias/register\"","webpack://mcsmanager-daemon/external commonjs \"node-schedule\"","webpack://mcsmanager-daemon/external commonjs \"os-utils\"","webpack://mcsmanager-daemon/external commonjs \"pidusage\"","webpack://mcsmanager-daemon/external commonjs \"properties\"","webpack://mcsmanager-daemon/external commonjs \"rcon-srcds\"","webpack://mcsmanager-daemon/external commonjs \"socket.io\"","webpack://mcsmanager-daemon/external commonjs \"uuid\"","webpack://mcsmanager-daemon/external commonjs \"yaml\"","webpack://mcsmanager-daemon/external node-commonjs \"child_process\"","webpack://mcsmanager-daemon/external node-commonjs \"fs\"","webpack://mcsmanager-daemon/external node-commonjs \"http\"","webpack://mcsmanager-daemon/external node-commonjs \"net\"","webpack://mcsmanager-daemon/external node-commonjs \"os\"","webpack://mcsmanager-daemon/external node-commonjs \"path\"","webpack://mcsmanager-daemon/external node-commonjs \"readline\"","webpack://mcsmanager-daemon/external node-commonjs \"stream\"","webpack://mcsmanager-daemon/webpack/bootstrap","webpack://mcsmanager-daemon/webpack/before-startup","webpack://mcsmanager-daemon/webpack/startup","webpack://mcsmanager-daemon/webpack/after-startup"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.arrayUnique = void 0;\nfunction arrayUnique(arr, felidName) {\n    if (!felidName)\n        return Array.from(new Set(arr));\n    const map = new Map();\n    return arr.filter((v) => !map.has(v[felidName]) && map.set(v[felidName], v));\n}\nexports.arrayUnique = arrayUnique;\n//# sourceMappingURL=array.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass GlobalVariable {\n    static set(k, v) {\n        GlobalVariable.map.set(k, v);\n    }\n    static get(k, def) {\n        if (GlobalVariable.map.has(k)) {\n            return GlobalVariable.map.get(k);\n        }\n        else {\n            return def;\n        }\n    }\n    static del(k) {\n        return GlobalVariable.map.delete(k);\n    }\n}\nexports.default = GlobalVariable;\nGlobalVariable.map = new Map();\n//# sourceMappingURL=global_variable.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InstanceStreamListener = exports.GlobalVariable = exports.StorageSubsystem = exports.MCServerStatus = exports.removeTrail = exports.arrayUnique = exports.supposeValue = exports.isEmpty = exports.toNumber = exports.toBoolean = exports.toText = exports.configureEntityParams = exports.QueryWrapper = exports.LocalFileSource = exports.MySqlSource = exports.QueryMapWrapper = exports.systemInfo = exports.killProcess = exports.ProcessWrapper = void 0;\nconst system_storage_1 = __importDefault(require(\"./system_storage\"));\nexports.StorageSubsystem = system_storage_1.default;\nconst global_variable_1 = __importDefault(require(\"./global_variable\"));\nexports.GlobalVariable = global_variable_1.default;\nconst instance_stream_1 = __importDefault(require(\"./instance_stream\"));\nexports.InstanceStreamListener = instance_stream_1.default;\nconst mcping_1 = __importDefault(require(\"./mcping\"));\nexports.MCServerStatus = mcping_1.default;\nvar process_tools_1 = require(\"./process_tools\");\nObject.defineProperty(exports, \"ProcessWrapper\", { enumerable: true, get: function () { return process_tools_1.ProcessWrapper; } });\nObject.defineProperty(exports, \"killProcess\", { enumerable: true, get: function () { return process_tools_1.killProcess; } });\nvar system_info_1 = require(\"./system_info\");\nObject.defineProperty(exports, \"systemInfo\", { enumerable: true, get: function () { return system_info_1.systemInfo; } });\nvar query_wrapper_1 = require(\"./query_wrapper\");\nObject.defineProperty(exports, \"QueryMapWrapper\", { enumerable: true, get: function () { return query_wrapper_1.QueryMapWrapper; } });\nObject.defineProperty(exports, \"MySqlSource\", { enumerable: true, get: function () { return query_wrapper_1.MySqlSource; } });\nObject.defineProperty(exports, \"LocalFileSource\", { enumerable: true, get: function () { return query_wrapper_1.LocalFileSource; } });\nObject.defineProperty(exports, \"QueryWrapper\", { enumerable: true, get: function () { return query_wrapper_1.QueryWrapper; } });\nvar typecheck_1 = require(\"./typecheck\");\nObject.defineProperty(exports, \"configureEntityParams\", { enumerable: true, get: function () { return typecheck_1.configureEntityParams; } });\nObject.defineProperty(exports, \"toText\", { enumerable: true, get: function () { return typecheck_1.toText; } });\nObject.defineProperty(exports, \"toBoolean\", { enumerable: true, get: function () { return typecheck_1.toBoolean; } });\nObject.defineProperty(exports, \"toNumber\", { enumerable: true, get: function () { return typecheck_1.toNumber; } });\nObject.defineProperty(exports, \"isEmpty\", { enumerable: true, get: function () { return typecheck_1.isEmpty; } });\nObject.defineProperty(exports, \"supposeValue\", { enumerable: true, get: function () { return typecheck_1.supposeValue; } });\nvar array_1 = require(\"./array\");\nObject.defineProperty(exports, \"arrayUnique\", { enumerable: true, get: function () { return array_1.arrayUnique; } });\nvar string_utils_1 = require(\"./string_utils\");\nObject.defineProperty(exports, \"removeTrail\", { enumerable: true, get: function () { return string_utils_1.removeTrail; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Application instance data stream forwarding adapter\nclass InstanceStreamListener {\n    constructor() {\n        this.listenMap = new Map();\n    }\n    requestForward(socket, instanceUuid) {\n        if (this.listenMap.has(instanceUuid)) {\n            const sockets = this.listenMap.get(instanceUuid);\n            if (!sockets)\n                return;\n            for (const iterator of sockets)\n                if (iterator.id === socket.id)\n                    throw new Error(`This Socket ${socket.id} already exists in the specified instance listening table`);\n            sockets.push(socket);\n        }\n        else {\n            this.listenMap.set(instanceUuid, [socket]);\n        }\n    }\n    cannelForward(socket, instanceUuid) {\n        if (!this.listenMap.has(instanceUuid))\n            throw new Error(`The specified ${instanceUuid} does not exist in the listening table`);\n        const socketList = this.listenMap.get(instanceUuid);\n        socketList === null || socketList === void 0 ? void 0 : socketList.forEach((v, index) => {\n            if (v.id === socket.id)\n                socketList === null || socketList === void 0 ? void 0 : socketList.splice(index, 1);\n        });\n    }\n    forward(instanceUuid, data) {\n        const sockets = this.listenMap.get(instanceUuid);\n        sockets === null || sockets === void 0 ? void 0 : sockets.forEach((socket) => {\n            if (socket && socket.connected)\n                socket.emit(\"instance/stdout\", data);\n        });\n    }\n    forwardViaCallback(instanceUuid, callback) {\n        if (this.listenMap.has(instanceUuid)) {\n            const sockets = this.listenMap.get(instanceUuid);\n            sockets === null || sockets === void 0 ? void 0 : sockets.forEach((socket) => {\n                if (socket && socket.connected)\n                    callback(socket);\n            });\n        }\n    }\n    hasListenInstance(instanceUuid) {\n        var _a;\n        return this.listenMap.has(instanceUuid) && ((_a = this.listenMap) === null || _a === void 0 ? void 0 : _a.get(instanceUuid).length) > 0;\n    }\n}\nexports.default = InstanceStreamListener;\n//# sourceMappingURL=instance_stream.js.map","\"use strict\";\n// Using SLT (Server List Ping) provided by Minecraft.\n// https://wiki.vg/Server_List_Ping#Response\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst net_1 = __importDefault(require(\"net\"));\nclass PingMinecraftServer {\n    constructor(port, host) {\n        this.port = port;\n        this.host = host;\n        this.status = {\n            online: false,\n            host,\n            port,\n            version: \"\",\n            motd: \"\",\n            current_players: 0,\n            max_players: 0,\n            latency: 0\n        };\n    }\n    getStatus() {\n        return new Promise((resolve, reject) => {\n            var _a, _b, _c;\n            var start_time = new Date().getTime();\n            this.client = net_1.default.connect({\n                host: this.host,\n                port: this.port,\n                timeout: 1000 * 15\n            }, () => {\n                var _a;\n                this.status.latency = Math.round(new Date().getTime() - start_time);\n                // 0xFE packet identifier for a server list ping\n                // 0x01 server list ping's payload (always 1)\n                let data = Buffer.from([0xfe, 0x01]);\n                (_a = this === null || this === void 0 ? void 0 : this.client) === null || _a === void 0 ? void 0 : _a.write(data);\n            });\n            // The client can also receive data from the server by reading from its socket.\n            (_a = this === null || this === void 0 ? void 0 : this.client) === null || _a === void 0 ? void 0 : _a.on(\"data\", (response) => {\n                var _a;\n                // Check the readme for a simple explanation\n                var server_info = response.toString().split(\"\\x00\\x00\");\n                this.status = {\n                    online: true,\n                    host: this.host,\n                    port: this.port,\n                    version: server_info[2].replace(/\\u0000/g, \"\"),\n                    motd: server_info[3].replace(/\\u0000/g, \"\"),\n                    current_players: server_info[4].replace(/\\u0000/g, \"\"),\n                    max_players: server_info[5].replace(/\\u0000/g, \"\"),\n                    latency: this.status.latency\n                };\n                // Request an end to the connection after the data has been received.\n                (_a = this === null || this === void 0 ? void 0 : this.client) === null || _a === void 0 ? void 0 : _a.end();\n                resolve(this.status);\n                this.destroy();\n            });\n            (_b = this === null || this === void 0 ? void 0 : this.client) === null || _b === void 0 ? void 0 : _b.on(\"end\", () => {\n                resolve(this.status);\n                this.destroy();\n            });\n            (_c = this === null || this === void 0 ? void 0 : this.client) === null || _c === void 0 ? void 0 : _c.on(\"error\", (err) => {\n                reject(err);\n                this.destroy();\n            });\n        });\n    }\n    destroy() {\n        var _a;\n        (_a = this.client) === null || _a === void 0 ? void 0 : _a.removeAllListeners();\n    }\n    async asyncStatus() {\n        let status = await this.getStatus();\n        return status;\n    }\n}\nexports.default = PingMinecraftServer;\n// async function test() {\n//   try {\n//     var status = await new MCServStatus(25565, \"localhost\").asyncStatus();\n//     // console.log(\"status: \", status);\n//   } catch (error) {\n//     console.error(\"错误:\", error);\n//   }\n//   const memoryUsage = process.memoryUsage();\n//   console.log(\n//     \"RSS (Resident Set Size):\",\n//     (memoryUsage.rss / 1024 / 1024).toFixed(2),\n//     \"MB\",\n//     \"Heap Total:\",\n//     (memoryUsage.heapTotal / 1024 / 1024).toFixed(2),\n//     \"MB\",\n//     \"Heap Used:\",\n//     (memoryUsage.heapUsed / 1024 / 1024).toFixed(2),\n//     \"MB\",\n//     \"External:\",\n//     (memoryUsage.external / 1024 / 1024).toFixed(2),\n//     \"MB\"\n//   );\n//   // console.log(\"Heap Total:\", (memoryUsage.heapTotal / 1024 / 1024).toFixed(2), \"MB\");\n//   // console.log(\"External:\", (memoryUsage.external / 1024 / 1024).toFixed(2), \"MB\");\n//   // console.log(\"Heap Used:\", (memoryUsage.heapUsed / 1024 / 1024).toFixed(2), \"MB\");\n// }\n// for (let index = 0; index < 10000; index++) {\n//   test();\n//   // @ts-ignore\n//   // global.gc();\n// }\n//# sourceMappingURL=mcping.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.killProcess = exports.ProcessWrapper = exports.StartError = void 0;\nconst child_process_1 = require(\"child_process\");\nconst os_1 = __importDefault(require(\"os\"));\nconst child_process_2 = __importDefault(require(\"child_process\"));\nconst path_1 = __importDefault(require(\"path\"));\nconst events_1 = __importDefault(require(\"events\"));\nconst iconv_lite_1 = __importDefault(require(\"iconv-lite\"));\nclass StartError extends Error {\n}\nexports.StartError = StartError;\nclass ProcessWrapper extends events_1.default {\n    constructor(file, args, cwd, timeout = 0, code = \"utf-8\", option = {}) {\n        super();\n        this.file = file;\n        this.args = args;\n        this.cwd = cwd;\n        this.timeout = timeout;\n        this.code = code;\n        this.option = option;\n        this.errMsg = {\n            timeoutErr: \"task timeout!\",\n            exitErr: \"task error!\",\n            startErr: \"task start error!\"\n        };\n    }\n    setErrMsg(errMsg) {\n        this.errMsg = errMsg;\n    }\n    start() {\n        return new Promise((resolve, reject) => {\n            let timeTask;\n            const subProcess = child_process_2.default.spawn(this.file, this.args, {\n                stdio: \"pipe\",\n                windowsHide: true,\n                cwd: path_1.default.normalize(this.cwd),\n                ...this.option\n            });\n            this.process = subProcess;\n            this.pid = subProcess.pid;\n            this.emit(\"start\", subProcess.pid);\n            if (!subProcess || !subProcess.pid)\n                return reject(new Error(this.errMsg.startErr));\n            subProcess.stdout.on(\"data\", (text) => this.emit(\"data\", iconv_lite_1.default.decode(text, this.code)));\n            subProcess.stderr.on(\"data\", (text) => this.emit(\"data\", iconv_lite_1.default.decode(text, this.code)));\n            subProcess.on(\"exit\", (code) => {\n                try {\n                    this.emit(\"exit\", code);\n                    this.destroy();\n                }\n                catch (error) { }\n                if (timeTask)\n                    clearTimeout(timeTask);\n                if (code !== 0)\n                    return reject(new Error(this.errMsg.exitErr));\n                return resolve(true);\n            });\n            // timeout, terminate the task\n            if (this.timeout) {\n                timeTask = setTimeout(() => {\n                    if ((subProcess === null || subProcess === void 0 ? void 0 : subProcess.pid) && !subProcess.exitCode && subProcess.exitCode !== 0) {\n                        killProcess(subProcess.pid, subProcess);\n                        reject(new Error(this.errMsg.timeoutErr));\n                    }\n                    else {\n                        reject(new Error(this.errMsg.exitErr));\n                    }\n                }, 1000 * this.timeout);\n            }\n        });\n    }\n    getPid() {\n        var _a;\n        return (_a = this.process) === null || _a === void 0 ? void 0 : _a.pid;\n    }\n    write(data) {\n        var _a, _b;\n        return (_b = (_a = this.process) === null || _a === void 0 ? void 0 : _a.stdin) === null || _b === void 0 ? void 0 : _b.write(iconv_lite_1.default.encode(data, this.code));\n    }\n    kill() {\n        var _a, _b;\n        if ((_a = this.process) === null || _a === void 0 ? void 0 : _a.pid)\n            killProcess((_b = this.process) === null || _b === void 0 ? void 0 : _b.pid, this.process);\n    }\n    status() {\n        var _a;\n        return !!((_a = this.process) === null || _a === void 0 ? void 0 : _a.exitCode);\n    }\n    exitCode() {\n        var _a;\n        return (_a = this.process) === null || _a === void 0 ? void 0 : _a.exitCode;\n    }\n    async destroy() {\n        var _a, _b, _c, _d, _e, _f, _g;\n        try {\n            for (const n of this.eventNames())\n                this.removeAllListeners(n);\n            if ((_a = this.process) === null || _a === void 0 ? void 0 : _a.stdout)\n                for (const eventName of this.process.stdout.eventNames())\n                    this.process.stdout.removeAllListeners(eventName);\n            if ((_b = this.process) === null || _b === void 0 ? void 0 : _b.stderr)\n                for (const eventName of this.process.stderr.eventNames())\n                    this.process.stderr.removeAllListeners(eventName);\n            if (this.process)\n                for (const eventName of this.process.eventNames())\n                    this.process.removeAllListeners(eventName);\n            (_d = (_c = this.process) === null || _c === void 0 ? void 0 : _c.stdout) === null || _d === void 0 ? void 0 : _d.destroy();\n            (_f = (_e = this.process) === null || _e === void 0 ? void 0 : _e.stderr) === null || _f === void 0 ? void 0 : _f.destroy();\n            if (((_g = this.process) === null || _g === void 0 ? void 0 : _g.exitCode) === null) {\n                this.process.kill(\"SIGTERM\");\n                this.process.kill(\"SIGKILL\");\n            }\n        }\n        catch (error) {\n            console.log(\"[ProcessWrapper destroy() Error]\", error);\n        }\n        finally {\n            this.process = undefined;\n        }\n    }\n}\nexports.ProcessWrapper = ProcessWrapper;\nfunction killProcess(pid, process, signal) {\n    try {\n        if (os_1.default.platform() === \"win32\") {\n            (0, child_process_1.execSync)(`taskkill /PID ${pid} /T /F`);\n            return true;\n        }\n        if (os_1.default.platform() === \"linux\") {\n            (0, child_process_1.execSync)(`kill -s 9 ${pid}`);\n            return true;\n        }\n    }\n    catch (err) {\n        return signal ? process.kill(signal) : process.kill(\"SIGKILL\");\n    }\n    return signal ? process.kill(signal) : process.kill(\"SIGKILL\");\n}\nexports.killProcess = killProcess;\n//# sourceMappingURL=process_tools.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.QueryWrapper = exports.LocalFileSource = exports.MySqlSource = exports.QueryMapWrapper = void 0;\n// Provide the MAP query interface used by the routing layer\nclass QueryMapWrapper {\n    constructor(map) {\n        this.map = map;\n    }\n    select(condition) {\n        const result = [];\n        this.map.forEach((v) => {\n            if (condition(v))\n                result.push(v);\n        });\n        return result;\n    }\n    page(data, page = 1, pageSize = 10) {\n        const start = (page - 1) * pageSize;\n        const end = start + pageSize;\n        let size = data.length;\n        let maxPage = 0;\n        while (size > 0) {\n            size -= pageSize;\n            maxPage++;\n        }\n        return {\n            page,\n            pageSize,\n            maxPage,\n            data: data.slice(start, end)\n        };\n    }\n}\nexports.QueryMapWrapper = QueryMapWrapper;\n// MYSQL data source\nclass MySqlSource {\n    constructor(data) {\n        this.data = data;\n    }\n    selectPage(condition, page, pageSize) {\n        return {\n            page,\n            pageSize,\n            maxPage: 0,\n            total: 0,\n            data: []\n        };\n    }\n    select(condition) {\n        return [];\n    }\n    update(condition, data) { }\n    delete(condition) { }\n    insert(data) { }\n}\nexports.MySqlSource = MySqlSource;\n// local file data source (embedded microdatabase)\nclass LocalFileSource {\n    constructor(data) {\n        this.data = data;\n    }\n    selectPage(condition, page = 1, pageSize = 10) {\n        const result = [];\n        this.data.forEach((v) => {\n            for (const key in condition) {\n                const dataValue = v[key];\n                const targetValue = condition[key];\n                if (targetValue[0] == \"%\") {\n                    if (!dataValue.includes(targetValue.slice(1, targetValue.length - 1)))\n                        return false;\n                }\n                else {\n                    if (targetValue !== dataValue)\n                        return false;\n                }\n            }\n            result.push(v);\n        });\n        return this.page(result, page, pageSize);\n    }\n    page(data, page = 1, pageSize = 10) {\n        const start = (page - 1) * pageSize;\n        const end = start + pageSize;\n        let size = data.length;\n        let maxPage = 0;\n        while (size > 0) {\n            size -= pageSize;\n            maxPage++;\n        }\n        return {\n            page,\n            pageSize,\n            maxPage,\n            total: data.length,\n            data: data.slice(start, end)\n        };\n    }\n    select(condition) {\n        return [];\n    }\n    update(condition, data) { }\n    delete(condition) { }\n    insert(data) { }\n}\nexports.LocalFileSource = LocalFileSource;\n// Provide the unified data query interface used by the routing layer\nclass QueryWrapper {\n    constructor(dataSource) {\n        this.dataSource = dataSource;\n    }\n    selectPage(condition, page = 1, pageSize = 10) {\n        return this.dataSource.selectPage(condition, page, pageSize);\n    }\n}\nexports.QueryWrapper = QueryWrapper;\n//# sourceMappingURL=query_wrapper.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.removeTrail = void 0;\nfunction removeTrail(origin, trail) {\n    if (origin.endsWith(trail)) {\n        return origin.slice(0, origin.length - trail.length);\n    }\n    else {\n        return origin;\n    }\n}\nexports.removeTrail = removeTrail;\n//# sourceMappingURL=string_utils.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.systemInfo = void 0;\nconst os_1 = __importDefault(require(\"os\"));\nconst os_utils_1 = __importDefault(require(\"os-utils\"));\nconst fs_1 = __importDefault(require(\"fs\"));\n// System details are updated every time\nconst info = {\n    type: os_1.default.type(),\n    hostname: os_1.default.hostname(),\n    platform: os_1.default.platform(),\n    release: os_1.default.release(),\n    uptime: os_1.default.uptime(),\n    cwd: process.cwd(),\n    loadavg: os_1.default.loadavg(),\n    freemem: 0,\n    cpuUsage: 0,\n    memUsage: 0,\n    totalmem: 0,\n    processCpu: 0,\n    processMem: 0\n};\n// periodically refresh the cache\nsetInterval(() => {\n    if (os_1.default.platform() === \"linux\") {\n        return setLinuxSystemInfo();\n    }\n    if (os_1.default.platform() === \"win32\") {\n        return setWindowsSystemInfo();\n    }\n    return otherSystemInfo();\n}, 3000);\nfunction otherSystemInfo() {\n    info.freemem = os_1.default.freemem();\n    info.totalmem = os_1.default.totalmem();\n    info.memUsage = (os_1.default.totalmem() - os_1.default.freemem()) / os_1.default.totalmem();\n    os_utils_1.default.cpuUsage((p) => (info.cpuUsage = p));\n}\nfunction setWindowsSystemInfo() {\n    info.freemem = os_1.default.freemem();\n    info.totalmem = os_1.default.totalmem();\n    info.memUsage = (os_1.default.totalmem() - os_1.default.freemem()) / os_1.default.totalmem();\n    os_utils_1.default.cpuUsage((p) => (info.cpuUsage = p));\n}\nfunction setLinuxSystemInfo() {\n    var _a;\n    try {\n        // read memory data based on /proc/meminfo\n        const data = fs_1.default.readFileSync(\"/proc/meminfo\", { encoding: \"utf-8\" });\n        const list = data.split(\"\\n\");\n        const infoTable = {};\n        list.forEach((line) => {\n            const kv = line.split(\":\");\n            if (kv.length === 2) {\n                const k = kv[0].replace(/ /gim, \"\").replace(/\\t/gim, \"\").trim().toLowerCase();\n                let v = kv[1].replace(/ /gim, \"\").replace(/\\t/gim, \"\").trim().toLowerCase();\n                v = v.replace(/kb/gim, \"\").replace(/mb/gim, \"\").replace(/gb/gim, \"\");\n                let vNumber = parseInt(v);\n                if (isNaN(vNumber))\n                    vNumber = 0;\n                infoTable[k] = vNumber;\n            }\n        });\n        const memAvailable = (_a = infoTable[\"memavailable\"]) !== null && _a !== void 0 ? _a : infoTable[\"memfree\"];\n        const memTotal = infoTable[\"memtotal\"];\n        info.freemem = memAvailable * 1024;\n        info.totalmem = memTotal * 1024;\n        info.memUsage = (info.totalmem - info.freemem) / info.totalmem;\n        os_utils_1.default.cpuUsage((p) => (info.cpuUsage = p));\n    }\n    catch (error) {\n        // If the reading is wrong, the default general reading method is automatically used\n        otherSystemInfo();\n    }\n}\nfunction systemInfo() {\n    return info;\n}\nexports.systemInfo = systemInfo;\n//# sourceMappingURL=system_info.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst path_1 = __importDefault(require(\"path\"));\nconst fs_extra_1 = __importDefault(require(\"fs-extra\"));\nclass StorageSubsystem {\n    checkFileName(name) {\n        const blackList = [\"\\\\\", \"/\", \"..\"];\n        for (const ch of blackList) {\n            if (name.includes(ch))\n                return false;\n        }\n        return true;\n    }\n    writeFile(name, data) {\n        const targetPath = path_1.default.normalize(path_1.default.join(StorageSubsystem.DATA_PATH, name));\n        fs_extra_1.default.writeFileSync(targetPath, data, { encoding: \"utf-8\" });\n    }\n    readFile(name) {\n        const targetPath = path_1.default.normalize(path_1.default.join(StorageSubsystem.DATA_PATH, name));\n        return fs_extra_1.default.readFileSync(targetPath, { encoding: \"utf-8\" });\n    }\n    readDir(dirName) {\n        const targetPath = path_1.default.normalize(path_1.default.join(StorageSubsystem.DATA_PATH, dirName));\n        if (!fs_extra_1.default.existsSync(targetPath))\n            return [];\n        const files = fs_extra_1.default.readdirSync(targetPath).map((v) => path_1.default.normalize(path_1.default.join(dirName, v)));\n        return files;\n    }\n    deleteFile(name) {\n        const targetPath = path_1.default.normalize(path_1.default.join(StorageSubsystem.DATA_PATH, name));\n        fs_extra_1.default.removeSync(targetPath);\n    }\n    fileExists(name) {\n        const targetPath = path_1.default.normalize(path_1.default.join(StorageSubsystem.DATA_PATH, name));\n        return fs_extra_1.default.existsSync(targetPath);\n    }\n    // Stored in local file based on class definition and identifier\n    store(category, uuid, object) {\n        const dirPath = path_1.default.join(StorageSubsystem.DATA_PATH, category);\n        if (!fs_extra_1.default.existsSync(dirPath))\n            fs_extra_1.default.mkdirsSync(dirPath);\n        if (!this.checkFileName(uuid))\n            throw new Error(`UUID ${uuid} does not conform to specification`);\n        const filePath = path_1.default.join(dirPath, `${uuid}.json`);\n        const data = JSON.stringify(object, null, 4);\n        fs_extra_1.default.writeFileSync(filePath, data, { encoding: \"utf-8\" });\n    }\n    // deep copy of the primitive type with the copy target as the prototype\n    defineAttr(target, object) {\n        for (const v of Object.keys(target)) {\n            const objectValue = object[v];\n            if (objectValue === undefined)\n                continue;\n            if (objectValue instanceof Array) {\n                target[v] = objectValue;\n                continue;\n            }\n            if (objectValue instanceof Object && typeof objectValue === \"object\") {\n                this.defineAttr(target[v], objectValue);\n                continue;\n            }\n            target[v] = objectValue;\n        }\n        return target;\n    }\n    /**\n     * Instantiate an object based on the class definition and identifier\n     */\n    load(category, classz, uuid) {\n        const dirPath = path_1.default.join(StorageSubsystem.DATA_PATH, category);\n        if (!fs_extra_1.default.existsSync(dirPath))\n            fs_extra_1.default.mkdirsSync(dirPath);\n        if (!this.checkFileName(uuid))\n            throw new Error(`UUID ${uuid} does not conform to specification`);\n        const filePath = path_1.default.join(dirPath, `${uuid}.json`);\n        if (!fs_extra_1.default.existsSync(filePath))\n            return null;\n        const data = fs_extra_1.default.readFileSync(filePath, { encoding: \"utf-8\" });\n        const dataObject = JSON.parse(data);\n        const target = new classz();\n        // for (const v of Object. keys(target)) {\n        // if (dataObject[v] !== undefined) target[v] = dataObject[v];\n        // }\n        // deep object copy\n        return this.defineAttr(target, dataObject);\n    }\n    /**\n     * Return all identifiers related to this class through the class definition\n     */\n    list(category) {\n        const dirPath = path_1.default.join(StorageSubsystem.DATA_PATH, category);\n        if (!fs_extra_1.default.existsSync(dirPath))\n            fs_extra_1.default.mkdirsSync(dirPath);\n        const files = fs_extra_1.default.readdirSync(dirPath);\n        const result = new Array();\n        files.forEach((name) => {\n            result.push(name.replace(path_1.default.extname(name), \"\"));\n        });\n        return result;\n    }\n    /**\n     * Delete an identifier instance of the specified type through the class definition\n     */\n    delete(category, uuid) {\n        const filePath = path_1.default.join(StorageSubsystem.DATA_PATH, category, `${uuid}.json`);\n        if (!fs_extra_1.default.existsSync(filePath))\n            return;\n        fs_extra_1.default.removeSync(filePath);\n    }\n}\nexports.default = StorageSubsystem;\nStorageSubsystem.DATA_PATH = path_1.default.normalize(path_1.default.join(process.cwd(), \"data\"));\nStorageSubsystem.INDEX_PATH = path_1.default.normalize(path_1.default.join(process.cwd(), \"data\", \"index\"));\n//# sourceMappingURL=system_storage.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.supposeValue = exports.isEmpty = exports.toBoolean = exports.toNumber = exports.toText = exports.configureEntityParams = void 0;\nfunction configureEntityParams(self, args, key, typeFn) {\n    var _a;\n    const selfDefaultValue = (_a = self[key]) !== null && _a !== void 0 ? _a : null;\n    const v = args[key] != null ? args[key] : selfDefaultValue;\n    if (typeFn === Number) {\n        if (v === \"\" || v == null) {\n            self[key] = null;\n        }\n        else {\n            if (isNaN(Number(v)))\n                throw new Error(`ConfigureEntityParams Error: Expected type to be Number, but got ${typeof v}`);\n            self[key] = Number(v);\n        }\n        return;\n    }\n    if (typeFn === String) {\n        if (v == null) {\n            self[key] = null;\n        }\n        else {\n            self[key] = String(v);\n        }\n        return;\n    }\n    if (typeFn === Boolean) {\n        if (v == null) {\n            self[key] = false;\n        }\n        else {\n            self[key] = Boolean(v);\n        }\n        return;\n    }\n    if (typeFn) {\n        self[key] = typeFn(v);\n    }\n    else {\n        self[key] = v;\n    }\n}\nexports.configureEntityParams = configureEntityParams;\nfunction toText(v) {\n    if (isEmpty(v))\n        return null;\n    return String(v);\n}\nexports.toText = toText;\nfunction toNumber(v) {\n    if (isEmpty(v))\n        return null;\n    if (isNaN(Number(v)))\n        return null;\n    return Number(v);\n}\nexports.toNumber = toNumber;\nfunction toBoolean(v) {\n    if (isEmpty(v))\n        return null;\n    return Boolean(v);\n}\nexports.toBoolean = toBoolean;\nfunction isEmpty(v) {\n    return v === null || v === undefined;\n}\nexports.isEmpty = isEmpty;\nfunction supposeValue(v, def) {\n    if (isEmpty(v))\n        return def;\n    return v;\n}\nexports.supposeValue = supposeValue;\n//# sourceMappingURL=typecheck.js.map","import \"module-alias/register\";\nimport http from \"http\";\nimport fs from \"fs-extra\";\nimport versionAdapter from \"./service/version_adapter\";\nimport { checkDependencies } from \"./service/dependencies\";\nimport { $t, i18next } from \"./i18n\";\nimport { getVersion, initVersionManager } from \"./service/version\";\nimport { globalConfiguration } from \"./entity/config\";\nimport { Server, Socket } from \"socket.io\";\nimport { LOCAL_PRESET_LANG_PATH } from \"./const\";\nimport logger from \"./service/log\";\nimport { GOLANG_ZIP_PATH, PTY_PATH } from \"./const\";\nimport * as router from \"./service/router\";\nimport * as koa from \"./service/http\";\nimport * as protocol from \"./service/protocol\";\nimport InstanceSubsystem from \"./service/system_instance\";\nimport \"./service/async_task_service\";\nimport \"./service/async_task_service/quick_install\";\nimport \"./service/system_visual_data\";\nimport { removeTrail } from \"common\";\n\ninitVersionManager();\nconst VERSION = getVersion();\n\nconsole.log(`\n______  _______________________  ___                                         \n___   |/  /_  ____/_  ___/__   |/  /_____ _____________ _______ _____________\n__  /|_/ /_  /    _____ \\\\__  /|_/ /_  __ \\`/_  __ \\\\  __ \\`/_  __ \\`/  _ \\\\_  ___/\n_  /  / / / /___  ____/ /_  /  / / / /_/ /_  / / / /_/ /_  /_/ //  __/  /    \n/_/  /_/  \\\\____/  /____/ /_/  /_/  \\\\__,_/ /_/ /_/\\\\__,_/ _\\\\__, / \\\\___//_/     \n                                                        /____/               \n________                                                                     \n___  __ \\\\_____ ____________ ________________                                 \n__  / / /  __ \\`/  _ \\\\_  __ \\`__ \\\\  __ \\\\_  __ \\\\                                \n_  /_/ // /_/ //  __/  / / / / / /_/ /  / / /                                \n/_____/ \\\\__,_/ \\\\___//_/ /_/ /_/\\\\____//_/ /_/                                 \n                                                                             \n\n + Copyright ${new Date().getFullYear()} MCSManager Dev <https://github.com/MCSManager>\n + Version ${VERSION}\n`);\n\n// Initialize the global configuration service\nglobalConfiguration.load();\nconst config = globalConfiguration.config;\n\n// Detect whether the configuration file is from an older version and update it if so.\nversionAdapter.detectConfig();\n\ncheckDependencies();\n\n// Set language\nif (fs.existsSync(LOCAL_PRESET_LANG_PATH)) {\n  i18next.changeLanguage(fs.readFileSync(LOCAL_PRESET_LANG_PATH, \"utf-8\"));\n} else {\n  const lang = config.language || \"en_us\";\n  logger.info(`LANGUAGE: ${lang}`);\n  i18next.changeLanguage(lang);\n}\nlogger.info($t(\"TXT_CODE_app.welcome\"));\n\n// Initialize HTTP service\nconst koaApp = koa.initKoa();\n\n// Listen for Koa errors\nkoaApp.on(\"error\", (error) => {\n  // Block all Koa framework error\n  // When Koa is attacked by a short connection flood, it is easy for error messages to swipe the screen, which may indirectly affect the operation of some applications\n});\n\nconst httpServer = http.createServer(koaApp.callback());\nhttpServer.on(\"error\", (err) => {\n  logger.error($t(\"TXT_CODE_app.httpSetupError\"));\n  logger.error(err);\n  process.exit(1);\n});\nhttpServer.listen(config.port, config.ip);\n\n// Initialize Websocket service to HTTP service\nconst io = new Server(httpServer, {\n  serveClient: false,\n  pingInterval: 5000,\n  pingTimeout: 5000,\n  cookie: false,\n  path: removeTrail(config.prefix, \"/\") + \"/socket.io\",\n  cors: {\n    origin: \"*\",\n    methods: [\"GET\", \"POST\", \"PUT\", \"DELETE\"]\n  },\n  maxHttpBufferSize: 1e8\n});\n\n// Initialize application instance system\ntry {\n  InstanceSubsystem.loadInstances();\n  logger.info($t(\"TXT_CODE_app.instanceLoad\", { n: InstanceSubsystem.getInstances().length }));\n} catch (err) {\n  logger.error($t(\"TXT_CODE_app.instanceLoadError\"), err);\n  process.exit(-1);\n}\n\n(function initCompressModule() {\n  try {\n    fs.chmodSync(GOLANG_ZIP_PATH, 0o755);\n    fs.chmodSync(PTY_PATH, 0o755);\n  } catch (error: any) {\n    logger.error(error?.message);\n    logger.error($t(\"TXT_CODE_a8b245fa\"));\n  }\n})();\n\n// Initialize Websocket server\nio.on(\"connection\", (socket: Socket) => {\n  protocol.addGlobalSocket(socket);\n  router.navigation(socket);\n\n  socket.on(\"error\", (err) => {\n    logger.error(\"Connection(): Socket.io Error:\", err);\n  });\n\n  socket.on(\"disconnect\", () => {\n    protocol.delGlobalSocket(socket);\n    for (const name of socket.eventNames()) socket.removeAllListeners(name);\n  });\n});\n\nprocess.on(\"uncaughtException\", function (err) {\n  logger.error(`Error: UncaughtException:`, err);\n});\n\nprocess.on(\"unhandledRejection\", (reason, p) => {\n  logger.error(`Error: UnhandledRejection:`, reason, p);\n});\n\nlogger.info(\"----------------------------\");\nlogger.info($t(\"TXT_CODE_app.started\"));\nlogger.info($t(\"TXT_CODE_app.doc\"));\nlogger.info($t(\"TXT_CODE_app.addr\", { port: config.port }));\nlogger.info($t(\"TXT_CODE_app.configPathTip\", { path: \"\" }));\nlogger.info($t(\"TXT_CODE_app.password\", { key: config.key }));\nlogger.info($t(\"TXT_CODE_app.passwordTip\"));\nlogger.info($t(\"TXT_CODE_app.exitTip\"));\nlogger.info(\"----------------------------\");\nconsole.log(\"\");\n\nasync function processExit() {\n  try {\n    console.log(\"\");\n    logger.warn(\"Program received EXIT command.\");\n    await InstanceSubsystem.exit();\n    logger.info(\"Exit.\");\n  } catch (err) {\n    logger.error(\"ERROR:\", err);\n  } finally {\n    process.exit(0);\n  }\n}\n\n[\"SIGTERM\", \"SIGINT\", \"SIGQUIT\"].forEach(function (sig) {\n  process.on(sig, () => {\n    logger.warn(`${sig} close process signal detected.`);\n    processExit();\n  });\n});\n\nprocess.stdin.on(\"data\", (v) => {\n  const command = v.toString().replace(\"\\n\", \"\").replace(\"\\r\", \"\").trim().toLowerCase();\n  if (command === \"exit\") processExit();\n});\n","import path from \"path\";\nimport { t } from \"i18next\";\nimport logger from \"../service/log\";\nimport { ProcessWrapper } from \"common\";\nimport fs from \"fs-extra\";\nimport { GOLANG_ZIP_PATH } from \"../const\";\nimport { ZIP_TIMEOUT_SECONDS } from \"../const\";\n\nconst COMPRESS_ERROR_MSG = {\n  invalidName: t(\"TXT_CODE_3aa9f36\"),\n  exitErr: t(\"TXT_CODE_2be83d36\"),\n  startErr: t(\"TXT_CODE_37d839a4\"),\n  timeoutErr: t(\"TXT_CODE_15c07350\")\n};\n\nfunction checkFileName(fileName: string) {\n  const disableList = ['\"', \"'\", \"?\", \"|\", \"&\"];\n  for (const iterator of disableList) {\n    if (fileName.includes(iterator)) return false;\n  }\n  return true;\n}\n\nexport async function compress(\n  sourceZip: string,\n  files: string[],\n  fileCode?: string\n): Promise<boolean> {\n  if (!checkFileName(sourceZip) || files.some((v) => !checkFileName(v)))\n    throw new Error(COMPRESS_ERROR_MSG.invalidName);\n  return await useZip(sourceZip, files, fileCode);\n}\n\nexport async function decompress(\n  zipPath: string,\n  dest: string,\n  fileCode?: string\n): Promise<boolean> {\n  if (!checkFileName(zipPath) || !checkFileName(dest))\n    throw new Error(COMPRESS_ERROR_MSG.invalidName);\n  return await useUnzip(zipPath, dest, fileCode || \"utf-8\");\n}\n\n// ./file-zip -mode 2 --zipPath aaa.zip --DistDirPath 123412124 --code GBK\nasync function useUnzip(sourceZip: string, destDir: string, code = \"utf-8\"): Promise<boolean> {\n  const params = [\n    \"--mode=2\",\n    `--zipPath=${path.basename(sourceZip)}`,\n    `--distDirPath=${path.normalize(destDir)}`,\n    `--code=${code}`\n  ];\n  logger.info(`Function useUnzip(): Command: ${GOLANG_ZIP_PATH} ${params.join(\" \")}`);\n  const subProcess = new ProcessWrapper(\n    GOLANG_ZIP_PATH,\n    params,\n    path.dirname(sourceZip),\n    ZIP_TIMEOUT_SECONDS,\n    code\n  );\n  subProcess.setErrMsg(COMPRESS_ERROR_MSG);\n  return subProcess.start();\n}\n\n// ./file-zip -mode 1 --file main.go --file file-zip --file 123 --file README.md --zipPath aaabb.zip\nasync function useZip(distZip: string, files: string[], code = \"utf-8\"): Promise<boolean> {\n  if (!files || files.length == 0) throw new Error(t(\"TXT_CODE_2038ec2c\"));\n  const params = [\"--mode=1\", `--code=${code}`, `--zipPath=${path.basename(distZip)}`];\n  files.forEach((v) => {\n    params.push(`--file=${path.basename(v)}`);\n  });\n  logger.info(\n    `Function useZip(): Command: ${GOLANG_ZIP_PATH} ${params.join(\" \")}, CWD: ${path.dirname(\n      distZip\n    )}`\n  );\n  const subProcess = new ProcessWrapper(\n    GOLANG_ZIP_PATH,\n    params,\n    path.dirname(distZip),\n    ZIP_TIMEOUT_SECONDS,\n    code\n  );\n  subProcess.setErrMsg(COMPRESS_ERROR_MSG);\n  return subProcess.start();\n}\n","import { StorageSubsystem } from \"common\";\nexport default new StorageSubsystem();\n","import os from \"os\";\nimport path from \"path\";\n\nconst SYS_INFO = `${os.platform()}_${os.arch()}${os.platform() === \"win32\" ? \".exe\" : \"\"}`;\nconst ptyName = `pty_${SYS_INFO}`;\nconst frpcName = `frpc_${SYS_INFO}`;\nconst PTY_PATH = path.normalize(path.join(process.cwd(), \"lib\", ptyName));\nconst FRPC_PATH = path.normalize(path.join(process.cwd(), \"lib\", frpcName));\nconst FILENAME_BLACKLIST = [\"\\\\\", \"/\", \".\", \"'\", '\"', \"?\", \"*\", \"<\", \">\"];\nconst LOCAL_PRESET_LANG_PATH = path.normalize(path.join(process.cwd(), \"language\"));\nconst IGNORE = \"[IGNORE_LOG]\";\nconst SYSTEM_TYPE = os.platform();\nconst ZIP_TIMEOUT_SECONDS = 60 * 40;\nconst GOLANG_ZIP_NAME = `file_zip_${SYSTEM_TYPE}_${os.arch()}${\n  SYSTEM_TYPE === \"win32\" ? \".exe\" : \"\"\n}`;\nconst GOLANG_ZIP_PATH = path.normalize(path.join(process.cwd(), \"lib\", GOLANG_ZIP_NAME));\n\nexport {\n  GOLANG_ZIP_PATH,\n  FILENAME_BLACKLIST,\n  PTY_PATH,\n  LOCAL_PRESET_LANG_PATH,\n  FRPC_PATH,\n  IGNORE,\n  ZIP_TIMEOUT_SECONDS\n};\n","export default class InstanceCommand {\n  constructor(public info?: string) {}\n  async exec(instance: any): Promise<any> {}\n  async stop(instance: any) {}\n}\n","import { $t } from \"../../../i18n\";\n\nexport function commandStringToArray(cmd: string) {\n  const QUOTES_KEY = \"{quotes}\";\n  let start = 0;\n  let len = cmd.length;\n  const cmdArray: string[] = [];\n  function _analyze() {\n    for (let index = start; index < len; index++) {\n      const ch = cmd[index];\n      if (ch === \" \") {\n        findSpace(index);\n        start++;\n        continue;\n      }\n      if (ch === '\"') {\n        index = findQuotes(index);\n      }\n      if (index + 1 >= len) {\n        findEnd();\n        break;\n      }\n    }\n  }\n\n  function findEnd() {\n    return cmdArray.push(cmd.slice(start));\n  }\n\n  function findSpace(endPoint: number) {\n    if (endPoint != start) {\n      const elem = cmd.slice(start, endPoint);\n      start = endPoint;\n      return cmdArray.push(elem);\n    }\n  }\n\n  function findQuotes(p: number) {\n    for (let index = p + 1; index < len; index++) {\n      const ch = cmd[index];\n      if (ch === '\"') return index;\n    }\n    throw new Error($t(\"TXT_CODE_command.quotes\"));\n  }\n\n  _analyze();\n\n  if (cmdArray.length == 0) {\n    return [];\n  }\n\n  for (const index in cmdArray) {\n    const element = cmdArray[index];\n    if (element[0] === '\"' && element[element.length - 1] === '\"')\n      cmdArray[index] = element.slice(1, element.length - 1);\n    while (cmdArray[index].indexOf(QUOTES_KEY) != -1)\n      cmdArray[index] = cmdArray[index].replace(QUOTES_KEY, '\"');\n  }\n\n  return cmdArray;\n}\n","import Instance from \"../instance/instance\";\nimport InstanceCommand from \"./base/command\";\n\nexport default class SendCommand extends InstanceCommand {\n  constructor(public readonly cmd: string) {\n    super(\"SendCommand\");\n  }\n\n  async exec(instance: Instance) {\n    return await instance.execPreset(\"command\", this.cmd);\n  }\n}\n","import Instance from \"../instance/instance\";\nimport InstanceCommand from \"./base/command\";\nimport NullCommand from \"./nullfunc\";\nimport GeneralStartCommand from \"./general/general_start\";\nimport GeneralStopCommand from \"./general/general_stop\";\nimport GeneralKillCommand from \"./general/general_kill\";\nimport GeneralSendCommand from \"./general/general_command\";\nimport GeneralRestartCommand from \"./general/general_restart\";\nimport DockerStartCommand from \"./docker/docker_start\";\nimport TimeCheck from \"./task/time\";\nimport GeneralUpdateCommand from \"./general/general_update\";\nimport PtyStartCommand from \"./pty/pty_start\";\nimport PtyStopCommand from \"./pty/pty_stop\";\nimport OpenFrpTask from \"./task/openfrp\";\nimport RconCommand from \"./steam/rcon_command\";\nimport DockerResizeCommand from \"./docker/docker_pty_resize\";\nimport PtyResizeCommand from \"./pty/pty_resize\";\nimport GeneralInstallCommand from \"./general/general_install\";\nimport PingJavaMinecraftServerCommand from \"./minecraft/mc_ping\";\nimport PingMinecraftServerTask from \"./task/mc_players\";\n\n// If you add a new \"Preset\", Please add the definition here.\nexport type IPresetCommand =\n  | \"start\"\n  | \"stop\"\n  | \"restart\"\n  | \"kill\"\n  | \"update\"\n  | \"refreshPlayers\"\n  | \"command\"\n  | \"resize\"\n  | \"install\";\n\n// Instance function dispatcher\n// Dispatch and assign different functions according to different types\nexport default class FunctionDispatcher extends InstanceCommand {\n  constructor() {\n    super(\"FunctionDispatcher\");\n  }\n\n  async exec(instance: Instance) {\n    // initialize all modules\n    instance.lifeCycleTaskManager.clearLifeCycleTask();\n    instance.clearPreset();\n\n    // the component that the instance must mount\n    instance.lifeCycleTaskManager.registerLifeCycleTask(new TimeCheck());\n    instance.lifeCycleTaskManager.registerLifeCycleTask(new OpenFrpTask());\n\n    // Instance general preset capabilities\n    instance.setPreset(\"command\", new GeneralSendCommand());\n    instance.setPreset(\"stop\", new GeneralStopCommand());\n    instance.setPreset(\"kill\", new GeneralKillCommand());\n    instance.setPreset(\"restart\", new GeneralRestartCommand());\n    instance.setPreset(\"update\", new GeneralUpdateCommand());\n    instance.setPreset(\"refreshPlayers\", new NullCommand());\n    instance.setPreset(\"install\", new GeneralInstallCommand());\n\n    // Preset the basic operation mode according to the instance startup type\n    if (!instance.config.processType || instance.config.processType === \"general\") {\n      instance.setPreset(\"start\", new GeneralStartCommand());\n    }\n\n    // Enable emulated terminal mode\n    if (instance.config.terminalOption.pty && instance.config.processType === \"general\") {\n      instance.setPreset(\"start\", new PtyStartCommand());\n      instance.setPreset(\"stop\", new PtyStopCommand());\n      instance.setPreset(\"resize\", new PtyResizeCommand());\n    }\n    // Whether to enable Docker PTY mode\n    if (instance.config.processType === \"docker\") {\n      instance.setPreset(\"start\", new DockerStartCommand());\n      instance.setPreset(\"resize\", new DockerResizeCommand());\n    }\n    if (instance.config.enableRcon) {\n      instance.setPreset(\"command\", new RconCommand());\n    }\n\n    // Minecraft Ping\n    if (instance.config.type.includes(Instance.TYPE_MINECRAFT_JAVA)) {\n      instance.setPreset(\"refreshPlayers\", new PingJavaMinecraftServerCommand());\n      instance.lifeCycleTaskManager.registerLifeCycleTask(new PingMinecraftServerTask());\n    }\n  }\n}\n","import Instance from \"../../instance/instance\";\nimport InstanceCommand from \"../base/command\";\nimport { DockerProcessAdapter } from \"../../../service/docker_process_service\";\n\nexport default class DockerResizeCommand extends InstanceCommand {\n  constructor() {\n    super(\"ResizeTTY\");\n  }\n\n  async exec(instance: Instance): Promise<any> {\n    const dockerProcess = instance?.process as Partial<DockerProcessAdapter>;\n    if (typeof dockerProcess?.container?.resize === \"function\") {\n      const { w, h } = instance.computeTerminalSize();\n      await dockerProcess?.container?.resize({\n        h,\n        w\n      });\n    }\n  }\n}\n","import Instance from \"../../instance/instance\";\nimport InstanceCommand from \"../base/command\";\nimport { t } from \"i18next\";\nimport { DefaultDocker } from \"../../../service/docker_service\";\n\nexport async function checkImage(name: string) {\n  const docker = new DefaultDocker();\n  try {\n    const image = docker.getImage(name);\n    const info = await image.inspect();\n    return info.Size > 0 ? true : false;\n  } catch (error: any) {\n    return false;\n  }\n}\n\nexport default class DockerPullCommand extends InstanceCommand {\n  constructor() {\n    super(\"DockerPullCommand\");\n  }\n\n  private stopFlag = false;\n\n  private stopped(instance: Instance) {\n    this.stopFlag = true;\n    instance.asynchronousTask = undefined;\n  }\n\n  private awaitImageDone(instance: Instance, name: string) {\n    return new Promise((resolve, reject) => {\n      let count = 0;\n      const task = setInterval(async () => {\n        count++;\n        instance.println(\"CONTAINER\", t(\"TXT_CODE_977cb449\"));\n        if (await checkImage(name)) {\n          clearInterval(task);\n          resolve(true);\n        }\n        if (count >= 20 * 15) {\n          clearInterval(task);\n          reject(new Error(t(\"TXT_CODE_9cae6f92\")));\n        }\n        if (this.stopFlag) {\n          clearInterval(task);\n          reject(new Error(t(\"TXT_CODE_361a79c6\")));\n        }\n      }, 3 * 1000);\n    });\n  }\n\n  async exec(instance: Instance) {\n    const imageName = instance.config.docker.image;\n    if (!imageName) throw new Error(t(\"TXT_CODE_17be5f70\"));\n    const cachedStartCount = instance.startCount;\n    // If the image exists, there is no need to pull again.\n    if (await checkImage(imageName)) return;\n\n    try {\n      const docker = new DefaultDocker();\n      instance.println(\"CONTAINER\", t(\"TXT_CODE_2fa46b8c\") + imageName);\n      instance.asynchronousTask = this;\n\n      await docker.pull(imageName, {});\n\n      await this.awaitImageDone(instance, imageName);\n      if (cachedStartCount !== instance.startCount) return;\n      instance.println(\"CONTAINER\", t(\"TXT_CODE_c68b0bef\"));\n    } catch (err: any) {\n      if (cachedStartCount !== instance.startCount) return;\n      throw new Error([t(\"TXT_CODE_db37b7f9\"), err?.message].join(\"\\n\"));\n    } finally {\n      this.stopped(instance);\n    }\n  }\n\n  async stop(instance: Instance): Promise<void> {\n    this.stopped(instance);\n  }\n}\n","import { $t } from \"../../../i18n\";\nimport Instance from \"../../instance/instance\";\nimport InstanceCommand from \"../base/command\";\nimport logger from \"../../../service/log\";\nimport fs from \"fs-extra\";\nimport DockerPullCommand from \"./docker_pull\";\nimport {\n  DockerProcessAdapter,\n  SetupDockerContainer,\n  StartupDockerProcessError\n} from \"../../../service/docker_process_service\";\n\nexport default class DockerStartCommand extends InstanceCommand {\n  constructor() {\n    super(\"DockerStartCommand\");\n  }\n\n  async exec(instance: Instance, source = \"Unknown\") {\n    if (!instance.hasCwdPath() || !instance.config.ie || !instance.config.oe)\n      throw new StartupDockerProcessError($t(\"TXT_CODE_a6424dcc\"));\n    if (!fs.existsSync(instance.absoluteCwdPath()))\n      throw new StartupDockerProcessError($t(\"TXT_CODE_instance.dirNoE\"));\n\n    // Docker Image check\n    try {\n      await instance.forceExec(new DockerPullCommand());\n    } catch (error: any) {\n      throw error;\n    }\n\n    // Docker docks to the process adapter\n    const processAdapter = new DockerProcessAdapter(new SetupDockerContainer(instance));\n    await processAdapter.start({\n      isTty: instance.config.terminalOption.pty,\n      w: instance.config.terminalOption.ptyWindowCol,\n      h: instance.config.terminalOption.ptyWindowCol\n    });\n\n    instance.started(processAdapter);\n    logger.info(\n      $t(\"TXT_CODE_instance.successful\", {\n        v: `${instance.config.nickname} ${instance.instanceUuid}`\n      })\n    );\n  }\n}\n","import { $t } from \"../../../i18n\";\n\nimport Instance from \"../../instance/instance\";\nimport { encode } from \"iconv-lite\";\nimport InstanceCommand from \"../base/command\";\n\nexport default class GeneralSendCommand extends InstanceCommand {\n  constructor() {\n    super(\"SendCommand\");\n  }\n\n  async exec(instance: Instance, buf?: any): Promise<any> {\n    // The server shutdown command needs to send a command, but before the server shutdown command is executed, the status will be set to the shutdown state.\n    // So here the command can only be executed by whether the process exists or not\n    if (instance?.process) {\n      instance.process.write(encode(buf, instance.config.oe));\n      if (instance.config.crlf === 2) return instance.process.write(\"\\r\\n\");\n      return instance.process.write(\"\\n\");\n    } else {\n      instance.failure(new Error($t(\"TXT_CODE_command.instanceNotOpen\")));\n    }\n  }\n}\n","import { $t } from \"../../../i18n\";\nimport Instance from \"../../instance/instance\";\nimport InstanceCommand from \"../base/command\";\nimport fs from \"fs-extra\";\nimport { QuickInstallTask } from \"../../../service/async_task_service/quick_install\";\nimport { IQuickStartPackages } from \"common/global\";\n\nexport default class GeneralInstallCommand extends InstanceCommand {\n  private process?: QuickInstallTask;\n\n  constructor() {\n    super(\"GeneralInstallCommand\");\n  }\n\n  private stopped(instance: Instance) {\n    instance.asynchronousTask = undefined;\n    instance.setLock(false);\n    instance.status(Instance.STATUS_STOP);\n  }\n\n  async exec(instance: Instance, params?: IQuickStartPackages) {\n    if (instance.status() !== Instance.STATUS_STOP)\n      return instance.failure(new Error($t(\"TXT_CODE_general_update.statusErr_notStop\")));\n    if (instance.asynchronousTask)\n      return instance.failure(new Error($t(\"TXT_CODE_general_update.statusErr_otherProgress\")));\n    if (!params) throw new Error(\"GeneralInstallCommand: No params\");\n    try {\n      instance.setLock(true);\n      instance.status(Instance.STATUS_BUSY);\n      instance.println($t(\"TXT_CODE_1704ea49\"), $t(\"TXT_CODE_cbc235ad\"));\n      if (instance.hasCwdPath()) {\n        await fs.remove(instance.absoluteCwdPath());\n        await fs.mkdirs(instance.absoluteCwdPath());\n      }\n      instance.println($t(\"TXT_CODE_1704ea49\"), $t(\"TXT_CODE_906c5d6a\"));\n      this.process = new QuickInstallTask(\n        instance.config.nickname,\n        params.targetLink,\n        params.setupInfo,\n        instance\n      );\n      instance.asynchronousTask = this;\n      instance.println($t(\"TXT_CODE_1704ea49\"), $t(\"TXT_CODE_b9ca022b\"));\n      await this.process.start();\n      await this.process.wait();\n\n      instance.println($t(\"TXT_CODE_1704ea49\"), $t(\"TXT_CODE_f220ed78\"));\n    } catch (err: any) {\n      instance.println(\n        $t(\"TXT_CODE_general_update.update\"),\n        $t(\"TXT_CODE_general_update.error\", { err })\n      );\n    } finally {\n      this.stopped(instance);\n    }\n  }\n\n  async stop(instance: Instance): Promise<void> {\n    instance.println(\n      $t(\"TXT_CODE_general_update.update\"),\n      $t(\"TXT_CODE_general_update.killProcess\")\n    );\n    this.stopped(instance);\n    await this.process?.stop();\n  }\n}\n","import logger from \"../../../service/log\";\nimport Instance from \"../../instance/instance\";\nimport InstanceCommand from \"../base/command\";\n\nexport default class GeneralKillCommand extends InstanceCommand {\n  constructor() {\n    super(\"KillCommand\");\n  }\n\n  async exec(instance: Instance) {\n    const task = instance?.asynchronousTask;\n    if (task && task.stop) {\n      task\n        .stop(instance)\n        .then(() => {})\n        .catch((err) => {\n          logger.error(`Instance ${instance.config.nickname} asynchronousTask stop error:`, err);\n        });\n    }\n    if (instance.process) {\n      await instance.process.kill(\"SIGKILL\");\n    }\n    instance.setLock(false);\n  }\n}\n","import { $t } from \"../../../i18n\";\nimport Instance from \"../../instance/instance\";\nimport InstanceCommand from \"../base/command\";\n\nexport default class GeneralRestartCommand extends InstanceCommand {\n  constructor() {\n    super(\"GeneralRestartCommand\");\n  }\n\n  async exec(instance: Instance) {\n    try {\n      instance.println(\"INFO\", $t(\"TXT_CODE_restart.start\"));\n      await instance.execPreset(\"stop\");\n      instance.setLock(true);\n      const startCount = instance.startCount;\n      // Check the instance status every second,\n      // if the instance status is stopped, restart the server immediately\n      const task = setInterval(async () => {\n        try {\n          if (startCount !== instance.startCount) {\n            throw new Error($t(\"TXT_CODE_restart.error1\"));\n          }\n          if (\n            instance.status() !== Instance.STATUS_STOPPING &&\n            instance.status() !== Instance.STATUS_STOP\n          ) {\n            throw new Error($t(\"TXT_CODE_restart.error2\"));\n          }\n          if (instance.status() === Instance.STATUS_STOP) {\n            instance.println(\"INFO\", $t(\"TXT_CODE_restart.restarting\"));\n            await instance.execPreset(\"start\");\n            instance.setLock(false);\n            clearInterval(task);\n          }\n        } catch (error: any) {\n          clearInterval(task);\n          instance.setLock(false);\n          instance.failure(error);\n        }\n      }, 1000);\n    } catch (error: any) {\n      instance.setLock(false);\n      instance.failure(error);\n    }\n  }\n}\n","import { $t } from \"../../../i18n\";\nimport os from \"os\";\nimport Instance from \"../../instance/instance\";\nimport logger from \"../../../service/log\";\nimport fs from \"fs-extra\";\nimport InstanceCommand from \"../base/command\";\nimport EventEmitter from \"events\";\nimport { IInstanceProcess } from \"../../instance/interface\";\nimport { ChildProcess, exec, spawn } from \"child_process\";\nimport { commandStringToArray } from \"../base/command_parser\";\nimport { killProcess } from \"common\";\n\n// Error exception at startup\nclass StartupError extends Error {\n  constructor(msg: string) {\n    super(msg);\n  }\n}\n\n// Docker process adapter\nclass ProcessAdapter extends EventEmitter implements IInstanceProcess {\n  pid?: number | string;\n\n  constructor(private process: ChildProcess) {\n    super();\n    this.pid = this.process.pid;\n    process.stdout?.on(\"data\", (text) => this.emit(\"data\", text));\n    process.stderr?.on(\"data\", (text) => this.emit(\"data\", text));\n    process.on(\"exit\", (code) => this.emit(\"exit\", code));\n  }\n\n  public write(data?: string) {\n    return this.process.stdin?.write(data);\n  }\n\n  public kill(s?: any) {\n    if (this.pid) return killProcess(this.pid, this.process, s);\n  }\n\n  public async destroy() {\n    // remove all dynamically added event listeners\n    for (const n of this.eventNames()) this.removeAllListeners(n);\n    if (this.process.stdout)\n      for (const eventName of this.process.stdout.eventNames())\n        this.process.stdout.removeAllListeners(eventName);\n    if (this.process.stderr)\n      for (const eventName of this.process.stderr.eventNames())\n        this.process.stderr.removeAllListeners(eventName);\n    if (this.process)\n      for (const eventName of this.process.eventNames()) this.process.removeAllListeners(eventName);\n    this.process?.stdout?.destroy();\n    this.process?.stderr?.destroy();\n    if (this.process?.exitCode === null) {\n      this.process.kill(\"SIGTERM\");\n      this.process.kill(\"SIGKILL\");\n    }\n  }\n}\n\nexport default class GeneralStartCommand extends InstanceCommand {\n  constructor() {\n    super(\"StartCommand\");\n  }\n\n  async exec(instance: Instance, source = \"Unknown\") {\n    if (\n      (!instance.config.startCommand && instance.config.processType === \"general\") ||\n      !instance.hasCwdPath() ||\n      !instance.config.ie ||\n      !instance.config.oe\n    )\n      throw new StartupError($t(\"TXT_CODE_general_start.instanceConfigErr\"));\n    if (!fs.existsSync(instance.absoluteCwdPath()))\n      throw new StartupError($t(\"TXT_CODE_general_start.cwdPathNotExist\"));\n\n    // command parsing\n    const commandList = commandStringToArray(instance.config.startCommand);\n    const commandExeFile = commandList[0];\n    const commandParameters = commandList.slice(1);\n    if (commandList.length === 0) {\n      throw new StartupError($t(\"TXT_CODE_general_start.cmdEmpty\"));\n    }\n\n    logger.info(\"----------------\");\n    logger.info($t(\"TXT_CODE_general_start.startInstance\", { source: source }));\n    logger.info($t(\"TXT_CODE_general_start.instanceUuid\", { uuid: instance.instanceUuid }));\n    logger.info($t(\"TXT_CODE_general_start.startCmd\", { cmdList: JSON.stringify(commandList) }));\n    logger.info($t(\"TXT_CODE_general_start.cwd\", { cwd: instance.absoluteCwdPath() }));\n    logger.info(\"----------------\");\n\n    // create child process\n    // Parameter 1 directly passes the process name or path (including spaces) without double quotes\n    const subProcess = spawn(commandExeFile, commandParameters, {\n      cwd: instance.absoluteCwdPath(),\n      stdio: \"pipe\",\n      windowsHide: true,\n      env: process.env\n    });\n\n    // child process creation result check\n    if (!subProcess || !subProcess.pid) {\n      instance.println(\n        \"ERROR\",\n        $t(\"TXT_CODE_general_start.pidErr\", {\n          startCommand: instance.config.startCommand,\n          commandExeFile: commandExeFile,\n          commandParameters: JSON.stringify(commandParameters)\n        })\n      );\n      throw new StartupError($t(\"TXT_CODE_general_start.startErr\"));\n    }\n\n    // create process adapter\n    const processAdapter = new ProcessAdapter(subProcess);\n\n    // generate open event\n    instance.started(processAdapter);\n    logger.info(\n      $t(\"TXT_CODE_general_start.startSuccess\", {\n        instanceUuid: instance.instanceUuid,\n        pid: subProcess.pid\n      })\n    );\n    instance.println(\"INFO\", $t(\"TXT_CODE_general_start.startOrdinaryTerminal\"));\n  }\n}\n","import { $t } from \"../../../i18n\";\nimport Instance from \"../../instance/instance\";\nimport InstanceCommand from \"../base/command\";\nimport SendCommand from \"../cmd\";\nimport RconCommand from \"../steam/rcon_command\";\n\nexport default class GeneralStopCommand extends InstanceCommand {\n  constructor() {\n    super(\"StopCommand\");\n  }\n\n  async exec(instance: Instance) {\n    const stopCommand = instance.config.stopCommand;\n    if (instance.status() === Instance.STATUS_STOP || !instance.process)\n      return instance.failure(new Error($t(\"TXT_CODE_general_stop.notRunning\")));\n\n    instance.status(Instance.STATUS_STOPPING);\n\n    const stopCommandList = stopCommand.split(\"\\n\");\n    for (const stopCommand of stopCommandList) {\n      if (stopCommand.toLowerCase() == \"^c\") {\n        instance.process.kill(\"SIGINT\");\n      } else if (instance.config.enableRcon) {\n        await instance.exec(new RconCommand(stopCommand));\n      } else {\n        await instance.exec(new SendCommand(stopCommand));\n      }\n    }\n\n    instance.print(\"\\n\");\n    instance.println(\"INFO\", $t(\"TXT_CODE_general_stop.execCmd\", { stopCommand }));\n    const cacheStartCount = instance.startCount;\n\n    // If the instance is still in the stopped state after 10 minutes, restore the state\n    setTimeout(() => {\n      if (\n        instance.status() === Instance.STATUS_STOPPING &&\n        instance.startCount === cacheStartCount\n      ) {\n        instance.println(\"ERROR\", $t(\"TXT_CODE_general_stop.stopErr\"));\n        instance.status(Instance.STATUS_RUNNING);\n      }\n    }, 1000 * 60 * 10);\n\n    return instance;\n  }\n}\n","import { $t } from \"../../../i18n\";\nimport logger from \"../../../service/log\";\nimport Instance from \"../../instance/instance\";\nimport InstanceCommand from \"../base/command\";\nimport { InstanceUpdateAction } from \"../../../service/instance_update_action\";\n\nexport default class GeneralUpdateCommand extends InstanceCommand {\n  private updateTask?: InstanceUpdateAction;\n\n  constructor() {\n    super(\"GeneralUpdateCommand\");\n  }\n\n  private stopped(instance: Instance) {\n    instance.asynchronousTask = undefined;\n    instance.setLock(false);\n    instance.status(Instance.STATUS_STOP);\n  }\n\n  async exec(instance: Instance) {\n    if (instance.status() !== Instance.STATUS_STOP && instance.status() !== Instance.STATUS_BUSY)\n      return instance.failure(new Error($t(\"TXT_CODE_general_update.statusErr_notStop\")));\n    if (instance.asynchronousTask)\n      return instance.failure(new Error($t(\"TXT_CODE_general_update.statusErr_otherProgress\")));\n\n    try {\n      instance.setLock(true);\n      instance.asynchronousTask = this;\n      instance.status(Instance.STATUS_BUSY);\n\n      this.updateTask = new InstanceUpdateAction(instance);\n      await this.updateTask.start();\n      await this.updateTask.wait();\n    } catch (err: any) {\n      instance.println(\n        $t(\"TXT_CODE_general_update.update\"),\n        $t(\"TXT_CODE_general_update.error\", { err: err })\n      );\n    } finally {\n      this.stopped(instance);\n    }\n  }\n\n  async stop(instance: Instance): Promise<void> {\n    instance.asynchronousTask = undefined;\n    logger.info(\n      $t(\"TXT_CODE_general_update.terminateUpdate\", { instanceUuid: instance.instanceUuid })\n    );\n    instance.println(\n      $t(\"TXT_CODE_general_update.update\"),\n      $t(\"TXT_CODE_general_update.terminateUpdate\", { instanceUuid: instance.instanceUuid })\n    );\n    instance.println(\n      $t(\"TXT_CODE_general_update.update\"),\n      $t(\"TXT_CODE_general_update.killProcess\")\n    );\n\n    await this.updateTask?.stop();\n  }\n}\n","import Instance from \"../instance/instance\";\nimport InstanceCommand from \"./base/command\";\n\nexport default class KillCommand extends InstanceCommand {\n  constructor() {\n    super(\"KillCommand\");\n  }\n\n  async exec(instance: Instance) {\n    // If the automatic restart function is enabled, the setting is ignored once\n    if (instance.config.eventTask && instance.config.eventTask.autoRestart)\n      instance.config.eventTask.ignore = true;\n\n    // send stop command\n    return await instance.execPreset(\"kill\");\n  }\n}\n","import Instance from \"../../instance/instance\";\nimport InstanceCommand from \"../base/command\";\nimport { MCServerStatus, toNumber } from \"common\";\n\nexport default class PingJavaMinecraftServerCommand extends InstanceCommand {\n  constructor() {\n    super(\"PingJavaMinecraftServerCommand\");\n  }\n\n  async exec(instance: Instance) {\n    const host = instance.config.pingConfig.ip || \"localhost\";\n    try {\n      if (instance.config.pingConfig.port) {\n        const result = await new MCServerStatus(instance.config.pingConfig.port, host).getStatus();\n        if (result.online) {\n          instance.info.mcPingOnline = true;\n          instance.info.currentPlayers = toNumber(result.current_players) ?? 0;\n          instance.info.maxPlayers = toNumber(result.max_players) ?? 0;\n          instance.info.version = result.version;\n          instance.info.latency = toNumber(result.latency) ?? 0;\n        } else {\n          instance.resetPingInfo();\n        }\n        return result;\n      }\n    } catch (error) {\n      instance.resetPingInfo();\n      // ignore error\n    }\n    return null;\n  }\n}\n","import InstanceCommand from \"./base/command\";\n\nexport default class NullCommand extends InstanceCommand {\n  constructor() {\n    super(\"NullCommand\");\n  }\n  async exec() {\n    // Do nothing.....\n  }\n}\n","import { ProcessConfig } from \"../instance/process_config\";\nimport pidusage from \"pidusage\";\nimport InstanceCommand from \"./base/command\";\nimport Instance from \"../instance/instance\";\n\nexport default class ProcessInfoCommand extends InstanceCommand {\n  constructor() {\n    super(\"ProcessInfo\");\n  }\n  async exec(instance: Instance): Promise<Object> {\n    let info: any = {\n      cpu: 0, // percentage (from 0 to 100*vcore)\n      memory: 0, // bytes\n      ppid: 0, // PPID\n      pid: 0, // PID\n      ctime: 0, // ms user + system time\n      elapsed: 0, // ms since the start of the process\n      timestamp: 0 // ms since epoch\n    };\n    if (instance.process && instance.process.pid) {\n      info = await pidusage(instance.process.pid);\n    }\n    return info;\n  }\n}\n","import Instance from \"../../instance/instance\";\nimport InstanceCommand from \"../base/command\";\nimport { GoPtyProcessAdapter } from \"./pty_start\";\n\nexport default class PtyResizeCommand extends InstanceCommand {\n  constructor() {\n    super(\"ResizeTTY\");\n  }\n\n  async exec(instance: Instance): Promise<any> {\n    const pty = instance.process as Partial<GoPtyProcessAdapter>;\n    if (typeof pty?.resize === \"function\") {\n      const { w, h } = instance.computeTerminalSize();\n      pty?.resize(w, h);\n    }\n  }\n}\n","import { $t } from \"../../../i18n\";\nimport os from \"os\";\nimport Instance from \"../../instance/instance\";\nimport logger from \"../../../service/log\";\nimport fs from \"fs-extra\";\nimport path from \"path\";\nimport readline from \"readline\";\nimport InstanceCommand from \"../base/command\";\nimport EventEmitter from \"events\";\nimport { IInstanceProcess } from \"../../instance/interface\";\nimport { ChildProcess, ChildProcessWithoutNullStreams, exec, spawn } from \"child_process\";\nimport { commandStringToArray } from \"../base/command_parser\";\nimport { killProcess } from \"common\";\nimport FunctionDispatcher from \"../dispatcher\";\nimport { PTY_PATH } from \"../../../const\";\nimport { Writable } from \"stream\";\nimport { v4 } from \"uuid\";\n\ninterface IPtySubProcessCfg {\n  pid: number;\n}\n\n// Error exception at startup\nclass StartupError extends Error {\n  constructor(msg: string) {\n    super(msg);\n  }\n}\n\nconst GO_PTY_MSG_TYPE = {\n  RESIZE: 0x04\n};\n\n// process adapter\nexport class GoPtyProcessAdapter extends EventEmitter implements IInstanceProcess {\n  private pipeClient?: Writable;\n\n  constructor(\n    private readonly process: ChildProcess,\n    public readonly pid: number,\n    public readonly pipeName: string\n  ) {\n    super();\n    process.stdout?.on(\"data\", (text) => this.emit(\"data\", text));\n    process.stderr?.on(\"data\", (text) => this.emit(\"data\", text));\n    process.on(\"exit\", (code) => this.emit(\"exit\", code));\n    try {\n      this.initNamedPipe();\n    } catch (error: any) {\n      logger.error(`Init Pipe Err: ${pipeName}, ${error}`);\n    }\n  }\n\n  private initNamedPipe() {\n    const fd = fs.openSync(this.pipeName, \"w\");\n    const writePipe = fs.createWriteStream(\"\", { fd });\n    writePipe.on(\"close\", () => {});\n    writePipe.on(\"end\", () => {});\n    writePipe.on(\"error\", (err) => {\n      logger.error(\"Pipe error:\", this.pipeName, err);\n    });\n    this.pipeClient = writePipe;\n  }\n\n  public resize(w: number, h: number) {\n    const MAX_W = 900;\n    if (w > MAX_W) w = MAX_W;\n    if (h > MAX_W) h = MAX_W;\n    const resizeStruct = JSON.stringify({ width: Number(w), height: Number(h) });\n    const len = resizeStruct.length;\n    const lenBuff = Buffer.alloc(2);\n    lenBuff.writeInt16BE(len, 0);\n    const buf = Buffer.from([GO_PTY_MSG_TYPE.RESIZE, ...lenBuff, ...Buffer.from(resizeStruct)]);\n    this.writeToNamedPipe(buf);\n  }\n\n  public writeToNamedPipe(data: Buffer) {\n    this.pipeClient?.write(data);\n  }\n\n  public write(data?: string) {\n    return this.process.stdin?.write(data);\n  }\n\n  public kill(s?: any) {\n    return killProcess(this.pid, this.process, s);\n  }\n\n  public async destroy() {\n    for (const n of this.eventNames()) this.removeAllListeners(n);\n    if (this.process.stdout)\n      for (const eventName of this.process.stdout.eventNames())\n        this.process.stdout.removeAllListeners(eventName);\n    if (this.process.stderr)\n      for (const eventName of this.process.stderr.eventNames())\n        this.process.stderr.removeAllListeners(eventName);\n    if (this.process)\n      for (const eventName of this.process.eventNames())\n        this.process.stdout?.removeAllListeners(eventName);\n    if (this.pipeClient)\n      for (const eventName of this.pipeClient.eventNames())\n        this.pipeClient.removeAllListeners(eventName);\n    this.pipeClient?.destroy();\n    this.process?.stdout?.destroy();\n    this.process?.stderr?.destroy();\n    if (this.process?.exitCode === null) {\n      this.process.kill(\"SIGTERM\");\n      this.process.kill(\"SIGKILL\");\n    }\n    fs.remove(this.pipeName, (err) => {});\n  }\n}\n\nexport default class PtyStartCommand extends InstanceCommand {\n  constructor() {\n    super(\"PtyStartCommand\");\n  }\n\n  readPtySubProcessConfig(subProcess: ChildProcessWithoutNullStreams): Promise<IPtySubProcessCfg> {\n    return new Promise((r, j) => {\n      const errConfig = {\n        pid: 0\n      };\n      const rl = readline.createInterface({\n        input: subProcess.stdout,\n        crlfDelay: Infinity\n      });\n      rl.on(\"line\", (line = \"\") => {\n        try {\n          rl.removeAllListeners();\n          const cfg = JSON.parse(line) as IPtySubProcessCfg;\n          if (cfg.pid == null) throw new Error(\"Error\");\n          r(cfg);\n        } catch (error: any) {\n          r(errConfig);\n        }\n      });\n      setTimeout(() => {\n        r(errConfig);\n      }, 1000 * 3);\n    });\n  }\n\n  async exec(instance: Instance, source = \"Unknown\") {\n    if (\n      !instance.config.startCommand ||\n      !instance.hasCwdPath() ||\n      !instance.config.ie ||\n      !instance.config.oe\n    )\n      throw new StartupError($t(\"TXT_CODE_pty_start.cmdErr\"));\n    if (!fs.existsSync(instance.absoluteCwdPath()))\n      throw new StartupError($t(\"TXT_CODE_pty_start.cwdNotExist\"));\n    if (!path.isAbsolute(path.normalize(instance.absoluteCwdPath())))\n      throw new StartupError($t(\"TXT_CODE_pty_start.mustAbsolutePath\"));\n\n    // PTY mode correctness check\n    logger.info($t(\"TXT_CODE_pty_start.startPty\", { source: source }));\n    let checkPtyEnv = true;\n\n    if (!fs.existsSync(PTY_PATH)) {\n      instance.println(\"ERROR\", $t(\"TXT_CODE_pty_start.startErr\"));\n      checkPtyEnv = false;\n    }\n\n    if (checkPtyEnv === false) {\n      // Close the PTY type, reconfigure the instance function group, and restart the instance\n      instance.config.terminalOption.pty = false;\n      await instance.forceExec(new FunctionDispatcher());\n      await instance.execPreset(\"start\", source); // execute the preset command directly\n      return;\n    }\n\n    // Set the startup state & increase the number of startups\n    instance.setLock(true);\n    instance.status(Instance.STATUS_STARTING);\n    instance.startCount++;\n\n    // command parsing\n    let commandList: string[] = [];\n    if (os.platform() === \"win32\") {\n      // windows: cmd.exe  /c {{startCommand}}\n      commandList = [instance.config.startCommand];\n    } else {\n      commandList = commandStringToArray(instance.config.startCommand);\n    }\n\n    if (commandList.length === 0)\n      return instance.failure(new StartupError($t(\"TXT_CODE_pty_start.cmdEmpty\")));\n\n    const pipeId = v4();\n    const pipeLinuxDir = \"/tmp/mcsmanager-instance-pipe\";\n    if (!fs.existsSync(pipeLinuxDir)) fs.mkdirsSync(pipeLinuxDir);\n    let pipeName = `${pipeLinuxDir}/pipe-${pipeId}`;\n    if (os.platform() === \"win32\") {\n      pipeName = `\\\\\\\\.\\\\pipe\\\\mcsmanager-${pipeId}`;\n    }\n\n    const ptyParameter = [\n      \"-size\",\n      `${instance.config.terminalOption.ptyWindowCol},${instance.config.terminalOption.ptyWindowRow}`,\n      \"-coder\",\n      instance.config.oe,\n      \"-dir\",\n      instance.absoluteCwdPath(),\n      \"-fifo\",\n      pipeName,\n      \"-cmd\",\n      JSON.stringify(commandList)\n    ];\n\n    logger.info(\"----------------\");\n    logger.info($t(\"TXT_CODE_pty_start.sourceRequest\", { source: source }));\n    logger.info($t(\"TXT_CODE_pty_start.instanceUuid\", { instanceUuid: instance.instanceUuid }));\n    logger.info($t(\"TXT_CODE_pty_start.startCmd\", { cmd: commandList.join(\" \") }));\n    logger.info($t(\"TXT_CODE_pty_start.ptyPath\", { path: PTY_PATH }));\n    logger.info($t(\"TXT_CODE_pty_start.ptyParams\", { param: ptyParameter.join(\" \") }));\n    logger.info($t(\"TXT_CODE_pty_start.ptyCwd\", { cwd: instance.absoluteCwdPath() }));\n    logger.info(\"----------------\");\n\n    // create pty child process\n    // Parameter 1 directly passes the process name or path (including spaces) without double quotes\n    const subProcess = spawn(PTY_PATH, ptyParameter, {\n      cwd: path.dirname(PTY_PATH),\n      stdio: \"pipe\",\n      windowsHide: true,\n      env: {\n        ...process.env,\n        TERM: \"xterm-256color\"\n      }\n    });\n\n    // pty child process creation result check\n    if (!subProcess || !subProcess.pid) {\n      instance.println(\n        \"ERROR\",\n        $t(\"TXT_CODE_pty_start.pidErr\", {\n          startCommand: instance.config.startCommand,\n          path: PTY_PATH,\n          params: JSON.stringify(ptyParameter)\n        })\n      );\n      throw new StartupError($t(\"TXT_CODE_pty_start.instanceStartErr\"));\n    }\n\n    // create process adapter\n    const ptySubProcessCfg = await this.readPtySubProcessConfig(subProcess);\n    const processAdapter = new GoPtyProcessAdapter(subProcess, ptySubProcessCfg.pid, pipeName);\n    logger.info(`pty.exe subprocess PID: ${JSON.stringify(ptySubProcessCfg)}`);\n\n    // After reading the configuration, Need to check the process status\n    // The \"processAdapter.pid\" here represents the process created by the PTY process\n    if (subProcess.exitCode !== null || processAdapter.pid == null || processAdapter.pid === 0) {\n      instance.println(\n        \"ERROR\",\n        $t(\"TXT_CODE_pty_start.pidErr\", {\n          startCommand: instance.config.startCommand,\n          path: PTY_PATH,\n          params: JSON.stringify(ptyParameter)\n        })\n      );\n      throw new StartupError($t(\"TXT_CODE_pty_start.instanceStartErr\"));\n    }\n\n    // generate open event\n    instance.started(processAdapter);\n\n    logger.info(\n      $t(\"TXT_CODE_pty_start.startSuccess\", {\n        instanceUuid: instance.instanceUuid,\n        pid: ptySubProcessCfg.pid\n      })\n    );\n    instance.println(\"INFO\", $t(\"TXT_CODE_pty_start.startEmulatedTerminal\"));\n  }\n}\n","import { $t } from \"../../../i18n\";\nimport Instance from \"../../instance/instance\";\nimport InstanceCommand from \"../base/command\";\nimport SendCommand from \"../cmd\";\n\nexport default class PtyStopCommand extends InstanceCommand {\n  constructor() {\n    super(\"PtyStopCommand\");\n  }\n\n  async exec(instance: Instance) {\n    let stopCommand = instance.config.stopCommand;\n\n    if (instance.status() === Instance.STATUS_STOP || !instance.process)\n      return instance.failure(new Error($t(\"TXT_CODE_pty_stop.notRunning\")));\n    instance.status(Instance.STATUS_STOPPING);\n\n    instance.println(\"INFO\", $t(\"TXT_CODE_pty_stop.execCmd\", { stopCommand: stopCommand }));\n\n    const stopCommandList = stopCommand.split(\"\\n\");\n    for (const stopCommandColumn of stopCommandList) {\n      if (stopCommandColumn.toLocaleLowerCase() == \"^c\") {\n        await instance.exec(new SendCommand(\"\\x03\"));\n      } else {\n        await instance.exec(new SendCommand(stopCommandColumn));\n      }\n    }\n\n    // If the instance is still in the stopped state after 10 minutes, restore the state\n    const cacheStartCount = instance.startCount;\n    setTimeout(() => {\n      if (\n        instance.status() === Instance.STATUS_STOPPING &&\n        instance.startCount === cacheStartCount\n      ) {\n        instance.println(\"ERROR\", $t(\"TXT_CODE_pty_stop.stopErr\"));\n        instance.status(Instance.STATUS_RUNNING);\n      }\n    }, 1000 * 60 * 10);\n\n    return instance;\n  }\n}\n","import { $t } from \"../../i18n\";\nimport Instance from \"../instance/instance\";\nimport InstanceCommand from \"./base/command\";\n\nexport default class RestartCommand extends InstanceCommand {\n  constructor() {\n    super(\"RestartCommand\");\n  }\n\n  async exec(instance: Instance) {\n    // If the automatic restart function is enabled, the setting is ignored once\n    if (instance.config.eventTask && instance.config.eventTask.autoRestart)\n      instance.config.eventTask.ignore = true;\n\n    if (instance.status() !== Instance.STATUS_RUNNING) {\n      throw new Error($t(\"TXT_CODE_d58ffa0f\"));\n    }\n\n    return await instance.execPreset(\"restart\");\n  }\n}\n","import { $t } from \"../../i18n\";\nimport Instance from \"../instance/instance\";\nimport InstanceCommand from \"./base/command\";\n\nclass StartupError extends Error {\n  constructor(msg: string) {\n    super(msg);\n  }\n}\n\nexport default class StartCommand extends InstanceCommand {\n  public source: string;\n\n  constructor(source = \"Unknown\") {\n    super(\"StartCommand\");\n    this.source = source;\n  }\n\n  private async sleep() {\n    return new Promise((ok) => {\n      setTimeout(ok, 1000 * 3);\n    });\n  }\n\n  async exec(instance: Instance) {\n    if (instance.status() !== Instance.STATUS_STOP)\n      return instance.failure(new StartupError($t(\"TXT_CODE_start.instanceNotDown\")));\n    try {\n      instance.setLock(true);\n      instance.status(Instance.STATUS_STARTING);\n      instance.startCount++;\n\n      // expiration time check\n      if (instance.config.endTime) {\n        const endTime = instance.config.endTime;\n        if (endTime) {\n          const currentTime = Date.now();\n          if (endTime <= currentTime) {\n            throw new Error($t(\"TXT_CODE_start.instanceMaturity\"));\n          }\n        }\n      }\n\n      const currentTimestamp = Date.now();\n      instance.startTimestamp = currentTimestamp;\n\n      instance.print(\"\\n\");\n      instance.println(\"INFO\", $t(\"TXT_CODE_start.startInstance\"));\n\n      // prevent the dead-loop from starting\n      await this.sleep();\n\n      return await instance.execPreset(\"start\", this.source);\n    } catch (error: any) {\n      try {\n        await instance.execPreset(\"kill\");\n      } catch (ignore) {}\n      instance.releaseResources();\n      instance.status(Instance.STATUS_STOP);\n      instance.failure(error);\n    } finally {\n      instance.setLock(false);\n    }\n  }\n}\n","import { t } from \"i18next\";\nimport Instance from \"../../instance/instance\";\nimport InstanceCommand from \"../base/command\";\nimport Rcon from \"rcon-srcds\";\n\nasync function sendRconCommand(instance: Instance, command: string) {\n  const targetIp = instance.config.rconIp || \"localhost\";\n  const rconServer = new Rcon({\n    port: instance.config.rconPort,\n    host: targetIp,\n    encoding: \"utf8\",\n    timeout: 1000 * 6\n  });\n  await rconServer.authenticate(instance.config.rconPassword);\n  if (!rconServer.isAuthenticated()) {\n    throw new Error(t(\"TXT_CODE_1b1b2934\"));\n  }\n  return new Promise((resolve, reject) => {\n    let hasResult = false;\n    setTimeout(() => {\n      if (!hasResult) {\n        rconServer.disconnect().catch(() => {});\n        instance.print(`[RCON] ${t(\"TXT_CODE_386f2d66\")}\\n`);\n        resolve(\"\");\n      }\n    }, 1000 * 10);\n    rconServer\n      .execute(command)\n      .then((res) => {\n        hasResult = true;\n        instance.print(`[RCON] ${res}\\n`);\n        rconServer.disconnect().catch(() => {});\n        resolve(res);\n      })\n      .catch((err) => {\n        reject(err);\n      });\n    instance.print(`[RCON] <<< ${command}\\n`);\n  });\n}\n\nexport default class RconCommand extends InstanceCommand {\n  constructor(public readonly cmd?: string) {\n    super(\"RconSendCommand\");\n  }\n\n  async exec(instance: Instance, text?: string): Promise<any> {\n    try {\n      if (text || this.cmd) {\n        await sendRconCommand(instance, String(text ?? this.cmd));\n      }\n    } catch (error: any) {\n      instance.println(\"RCON ERROR\", error?.message || error);\n    }\n  }\n}\n","import Instance from \"../instance/instance\";\nimport InstanceCommand from \"./base/command\";\nimport SendCommand from \"./cmd\";\n\nexport default class StopCommand extends InstanceCommand {\n  constructor() {\n    super(\"StopCommand\");\n  }\n\n  async exec(instance: Instance) {\n    // If the automatic restart function is enabled, the setting is ignored once\n    if (instance.config.eventTask && instance.config.eventTask.autoRestart)\n      instance.config.eventTask.ignore = true;\n\n    // send stop command\n    return await instance.execPreset(\"stop\");\n  }\n}\n","import { ILifeCycleTask } from \"../../instance/life_cycle\";\nimport Instance from \"../../instance/instance\";\nimport { MCServerStatus } from \"common\";\n\n// When the instance is running, continue to check the expiration time\nexport default class PingMinecraftServerTask implements ILifeCycleTask {\n  public status: number = 0;\n  public name: string = \"TimeCheck\";\n\n  private task?: NodeJS.Timeout;\n\n  async start(instance: Instance) {\n    this.task = setInterval(() => {\n      instance.execPreset(\"refreshPlayers\");\n    }, 1000 * 60);\n  }\n\n  async stop(instance: Instance) {\n    instance.resetPingInfo();\n    clearInterval(this.task);\n    this.task = undefined;\n  }\n}\n","import { v4 } from \"uuid\";\nimport fs from \"fs-extra\";\nimport path from \"path\";\nimport { spawn, ChildProcess } from \"child_process\";\nimport os from \"os\";\nimport { killProcess } from \"common\";\nimport { ILifeCycleTask } from \"../../instance/life_cycle\";\nimport Instance from \"../../instance/instance\";\nimport KillCommand from \"../kill\";\nimport logger from \"../../../service/log\";\nimport { $t } from \"../../../i18n\";\nimport { ProcessWrapper } from \"common\";\nimport { FRPC_PATH } from \"../../../const\";\nimport { downloadFileToLocalFile } from \"../../../service/download\";\nexport class OpenFrp {\n  public processWrapper?: ProcessWrapper;\n\n  constructor(public readonly token: string, public readonly tunnelId: string) {\n    // ./frpc -u <passowrd> -p <channel id>\n    this.processWrapper = new ProcessWrapper(\n      FRPC_PATH,\n      [\"-u\", this.token, \"-p\", this.tunnelId],\n      path.dirname(FRPC_PATH)\n    );\n  }\n\n  public open() {\n    logger.info(\"Start openfrp:\", FRPC_PATH);\n    this.processWrapper?.start();\n    if (!this.processWrapper?.getPid()) {\n      throw new Error(\"pid is null\");\n    }\n  }\n\n  public stop() {\n    try {\n      if (this.processWrapper?.exitCode() == null) {\n        this.processWrapper?.kill();\n      }\n      this.processWrapper = undefined;\n    } catch (error: any) {}\n  }\n}\n\nexport default class OpenFrpTask implements ILifeCycleTask {\n  public status: number = 0;\n  public name: string = \"openfrp\";\n  public static readonly FRP_EXE_NAME = `frpc_${os.platform()}_${os.arch()}${\n    os.platform() === \"win32\" ? \".exe\" : \"\"\n  }`;\n  public static readonly FRP_EXE_PATH = path.normalize(\n    path.join(process.cwd(), \"lib\", OpenFrpTask.FRP_EXE_NAME)\n  );\n  public static readonly FRP_DOWNLOAD_ADDR = \"https://mcsmanager.oss-cn-guangzhou.aliyuncs.com/\";\n\n  async start(instance: Instance) {\n    const { openFrpToken, openFrpTunnelId } = instance.config?.extraServiceConfig;\n    if (!openFrpToken || !openFrpTunnelId) return;\n\n    if (!fs.existsSync(OpenFrpTask.FRP_EXE_PATH)) {\n      const tmpTask = setInterval(() => {\n        instance.println(\"FRP\", $t(\"TXT_CODE_frp.installing\"));\n      }, 2000);\n      try {\n        await downloadFileToLocalFile(\n          OpenFrpTask.FRP_DOWNLOAD_ADDR + OpenFrpTask.FRP_EXE_NAME,\n          OpenFrpTask.FRP_EXE_PATH\n        );\n        instance.println(\"FRP\", $t(\"TXT_CODE_frp.done\"));\n      } catch (error: any) {\n        logger.error($t(\"TXT_CODE_frp.downloadErr\"), error);\n        instance.println(\"ERROR\", $t(\"TXT_CODE_frp.downloadErr\") + `: ${error}`);\n        fs.remove(OpenFrpTask.FRP_EXE_PATH, () => {});\n        return;\n      } finally {\n        clearInterval(tmpTask);\n      }\n    }\n\n    const frpProcess = new OpenFrp(openFrpToken, openFrpTunnelId);\n    frpProcess.processWrapper?.on(\"start\", (pid: number) => {\n      if (pid) {\n        logger.info(\n          `Instance ${instance.config.nickname}(${instance.instanceUuid}) ${pid} Frp task started!`\n        );\n        logger.info(`Params: ${openFrpTunnelId} | ${openFrpToken}`);\n        instance.openFrp = frpProcess;\n        instance.info.openFrpStatus = true;\n      } else {\n        logger.warn(\n          `Instance ${instance.config.nickname}(${instance.instanceUuid}) Frp task start failed! Process ID is ${pid}`\n        );\n      }\n    });\n    frpProcess.processWrapper?.on(\"exit\", () => {\n      logger.info(\n        `Instance ${instance.config.nickname}(${instance.instanceUuid}) Frp task stopped!`\n      );\n      instance.info.openFrpStatus = false;\n      instance.openFrp = undefined;\n    });\n\n    try {\n      frpProcess.open();\n    } catch (error: any) {\n      logger.warn(\n        `Instance ${instance.config.nickname}(${instance.instanceUuid}) Frp task Start failure! ERR:`\n      );\n      logger.warn(error);\n    }\n  }\n\n  async stop(instance: Instance) {\n    if (instance.openFrp) {\n      const frpProcess = instance.openFrp;\n      frpProcess.stop();\n    }\n  }\n}\n","import { ILifeCycleTask } from \"../../instance/life_cycle\";\nimport Instance from \"../../instance/instance\";\nimport KillCommand from \"../kill\";\n\n// When the instance is running, continue to check the expiration time\nexport default class TimeCheck implements ILifeCycleTask {\n  public status: number = 0;\n  public name: string = \"TimeCheck\";\n\n  private task: any = null;\n\n  async start(instance: Instance) {\n    this.task = setInterval(async () => {\n      if (instance.config.endTime) {\n        const endTime = instance.config.endTime;\n        if (endTime) {\n          const currentTime = Date.now();\n          if (endTime <= currentTime) {\n            // Expired, execute the end process command\n            await instance.exec(new KillCommand());\n            clearInterval(this.task);\n          }\n        }\n      }\n    }, 1000 * 60 * 60);\n  }\n\n  async stop(instance: Instance) {\n    clearInterval(this.task);\n  }\n}\n","import { v4 } from \"uuid\";\nimport StorageSubsystem from \"../common/system_storage\";\n\nfunction builderPassword() {\n  const a = `${v4().replace(/\\-/gim, \"\")}`;\n  const b = a.slice(0, a.length / 2 - 1);\n  const c = `${v4().replace(/\\-/gim, \"\")}`;\n  return b + c;\n}\n\n// @Entity\nclass Config {\n  public version = 2;\n  public ip = \"\";\n  public port = 24444;\n  public prefix = \"\";\n  public key = builderPassword();\n  public maxFileTask = 2;\n  public maxZipFileSize = 200;\n  public language = \"en_us\";\n  public defaultInstancePath = \"\";\n}\n\n// daemon configuration class\nclass GlobalConfiguration {\n  public config = new Config();\n  private static readonly ID = \"global\";\n\n  load() {\n    let config: Config = StorageSubsystem.load(\"Config\", Config, GlobalConfiguration.ID);\n    if (config == null) {\n      config = new Config();\n      StorageSubsystem.store(\"Config\", GlobalConfiguration.ID, config);\n    }\n    this.config = config;\n  }\n\n  store() {\n    StorageSubsystem.store(\"Config\", GlobalConfiguration.ID, this.config);\n  }\n}\n\nclass GlobalEnv {\n  public fileTaskCount = 0;\n}\n\nconst globalConfiguration = new GlobalConfiguration();\nconst globalEnv = new GlobalEnv();\n\nexport { globalConfiguration, Config, globalEnv };\n","import { Socket } from \"socket.io\";\n\nexport default class RouterContext {\n  constructor(\n    public uuid: string | null,\n    public socket: Socket,\n    public session?: any,\n    public event?: string\n  ) {}\n\n  public response(data: any) {\n    return this;\n  }\n}\n","import Instance from \"./instance\";\nimport os from \"os\";\nimport { IGlobalInstanceConfig, IGlobalInstanceDockerConfig } from \"common/global\";\ninterface IActionCommand {\n  name: string;\n  command: string;\n}\n\ntype ProcessType = \"general\" | \"docker\";\n\n// @Entity\nexport default class InstanceConfig implements IGlobalInstanceConfig {\n  public nickname = \"Undefined\";\n  public startCommand = \"\";\n  public stopCommand = \"^C\";\n  public cwd = \".\";\n  public ie = \"utf-8\";\n  public oe = \"utf-8\";\n  public createDatetime = Date.now();\n  public lastDatetime = Date.now();\n  public type = Instance.TYPE_UNIVERSAL;\n  public tag: string[] = [];\n  public endTime: number = 0;\n  public fileCode: string = \"utf-8\";\n  public processType: ProcessType = \"general\";\n  public updateCommand: string = \"\";\n  public crlf = os.platform() === \"win32\" ? 2 : 1; // 1: \\n  2: \\r\\n\n  public category = 0;\n\n  // Steam RCON protocol\n  public enableRcon = false;\n  public rconPassword = \"\";\n  public rconPort = 0;\n  public rconIp = \"\";\n\n  // custom command list\n  public actionCommandList: IActionCommand[] = [];\n\n  // terminal option\n  public terminalOption = {\n    haveColor: false,\n    pty: true,\n    ptyWindowCol: 164,\n    ptyWindowRow: 40\n  };\n\n  // Event task\n  public eventTask = {\n    autoStart: false,\n    autoRestart: false,\n    ignore: false\n  };\n\n  // Extend\n  public docker: IGlobalInstanceDockerConfig = {\n    containerName: \"\",\n    image: \"\",\n    ports: [],\n    extraVolumes: [],\n    memory: 0,\n    networkMode: \"bridge\",\n    networkAliases: [],\n    cpusetCpus: \"\",\n    cpuUsage: 0,\n    maxSpace: 0,\n    io: 0,\n    network: 0,\n    workingDir: \"/workspace/\",\n    env: []\n  };\n\n  public pingConfig = {\n    ip: \"\",\n    port: 25565,\n    type: 1\n  };\n\n  public extraServiceConfig = {\n    openFrpTunnelId: \"\",\n    openFrpToken: \"\"\n  };\n}\n","import { $t } from \"../../i18n\";\nimport iconv from \"iconv-lite\";\nimport path from \"path\";\nimport { EventEmitter } from \"events\";\nimport { IExecutable } from \"./preset\";\nimport InstanceCommand from \"../commands/base/command\";\nimport InstanceConfig from \"./Instance_config\";\nimport StorageSubsystem from \"../../common/system_storage\";\nimport { LifeCycleTaskManager } from \"./life_cycle\";\nimport { PresetCommandManager } from \"./preset\";\nimport FunctionDispatcher, { IPresetCommand } from \"../commands/dispatcher\";\nimport { IInstanceProcess } from \"./interface\";\nimport StartCommand from \"../commands/start\";\nimport { configureEntityParams, toText } from \"common\";\nimport { OpenFrp } from \"../commands/task/openfrp\";\nimport logger from \"../../service/log\";\nimport { t } from \"i18next\";\n\ninterface IInstanceInfo {\n  mcPingOnline: boolean;\n  currentPlayers: number;\n  maxPlayers: number;\n  version: string;\n  fileLock: number;\n  playersChart: Array<{ value: string }>;\n  openFrpStatus: boolean;\n  latency: number;\n}\n\ninterface IWatcherInfo {\n  terminalSize: {\n    w: number;\n    h: number;\n  };\n}\n\nconst LINE_MAX_SIZE = 1024;\nconst TERM_TEXT_YELLOW = \"\\x1B[0;33;1m\";\nconst TERM_TEXT_GOLD = \"\\x1B[0;33m\"; // Gold §6\nconst TERM_RESET = \"\\x1B[0m\";\nconst IGNORE_TEXT = [\n  \"\\n\\n\",\n  TERM_TEXT_GOLD,\n  \"[MCSMANAGER] \",\n  TERM_RESET,\n  TERM_TEXT_YELLOW,\n  t(\"TXT_CODE_c5ed896f\"),\n  TERM_RESET,\n  \"\\n\\n\"\n].join(\"\");\n\nexport default class Instance extends EventEmitter {\n  public static readonly STATUS_BUSY = -1;\n  public static readonly STATUS_STOP = 0;\n  public static readonly STATUS_STOPPING = 1;\n  public static readonly STATUS_STARTING = 2;\n  public static readonly STATUS_RUNNING = 3;\n\n  public static readonly TYPE_UNIVERSAL = \"universal\";\n  public static readonly TYPE_MINECRAFT_JAVA = \"minecraft/java\";\n  public static readonly TYPE_MINECRAFT_BEDROCK = \"minecraft/bedrock\";\n\n  public instanceStatus: number = Instance.STATUS_STOP;\n  public instanceUuid: string = \"\";\n  public lock: boolean = false;\n  public startCount: number = 0;\n  public startTimestamp: number = 0;\n  public asynchronousTask?: IExecutable | null;\n  public openFrp?: OpenFrp;\n\n  public readonly lifeCycleTaskManager = new LifeCycleTaskManager(this);\n  public readonly presetCommandManager = new PresetCommandManager(this);\n\n  public config: InstanceConfig;\n\n  public info: IInstanceInfo = {\n    mcPingOnline: false,\n    currentPlayers: 0,\n    maxPlayers: 0,\n    version: \"\",\n    fileLock: 0,\n    playersChart: [],\n    openFrpStatus: false,\n    latency: 0\n  };\n\n  public watchers: Map<string, IWatcherInfo> = new Map();\n\n  public process?: IInstanceProcess;\n\n  private outputStack: string[] = [];\n  private outputLoopTask?: NodeJS.Timer;\n\n  // When initializing an instance, the instance must be initialized through uuid and configuration class, otherwise the instance will be unavailable\n  constructor(instanceUuid: string, config: InstanceConfig) {\n    super();\n\n    if (!instanceUuid || !config) throw new Error($t(\"TXT_CODE_instanceConf.initInstanceErr\"));\n\n    // Basic information\n    this.instanceStatus = Instance.STATUS_STOP;\n    this.instanceUuid = instanceUuid;\n\n    // Action lock\n    this.lock = false;\n\n    this.config = config;\n\n    this.process = undefined;\n    this.startCount = 0;\n  }\n\n  isStoppedOrBusy() {\n    return [Instance.STATUS_STOP, Instance.STATUS_BUSY].includes(this.status());\n  }\n\n  // Pass in instance configuration, loosely and dynamically set configuration items for instance parameters\n  parameters(cfg: any, persistence = true) {\n    // If the instance type changes, default commands and lifecycle events must be reset\n    if (cfg?.type && cfg?.type != this.config.type) {\n      if (!this.isStoppedOrBusy())\n        throw new Error($t(\"TXT_CODE_instanceConf.cantModifyInstanceType\"));\n      configureEntityParams(this.config, cfg, \"type\", String);\n      this.forceExec(new FunctionDispatcher());\n    }\n\n    if (cfg?.enableRcon != null && cfg?.enableRcon !== this.config.enableRcon) {\n      if (!this.isStoppedOrBusy()) throw new Error($t(\"TXT_CODE_bdfa3457\"));\n      configureEntityParams(this.config, cfg, \"enableRcon\", Boolean);\n      this.forceExec(new FunctionDispatcher());\n    }\n\n    if (cfg?.processType && cfg?.processType !== this.config.processType) {\n      if (!this.isStoppedOrBusy())\n        throw new Error($t(\"TXT_CODE_instanceConf.cantModifyProcessType\"));\n      configureEntityParams(this.config, cfg, \"processType\", String);\n      this.forceExec(new FunctionDispatcher());\n    }\n\n    // If the terminal type is changed, the default command must be reset\n    if (\n      cfg?.terminalOption?.pty != null &&\n      cfg?.terminalOption?.pty !== this.config.terminalOption.pty\n    ) {\n      if (!this.isStoppedOrBusy()) throw new Error($t(\"TXT_CODE_instanceConf.cantModifyPtyModel\"));\n      configureEntityParams(this.config.terminalOption, cfg.terminalOption, \"pty\", Boolean);\n      this.forceExec(new FunctionDispatcher());\n    }\n\n    // Only allow some configuration items to be modified when the server is stopped\n    if (this.isStoppedOrBusy() && cfg.terminalOption) {\n      configureEntityParams(this.config.terminalOption, cfg.terminalOption, \"ptyWindowCol\", Number);\n      configureEntityParams(this.config.terminalOption, cfg.terminalOption, \"ptyWindowRow\", Number);\n    }\n\n    if (cfg.tag instanceof Array) {\n      cfg.tag = cfg.tag.map((tag: any) => String(tag).trim());\n      this.config.tag = cfg.tag;\n    }\n\n    if (cfg?.extraServiceConfig) {\n      configureEntityParams(\n        this.config.extraServiceConfig,\n        cfg.extraServiceConfig,\n        \"isOpenFrp\",\n        Boolean\n      );\n      configureEntityParams(\n        this.config.extraServiceConfig,\n        cfg.extraServiceConfig,\n        \"openFrpToken\",\n        String\n      );\n      configureEntityParams(\n        this.config.extraServiceConfig,\n        cfg.extraServiceConfig,\n        \"openFrpTunnelId\",\n        String\n      );\n    }\n\n    configureEntityParams(this.config, cfg, \"nickname\", String);\n    configureEntityParams(this.config, cfg, \"startCommand\", String);\n    configureEntityParams(this.config, cfg, \"stopCommand\", String);\n    configureEntityParams(this.config, cfg, \"updateCommand\", String);\n    configureEntityParams(this.config, cfg, \"cwd\", String);\n    configureEntityParams(this.config, cfg, \"ie\", String);\n    configureEntityParams(this.config, cfg, \"oe\", String);\n    configureEntityParams(this.config, cfg, \"crlf\", Number);\n    configureEntityParams(this.config, cfg, \"endTime\", Number);\n    configureEntityParams(this.config, cfg, \"fileCode\", String);\n    configureEntityParams(this.config, cfg, \"rconPassword\", String);\n    configureEntityParams(this.config, cfg, \"rconPort\", Number);\n    configureEntityParams(this.config, cfg, \"rconIp\", String);\n    configureEntityParams(this.config, cfg, \"category\", Number);\n\n    if (cfg.docker) {\n      configureEntityParams(this.config.docker, cfg.docker, \"containerName\", String);\n      configureEntityParams(this.config.docker, cfg.docker, \"image\", String);\n      configureEntityParams(this.config.docker, cfg.docker, \"memory\", Number);\n      configureEntityParams(this.config.docker, cfg.docker, \"ports\");\n      configureEntityParams(this.config.docker, cfg.docker, \"extraVolumes\");\n      configureEntityParams(this.config.docker, cfg.docker, \"maxSpace\", Number);\n      configureEntityParams(this.config.docker, cfg.docker, \"io\", Number);\n      configureEntityParams(this.config.docker, cfg.docker, \"network\", Number);\n      configureEntityParams(this.config.docker, cfg.docker, \"networkMode\", String);\n      configureEntityParams(this.config.docker, cfg.docker, \"networkAliases\");\n      configureEntityParams(this.config.docker, cfg.docker, \"cpusetCpus\", String);\n      configureEntityParams(this.config.docker, cfg.docker, \"cpuUsage\", Number);\n      configureEntityParams(this.config.docker, cfg.docker, \"env\");\n      configureEntityParams(this.config.docker, cfg.docker, \"workingDir\", String);\n    }\n    if (cfg.pingConfig) {\n      configureEntityParams(this.config.pingConfig, cfg.pingConfig, \"ip\", String);\n      configureEntityParams(this.config.pingConfig, cfg.pingConfig, \"port\", Number);\n      configureEntityParams(this.config.pingConfig, cfg.pingConfig, \"type\", Number);\n    }\n    if (cfg.eventTask) {\n      configureEntityParams(this.config.eventTask, cfg.eventTask, \"autoStart\", Boolean);\n      configureEntityParams(this.config.eventTask, cfg.eventTask, \"autoRestart\", Boolean);\n      configureEntityParams(this.config.eventTask, cfg.eventTask, \"ignore\", Boolean);\n    }\n    if (cfg.terminalOption) {\n      configureEntityParams(this.config.terminalOption, cfg.terminalOption, \"haveColor\", Boolean);\n    }\n\n    if (persistence) StorageSubsystem.store(\"InstanceConfig\", this.instanceUuid, this.config);\n  }\n\n  setLock(bool: boolean) {\n    this.lock = bool;\n  }\n\n  // Execute the corresponding command for this instance\n  async execCommand(command: InstanceCommand) {\n    if (this.lock)\n      throw new Error($t(\"TXT_CODE_instanceConf.instanceLock\", { info: command.info }));\n    if (this.status() == Instance.STATUS_BUSY)\n      throw new Error($t(\"TXT_CODE_instanceConf.instanceBusy\"));\n    return await command.exec(this);\n  }\n\n  // Execute the corresponding command for this instance Alias\n  async exec(command: InstanceCommand) {\n    return await this.execCommand(command);\n  }\n\n  // force the command to execute\n  async forceExec(command: InstanceCommand) {\n    return await command.exec(this);\n  }\n\n  // set instance state or get state\n  status(v?: number) {\n    if (v != null) this.instanceStatus = v;\n    return this.instanceStatus;\n  }\n\n  // function that must be executed after the instance starts\n  // Trigger the open event and bind the data and exit events, etc.\n  started(process: IInstanceProcess) {\n    this.config.lastDatetime = Date.now();\n    const outputCode = this.config.terminalOption.pty ? \"utf-8\" : this.config.oe;\n    process.on(\"data\", (text: any) => {\n      this.pushOutput(iconv.decode(text, outputCode));\n    });\n    process.on(\"exit\", (code: number) => this.stopped(code));\n    this.process = process;\n    this.instanceStatus = Instance.STATUS_RUNNING;\n    this.emit(\"open\", this);\n\n    // start all lifecycle tasks\n    this.lifeCycleTaskManager.execLifeCycleTask(1);\n    this.startOutputLoop();\n  }\n\n  // If the instance performs any operation exception, it must throw an exception through this function\n  // trigger failure event\n  failure(error: Error) {\n    this.emit(\"failure\", error);\n    this.println(\"Operation Error\", error.message ?? String(error));\n    throw error;\n  }\n\n  // function that must be executed after the instance has been closed\n  // trigger exit event\n  stopped(code = 0) {\n    this.releaseResources();\n    if (this.instanceStatus != Instance.STATUS_STOP) {\n      this.instanceStatus = Instance.STATUS_STOP;\n      this.emit(\"exit\", code);\n      StorageSubsystem.store(\"InstanceConfig\", this.instanceUuid, this.config);\n    }\n\n    // Close all lifecycle tasks\n    this.stopOutputLoop();\n    this.lifeCycleTaskManager.execLifeCycleTask(0);\n\n    // If automatic restart is enabled, the startup operation is performed immediately\n    if (this.config.eventTask.autoRestart) {\n      if (!this.config.eventTask.ignore) {\n        this.forceExec(new StartCommand(\"Event Task: Auto Restart\"))\n          .then(() => {\n            this.println($t(\"TXT_CODE_instanceConf.info\"), $t(\"TXT_CODE_instanceConf.autoRestart\"));\n          })\n          .catch((err) => {\n            this.println(\n              $t(\"TXT_CODE_instanceConf.error\"),\n              $t(\"TXT_CODE_instanceConf.autoRestartErr\", { err: err })\n            );\n          });\n      }\n      this.config.eventTask.ignore = false;\n    }\n\n    // Turn off the warning immediately after startup, usually the startup command is written incorrectly\n    const currentTimestamp = new Date().getTime();\n    const startThreshold = 6 * 1000;\n    if (currentTimestamp - this.startTimestamp < startThreshold) {\n      this.println(\"ERROR\", $t(\"TXT_CODE_instanceConf.instantExit\"));\n    }\n  }\n\n  // custom output method, formatting\n  println(level: string, text: string) {\n    const str = `[${level}] ${text}\\n`;\n    this.emit(\"data\", str);\n  }\n\n  // custom output method\n  print(data: any) {\n    this.emit(\"data\", data);\n  }\n\n  // Release resources (mainly release process-related resources)\n  releaseResources() {\n    try {\n      this.process?.destroy();\n    } catch (error: any) {\n      logger.error(`Instance ${this.instanceUuid}, Release resources error: ${error}`);\n    } finally {\n      this.process = undefined;\n    }\n  }\n\n  // destroy this instance\n  destroy() {\n    if (this.process && this.process.pid) {\n      this.process.kill(\"SIGKILL\");\n    }\n    this.process = undefined;\n  }\n\n  fullTime() {\n    const date = new Date();\n    return date.toLocaleDateString() + \" \" + date.getHours() + \":\" + date.getMinutes();\n  }\n\n  hasCwdPath() {\n    return !!this.config.cwd;\n  }\n\n  absoluteCwdPath() {\n    if (!this.config || !this.config.cwd) throw new Error(\"Instance config error, cwd is Null!\");\n    if (path.isAbsolute(this.config.cwd)) return path.normalize(this.config.cwd);\n    return path.normalize(path.join(process.cwd(), this.config.cwd));\n  }\n\n  // execute the preset command action\n  async execPreset(action: IPresetCommand, p?: any) {\n    if (this.presetCommandManager) {\n      return await this.presetCommandManager.execPreset(action, p);\n    }\n    throw new Error(`Preset Manager does not exist`);\n  }\n\n  setPreset(action: IPresetCommand, cmd: InstanceCommand) {\n    this.presetCommandManager.setPreset(action, cmd);\n  }\n\n  getPreset(action: IPresetCommand) {\n    return this.presetCommandManager.getPreset(action);\n  }\n\n  clearPreset() {\n    this.presetCommandManager.clearPreset();\n  }\n\n  computeTerminalSize() {\n    let minW = this.config.terminalOption.ptyWindowCol;\n    let minH = this.config.terminalOption.ptyWindowRow;\n    for (const iterator of this.watchers.values()) {\n      const { w, h } = iterator.terminalSize;\n      if (w && h) {\n        if (w < minW) minW = w;\n        if (h < minH) minH = h;\n      }\n    }\n    return {\n      w: minW,\n      h: minH\n    };\n  }\n\n  public resetPingInfo() {\n    this.info.mcPingOnline = false;\n    this.info.currentPlayers = 0;\n    this.info.maxPlayers = 0;\n    this.info.version = \"\";\n    this.info.latency = 0;\n  }\n\n  private pushOutput(data: string) {\n    if (data.length > LINE_MAX_SIZE * 100) {\n      this.outputStack.push(IGNORE_TEXT);\n    } else if (data.length > LINE_MAX_SIZE) {\n      for (let index = 0; index < Math.ceil(data.length / LINE_MAX_SIZE); index++) {\n        const tmp = data.slice(index * LINE_MAX_SIZE, (index + 1) * LINE_MAX_SIZE);\n        if (tmp) this.outputStack.push(tmp);\n      }\n    } else {\n      this.outputStack.push(data);\n    }\n    if (this.outputStack.length >= 100) {\n      this.outputStack.splice(0, 50);\n      this.outputStack.splice(0, 0, IGNORE_TEXT);\n    }\n  }\n\n  private startOutputLoop() {\n    this.stopOutputLoop();\n    this.outputLoopTask = setInterval(() => {\n      if (this.outputStack.length > 0) {\n        const buf = this.outputStack.splice(0, 10);\n        this.emit(\"data\", buf.join(\"\"));\n      }\n    }, 50);\n  }\n\n  private stopOutputLoop() {\n    if (this.outputLoopTask) clearInterval(this.outputLoopTask);\n    this.outputLoopTask = undefined;\n  }\n}\n","import Instance from \"./instance\";\n\nexport interface ILifeCycleTask {\n  name: string; // task name\n  status: number; // Running status, the default is 0, the task manager will automatically change\n  start: (instance: Instance) => Promise<void>;\n  stop: (instance: Instance) => Promise<void>;\n}\n\nexport class LifeCycleTaskManager {\n  // list of life cycle tasks\n  public readonly lifeCycleTask: ILifeCycleTask[] = [];\n\n  constructor(private self: any) {}\n\n  registerLifeCycleTask(task: ILifeCycleTask) {\n    this.lifeCycleTask.push(task);\n  }\n\n  execLifeCycleTask(type: 1 | 0) {\n    if (type == 1) {\n      this.lifeCycleTask.forEach((v) => {\n        if (v.status === 0) v.start(this.self);\n        v.status = 1;\n      });\n    } else {\n      this.lifeCycleTask.forEach((v) => {\n        if (v.status === 1) v.stop(this.self);\n        v.status = 0;\n      });\n    }\n  }\n\n  clearLifeCycleTask() {\n    this.execLifeCycleTask(0);\n    this.lifeCycleTask.splice(0, this.lifeCycleTask.length);\n  }\n}\n","import { $t } from \"../../i18n\";\nimport { IPresetCommand } from \"../commands/dispatcher\";\nexport interface IExecutable {\n  exec: (a: any, b?: any) => Promise<any>;\n  stop?: (a: any) => Promise<void>;\n}\n\nexport class PresetCommandManager {\n  public readonly preset = new Map<IPresetCommand, IExecutable>();\n\n  constructor(private self: any) {}\n\n  setPreset(action: IPresetCommand, cmd: IExecutable) {\n    this.preset.set(action, cmd);\n  }\n\n  getPreset(action: IPresetCommand) {\n    return this.preset.get(action);\n  }\n\n  async execPreset(action: IPresetCommand, p?: any) {\n    const cmd = this.preset.get(action);\n    if (!cmd) throw new Error($t(\"TXT_CODE_preset.actionErr\", { action: action }));\n    return await cmd.exec(this.self, p);\n  }\n\n  clearPreset() {\n    this.preset.clear();\n  }\n}\n","import { $t } from \"../../i18n\";\nimport yaml from \"yaml\";\nimport toml from \"@iarna/toml\";\nimport properties from \"properties\";\nimport path from \"path\";\nimport fs from \"fs-extra\";\n\nconst CONFIG_FILE_ENCODE = \"utf-8\";\n\nexport interface IProcessConfig {\n  fileName: string;\n  path: string;\n  type: string;\n  info: string | null;\n  redirect: string;\n  from?: string;\n  fromLink?: string | null;\n}\n\nexport class ProcessConfig {\n  constructor(public iProcessConfig: IProcessConfig) {\n    iProcessConfig.path = path.normalize(iProcessConfig.path);\n  }\n\n  // Automatically parse the local file according to the type and return the configuration object\n  read(): any {\n    const text = fs.readFileSync(this.iProcessConfig.path, { encoding: CONFIG_FILE_ENCODE });\n    if (this.iProcessConfig.type === \"yml\") {\n      return yaml.parse(text);\n    }\n    if (this.iProcessConfig.type == \"toml\") {\n      return toml.parse(text);\n    }\n    if (this.iProcessConfig.type === \"properties\") {\n      return properties.parse(text);\n    }\n    if (this.iProcessConfig.type === \"json\") {\n      return JSON.parse(text);\n    }\n    if (this.iProcessConfig.type === \"txt\") {\n      return text;\n    }\n  }\n\n  // Automatically save to the local configuration file according to the parameter object\n  write(object: Object | toml.JsonMap) {\n    let text = \"\";\n    if (this.iProcessConfig.type === \"yml\") {\n      text = yaml.stringify(object);\n    }\n    if (this.iProcessConfig.type === \"toml\") {\n      text = toml.stringify(<toml.JsonMap>object);\n    }\n    if (this.iProcessConfig.type === \"properties\") {\n      text = properties.stringify(object, {\n        unicode: true\n      });\n      text = text.replace(/ = /gim, \"=\");\n      if (this.iProcessConfig.fileName == \"server.properties\") {\n        text = text.replace(/\\\\\\\\u/gim, \"\\\\u\");\n      }\n    }\n    if (this.iProcessConfig.type === \"json\") {\n      text = JSON.stringify(object);\n    }\n    if (this.iProcessConfig.type === \"txt\") {\n      text = object.toString();\n    }\n    if (!text && this.iProcessConfig.type !== \"txt\")\n      throw new Error($t(\"TXT_CODE_process_config.writEmpty\"));\n    fs.writeFileSync(this.iProcessConfig.path, text, { encoding: CONFIG_FILE_ENCODE });\n  }\n\n  exists() {\n    return fs.existsSync(this.iProcessConfig.path);\n  }\n}\n","// I18n init configuration (Daemon)\n// If you want to add the language of your own country, you need to add the code here.\n\nimport i18next from \"i18next\";\n\nimport zh_cn from \"@languages/zh_CN.json\";\nimport en_us from \"@languages/en_US.json\";\nimport zh_tw from \"@languages/zh_TW.json\";\nimport ja_JP from \"@languages/ja_JP.json\";\nimport es_ES from \"@languages/es_ES.json\";\nimport fr_FR from \"@languages/fr_FR.json\";\nimport ru_RU from \"@languages/ru_RU.json\";\nimport ko_KR from \"@languages/ko_KR.json\";\nimport de_DE from \"@languages/de_DE.json\";\nimport pt_BR from \"@languages/pt_BR.json\";\n\ni18next.init({\n  interpolation: {\n    escapeValue: false\n  },\n  lng: \"en_us\",\n  fallbackLng: \"en_us\",\n  resources: {\n    en_us: {\n      translation: en_us\n    },\n    zh_cn: {\n      translation: zh_cn\n    },\n    zh_tw: {\n      translation: zh_tw\n    },\n    ja_jp: {\n      translation: ja_JP\n    },\n    es_es: {\n      translation: es_ES\n    },\n    fr_fr: {\n      translation: fr_FR\n    },\n    ru_ru: {\n      translation: ru_RU\n    },\n    ko_kr: {\n      translation: ko_KR\n    },\n    de_de: {\n      translation: de_DE\n    },\n    pt_br: {\n      translation: pt_BR\n    }\n  }\n});\n\n// alias\nconst $t = i18next.t;\n\nexport { $t, i18next };\n","import { $t } from \"../i18n\";\nimport fs from \"fs-extra\";\nimport * as protocol from \"../service/protocol\";\nimport { routerApp } from \"../service/router\";\nimport InstanceSubsystem from \"../service/system_instance\";\nimport Instance from \"../entity/instance/instance\";\nimport logger from \"../service/log\";\nimport path from \"path\";\n\nimport StartCommand from \"../entity/commands/start\";\nimport StopCommand from \"../entity/commands/stop\";\nimport SendCommand from \"../entity/commands/cmd\";\nimport KillCommand from \"../entity/commands/kill\";\nimport { IInstanceDetail, IJson } from \"../service/interfaces\";\nimport ProcessInfoCommand from \"../entity/commands/process_info\";\nimport FileManager from \"../service/system_file\";\nimport { ProcessConfig } from \"../entity/instance/process_config\";\nimport RestartCommand from \"../entity/commands/restart\";\nimport { TaskCenter } from \"../service/async_task_service\";\nimport { createQuickInstallTask } from \"../service/async_task_service/quick_install\";\nimport { QuickInstallTask } from \"../service/async_task_service/quick_install\";\nimport { toNumber, toText } from \"common\";\nimport { arrayUnique } from \"common\";\n\n// Some instances operate router authentication middleware\nrouterApp.use((event, ctx, data, next) => {\n  if (event === \"instance/new\" && data) return next();\n  if (event === \"instance/overview\") return next();\n  if (event === \"instance/select\") return next();\n  if (event === \"instance/asynchronous\") return next();\n  if (event === \"instance/query_asynchronous\") return next();\n  if (event === \"instance/stop_asynchronous\") return next();\n  if (event.startsWith(\"instance\")) {\n    if (data.instanceUuids) return next();\n    const instanceUuid = data.instanceUuid;\n    if (!InstanceSubsystem.exists(instanceUuid)) {\n      return protocol.error(ctx, event, {\n        instanceUuid: instanceUuid,\n        err: `The operation failed, the instance ${instanceUuid} does not exist.`\n      });\n    }\n  }\n  next();\n});\n\n// Get the list of instances of this daemon (query)\nrouterApp.on(\"instance/select\", (ctx, data) => {\n  const page = toNumber(data.page) ?? 1;\n  const pageSize = toNumber(data.pageSize) ?? 1;\n  const condition = data.condition;\n  const targetTag = data.condition.tag;\n  const overview: IInstanceDetail[] = [];\n  // keyword condition query\n  const queryWrapper = InstanceSubsystem.getQueryMapWrapper();\n  const allTags: string[] = [];\n\n  let searchTags: string[] = [];\n  if (targetTag instanceof Array && targetTag.length > 0) {\n    searchTags = targetTag.map((v) => String(v).trim());\n  }\n\n  let result = queryWrapper.select<Instance>((v) => {\n    if (v.config.tag) allTags.push(...v.config.tag);\n    if (InstanceSubsystem.isGlobalInstance(v)) return false;\n    if (!v.config.nickname.toLowerCase().includes(condition.instanceName.toLowerCase()))\n      return false;\n    if (condition.status && v.instanceStatus !== Number(condition.status)) return false;\n\n    const curInstanceTagText = v.config.tag.join(\",\");\n    if (searchTags.length > 0 && searchTags.some((v) => !curInstanceTagText.includes(v)))\n      return false;\n    return true;\n  });\n  result = result.sort((a, b) => (a.config.nickname > b.config.nickname ? 1 : -1));\n  // paging function\n  const pageResult = queryWrapper.page<Instance>(result, page, pageSize);\n  // filter unwanted data\n  pageResult.data.forEach((instance) => {\n    overview.push({\n      instanceUuid: instance.instanceUuid,\n      started: instance.startCount,\n      status: instance.status(),\n      config: instance.config,\n      info: instance.info\n    });\n  });\n\n  overview.sort((a, b) => {\n    return a.config.nickname >= b.config.nickname ? 1 : -1;\n  });\n\n  protocol.response(ctx, {\n    page: pageResult.page,\n    pageSize: pageResult.pageSize,\n    maxPage: pageResult.maxPage,\n    allTags: arrayUnique(allTags).slice(0, 60),\n    data: overview\n  });\n});\n\n// Get an overview of this daemon instance\nrouterApp.on(\"instance/overview\", (ctx) => {\n  const overview: IInstanceDetail[] = [];\n  InstanceSubsystem.getInstances().forEach((instance) => {\n    overview.push({\n      instanceUuid: instance.instanceUuid,\n      started: instance.startCount,\n      status: instance.status(),\n      config: instance.config,\n      info: instance.info\n    });\n  });\n\n  protocol.msg(ctx, \"instance/overview\", overview);\n});\n\n// Get an overview of some instances of this daemon\nrouterApp.on(\"instance/section\", (ctx, data) => {\n  const instanceUuids = data.instanceUuids as string[];\n  const overview: IInstanceDetail[] = [];\n  InstanceSubsystem.getInstances().forEach((instance) => {\n    instanceUuids.forEach((targetUuid) => {\n      if (targetUuid === instance.instanceUuid) {\n        overview.push({\n          instanceUuid: instance.instanceUuid,\n          started: instance.startCount,\n          status: instance.status(),\n          config: instance.config,\n          info: instance.info\n        });\n      }\n    });\n  });\n  protocol.msg(ctx, \"instance/section\", overview);\n});\n\n// View details of a single instance\nrouterApp.on(\"instance/detail\", async (ctx, data) => {\n  try {\n    const instanceUuid = data.instanceUuid;\n    const instance = InstanceSubsystem.getInstance(instanceUuid);\n    if (!instance) throw new Error($t(\"TXT_CODE_3bfb9e04\"));\n    let processInfo = null;\n    let space = 0;\n    try {\n      // Parts that may be wrong due to file permissions, avoid affecting the acquisition of the entire configuration\n      processInfo = await instance.forceExec(new ProcessInfoCommand());\n    } catch (err: any) {}\n    protocol.msg(ctx, \"instance/detail\", {\n      instanceUuid: instance.instanceUuid,\n      started: instance.startCount,\n      status: instance.status(),\n      config: instance.config,\n      info: instance.info,\n      space,\n      processInfo\n    });\n  } catch (err: any) {\n    protocol.error(ctx, \"instance/detail\", { err: err.message });\n  }\n});\n\n// create a new application instance\nrouterApp.on(\"instance/new\", (ctx, data) => {\n  const config = data;\n  try {\n    const newInstance = InstanceSubsystem.createInstance(config);\n    protocol.msg(ctx, \"instance/new\", {\n      instanceUuid: newInstance.instanceUuid,\n      config: newInstance.config\n    });\n  } catch (err: any) {\n    protocol.error(ctx, \"instance/new\", { instanceUuid: null, err: err.message });\n  }\n});\n\n// update instance data\nrouterApp.on(\"instance/update\", (ctx, data) => {\n  const instanceUuid = data.instanceUuid;\n  const config = data.config;\n  try {\n    InstanceSubsystem.getInstance(instanceUuid)?.parameters(config);\n    protocol.msg(ctx, \"instance/update\", { instanceUuid });\n  } catch (err: any) {\n    protocol.error(ctx, \"instance/update\", { instanceUuid: instanceUuid, err: err.message });\n  }\n});\n\n// Request to forward all IO data of an instance\nrouterApp.on(\"instance/forward\", (ctx, data) => {\n  const targetInstanceUuid = data.instanceUuid;\n  const isforward: boolean = data.forward;\n  try {\n    // InstanceSubsystem.getInstance(targetInstanceUuid);\n    if (isforward) {\n      logger.info(\n        $t(\"TXT_CODE_Instance_router.requestIO\", {\n          id: ctx.socket.id,\n          targetInstanceUuid: targetInstanceUuid\n        })\n      );\n      InstanceSubsystem.forward(targetInstanceUuid, ctx.socket);\n    } else {\n      logger.info(\n        $t(\"TXT_CODE_Instance_router.cancelIO\", {\n          id: ctx.socket.id,\n          targetInstanceUuid: targetInstanceUuid\n        })\n      );\n      InstanceSubsystem.stopForward(targetInstanceUuid, ctx.socket);\n    }\n    protocol.msg(ctx, \"instance/forward\", { instanceUuid: targetInstanceUuid });\n  } catch (err: any) {\n    protocol.error(ctx, \"instance/forward\", { instanceUuid: targetInstanceUuid, err: err.message });\n  }\n});\n\n// open the instance\nrouterApp.on(\"instance/open\", async (ctx, data) => {\n  const disableResponse = data.disableResponse;\n  for (const instanceUuid of data.instanceUuids) {\n    const instance = InstanceSubsystem.getInstance(instanceUuid);\n    try {\n      await instance!.exec(new StartCommand(ctx.socket.id));\n      if (!disableResponse) protocol.msg(ctx, \"instance/open\", { instanceUuid });\n    } catch (err: any) {\n      if (!disableResponse) {\n        logger.error(\n          $t(\"TXT_CODE_Instance_router.openInstanceErr\", { instanceUuid: instanceUuid }),\n          err\n        );\n        protocol.error(ctx, \"instance/open\", { instanceUuid: instanceUuid, err: err.message });\n      }\n    }\n  }\n});\n\n// close the instance\nrouterApp.on(\"instance/stop\", async (ctx, data) => {\n  const disableResponse = data.disableResponse;\n  for (const instanceUuid of data.instanceUuids) {\n    const instance = InstanceSubsystem.getInstance(instanceUuid);\n    try {\n      if (!instance) throw new Error($t(\"TXT_CODE_3bfb9e04\"));\n      await instance.exec(new StopCommand());\n      //Note: Removing this reply will cause the front-end response to be slow, because the front-end will wait for the panel-side message to be forwarded\n      if (!disableResponse) protocol.msg(ctx, \"instance/stop\", { instanceUuid });\n    } catch (err: any) {\n      if (!disableResponse)\n        protocol.error(ctx, \"instance/stop\", { instanceUuid: instanceUuid, err: err.message });\n    }\n  }\n});\n\n// restart the instance\nrouterApp.on(\"instance/restart\", async (ctx, data) => {\n  const disableResponse = data.disableResponse;\n  for (const instanceUuid of data.instanceUuids) {\n    const instance = InstanceSubsystem.getInstance(instanceUuid);\n    try {\n      if (!instance) throw new Error($t(\"TXT_CODE_3bfb9e04\"));\n      await instance.exec(new RestartCommand());\n      if (!disableResponse) protocol.msg(ctx, \"instance/restart\", { instanceUuid });\n    } catch (err: any) {\n      if (!disableResponse)\n        protocol.error(ctx, \"instance/restart\", { instanceUuid: instanceUuid, err: err.message });\n    }\n  }\n});\n\n// terminate instance method\nrouterApp.on(\"instance/kill\", async (ctx, data) => {\n  const disableResponse = data.disableResponse;\n  for (const instanceUuid of data.instanceUuids) {\n    const instance = InstanceSubsystem.getInstance(instanceUuid);\n    if (!instance) continue;\n    try {\n      await instance.forceExec(new KillCommand());\n      if (!disableResponse) protocol.msg(ctx, \"instance/kill\", { instanceUuid });\n    } catch (err: any) {\n      if (!disableResponse)\n        protocol.error(ctx, \"instance/kill\", { instanceUuid: instanceUuid, err: err.message });\n    }\n  }\n});\n\n// Send a command to the application instance\nrouterApp.on(\"instance/command\", async (ctx, data) => {\n  const disableResponse = data.disableResponse;\n  const instanceUuid = data.instanceUuid;\n  const command = data.command || \"\";\n  const instance = InstanceSubsystem.getInstance(instanceUuid);\n  try {\n    if (!instance) throw new Error($t(\"TXT_CODE_3bfb9e04\"));\n    await instance.exec(new SendCommand(command));\n    if (!disableResponse) protocol.msg(ctx, \"instance/command\", { instanceUuid });\n  } catch (err: any) {\n    if (!disableResponse)\n      protocol.error(ctx, \"instance/command\", { instanceUuid: instanceUuid, err: err.message });\n  }\n});\n\n// delete instance\nrouterApp.on(\"instance/delete\", (ctx, data) => {\n  const instanceUuids = data.instanceUuids;\n  const deleteFile = data.deleteFile;\n  for (const instanceUuid of instanceUuids) {\n    try {\n      InstanceSubsystem.removeInstance(instanceUuid, deleteFile);\n    } catch (err: any) {}\n  }\n  protocol.msg(ctx, \"instance/delete\", instanceUuids);\n});\n\n// perform complex asynchronous tasks\nrouterApp.on(\"instance/asynchronous\", (ctx, data) => {\n  const instanceUuid = data.instanceUuid;\n  const taskName = data.taskName;\n  const parameter = data.parameter;\n  const instance = InstanceSubsystem.getInstance(instanceUuid);\n\n  logger.info(\n    $t(\"TXT_CODE_Instance_router.performTasks\", {\n      id: ctx.socket.id,\n      uuid: instanceUuid,\n      taskName: taskName\n    })\n  );\n\n  // Install instance via preset package\n  if (taskName === \"install_instance\" && instance) {\n    instance\n      .execPreset(\"install\", parameter)\n      .then(() => {})\n      .catch((err) => {\n        logger.error(\n          $t(\"TXT_CODE_Instance_router.performTasksErr\", {\n            uuid: instance.instanceUuid,\n            taskName: taskName,\n            err: err\n          })\n        );\n      });\n  }\n\n  // Instance software update via Command\n  if (taskName === \"update\" && instance) {\n    instance\n      .execPreset(\"update\", parameter)\n      .then(() => {})\n      .catch((err) => {\n        logger.error(\n          $t(\"TXT_CODE_Instance_router.performTasksErr\", {\n            uuid: instance.instanceUuid,\n            taskName: taskName,\n            err: err\n          })\n        );\n      });\n  }\n  // Quick install Minecraft server task\n  if (taskName === \"quick_install\") {\n    const newInstanceName = String(parameter.newInstanceName);\n    const targetLink = String(parameter.targetLink);\n    logger.info(`Quick install: Name: ${newInstanceName} | Download: ${targetLink}`);\n    const task = createQuickInstallTask(targetLink, newInstanceName, parameter.setupInfo);\n    return protocol.response(ctx, task.toObject());\n  }\n\n  protocol.response(ctx, true);\n});\n\n// Terminate the execution of complex asynchronous tasks\nrouterApp.on(\"instance/stop_asynchronous\", (ctx, data) => {\n  const instanceUuid = data.instanceUuid;\n  const { taskId } = data.parameter;\n  const instance = InstanceSubsystem.getInstance(instanceUuid);\n\n  // Multi-instance async task\n  if (taskId && typeof taskId === \"string\") {\n    const task = TaskCenter.getTask(taskId);\n    if (!task) throw new Error(`Async Task ID: ${taskId} does not exist`);\n    task.stop();\n    return protocol.response(ctx, true);\n  }\n\n  // Singleton async task\n  const task = instance?.asynchronousTask;\n  if (task && task.stop) {\n    task\n      .stop(instance)\n      .then(() => {})\n      .catch((err) => {});\n  } else {\n    return protocol.error(\n      ctx,\n      \"instance/stop_asynchronous\",\n      $t(\"TXT_CODE_Instance_router.taskEmpty\")\n    );\n  }\n\n  protocol.response(ctx, true);\n});\n\n// Query async task status\nrouterApp.on(\"instance/query_asynchronous\", (ctx, data) => {\n  const taskId = data.parameter.taskId as string | undefined;\n  const taskName = data.taskName as string;\n  const taskNameTypeMap: IJson<string> = {\n    quick_install: QuickInstallTask.TYPE\n  };\n  const type = String(taskNameTypeMap[taskName] || QuickInstallTask.TYPE);\n  if (!taskId) {\n    const result = [];\n    for (const task of TaskCenter.getTasks(type)) {\n      result.push({\n        taskId: task.taskId,\n        status: task.status(),\n        detail: task.toObject()\n      });\n    }\n    protocol.response(ctx, result);\n  } else {\n    const task = TaskCenter.getTask(String(taskId));\n    if (task)\n      protocol.response(ctx, {\n        taskId: task.taskId,\n        status: task.status(),\n        detail: task.toObject()\n      });\n  }\n});\n\nrouterApp.on(\"instance/process_config/list\", (ctx, data) => {\n  const instanceUuid = data.instanceUuid;\n  const files = data.files;\n  const result: any[] = [];\n  try {\n    const instance = InstanceSubsystem.getInstance(instanceUuid);\n    if (!instance) throw new Error($t(\"TXT_CODE_3bfb9e04\"));\n    const fileManager = new FileManager(instance.absoluteCwdPath());\n    for (const filePath of files) {\n      if (fileManager.check(filePath)) {\n        result.push({\n          file: filePath,\n          check: true\n        });\n      }\n    }\n    protocol.response(ctx, result);\n  } catch (err: any) {\n    protocol.responseError(ctx, err);\n  }\n});\n\n// Get or update the content of the instance specified file\nrouterApp.on(\"instance/process_config/file\", (ctx, data) => {\n  const instanceUuid = data.instanceUuid;\n  const fileName = data.fileName;\n  const config = data.config || null;\n  const fileType = data.type;\n  try {\n    const instance = InstanceSubsystem.getInstance(instanceUuid);\n    if (!instance) throw new Error($t(\"TXT_CODE_3bfb9e04\"));\n    const fileManager = new FileManager(instance.absoluteCwdPath());\n    if (!fileManager.check(fileName)) throw new Error($t(\"TXT_CODE_Instance_router.accessFileErr\"));\n    const filePath = path.normalize(path.join(instance.absoluteCwdPath(), fileName));\n    const processConfig = new ProcessConfig({\n      fileName: fileName,\n      redirect: fileName,\n      path: filePath,\n      type: fileType,\n      info: null,\n      fromLink: null\n    });\n    if (config) {\n      processConfig.write(config);\n      return protocol.response(ctx, true);\n    } else {\n      const json = processConfig.read();\n      return protocol.response(ctx, json);\n    }\n  } catch (err: any) {\n    protocol.responseError(ctx, err);\n  }\n});\n\n// Get instance terminal log\nrouterApp.on(\"instance/outputlog\", async (ctx, data) => {\n  const instanceUuid = data.instanceUuid;\n  try {\n    const filePath = path.join(InstanceSubsystem.LOG_DIR, `${instanceUuid}.log`);\n    if (fs.existsSync(filePath)) {\n      const text = await fs.readFile(filePath, { encoding: \"utf-8\" });\n      return protocol.response(ctx, text);\n    }\n    protocol.responseError(ctx, new Error($t(\"TXT_CODE_Instance_router.terminalLogNotExist\")), {\n      disablePrint: true\n    });\n  } catch (err: any) {\n    protocol.responseError(ctx, err);\n  }\n});\n","import { $t } from \"../i18n\";\nimport { routerApp } from \"../service/router\";\nimport * as protocol from \"../service/protocol\";\nimport { globalConfiguration } from \"../entity/config\";\nimport logger from \"../service/log\";\nimport RouterContext from \"../entity/ctx\";\nimport { IGNORE } from \"../const\";\nimport { LOGIN_BY_TOP_LEVEL, loginSuccessful } from \"../service/mission_passport\";\n\n// latest verification time\nconst AUTH_TIMEOUT = 6000;\n\n// Top-level authority authentication middleware (this is the first place for any authority authentication middleware)\nrouterApp.use(async (event, ctx, _, next) => {\n  const socket = ctx.socket;\n  // release all data flow controllers\n  if (event.startsWith(\"stream\")) return next();\n  // Except for the auth controller, which is publicly accessible, other business controllers must be authorized before they can be accessed\n  if (event === \"auth\") return await next();\n  if (!ctx.session) throw new Error(\"Session does not exist in authentication middleware.\");\n  if (\n    ctx.session.key === globalConfiguration.config.key &&\n    ctx.session.type === LOGIN_BY_TOP_LEVEL &&\n    ctx.session.login &&\n    ctx.session.id\n  ) {\n    return await next();\n  }\n  logger.warn(\n    $t(\"TXT_CODE_auth_router.notAccess\", {\n      id: socket.id,\n      address: socket.handshake.address,\n      event: event\n    })\n  );\n  return protocol.error(ctx, \"error\", IGNORE, {\n    disablePrint: true\n  });\n});\n\n// authentication controller\nrouterApp.on(\"auth\", (ctx, data) => {\n  if (data === globalConfiguration.config.key) {\n    // The authentication is passed, and the registered session is a trusted session\n    logger.info(\n      $t(\"TXT_CODE_auth_router.access\", {\n        id: ctx.socket.id,\n        address: ctx.socket.handshake.address\n      })\n    );\n    loginSuccessful(ctx, data);\n    protocol.msg(ctx, \"auth\", true);\n  } else {\n    protocol.msg(ctx, \"auth\", false);\n  }\n});\n\n// Connected event for timeout authentication close\nrouterApp.on(\"connection\", (ctx) => {\n  const session = ctx.session;\n  setTimeout(() => {\n    if (!session.login) {\n      ctx.socket.disconnect();\n      logger.info(\n        $t(\"TXT_CODE_auth_router.disconnect\", {\n          id: ctx.socket.id,\n          address: ctx.socket.handshake.address\n        })\n      );\n    }\n  }, AUTH_TIMEOUT);\n});\n","import { $t } from \"../i18n\";\nimport { DockerManager } from \"../service/docker_service\";\nimport * as protocol from \"../service/protocol\";\nimport { routerApp } from \"../service/router\";\nimport * as fs from \"fs-extra\";\nimport path from \"path\";\nimport { v4 } from \"uuid\";\nimport logger from \"../service/log\";\nimport os from \"os\";\n\n// Get the image list of this system\nrouterApp.on(\"environment/images\", async (ctx, data) => {\n  try {\n    const docker = new DockerManager().getDocker();\n    const result = await docker.listImages();\n    protocol.response(ctx, result);\n  } catch (error: any) {\n    protocol.responseError(ctx, $t(\"TXT_CODE_environment_router.dockerInfoErr\"));\n  }\n});\n\n// Get the list of containers in this system\nrouterApp.on(\"environment/containers\", async (ctx, data) => {\n  try {\n    const docker = new DockerManager().getDocker();\n    const result = await docker.listContainers();\n    protocol.response(ctx, result);\n  } catch (error: any) {\n    protocol.responseError(ctx, error);\n  }\n});\n\n// Get the network list of this system\nrouterApp.on(\"environment/networkModes\", async (ctx, data) => {\n  try {\n    const docker = new DockerManager().getDocker();\n    const result = await docker.listNetworks();\n    protocol.response(ctx, result);\n  } catch (error: any) {\n    protocol.responseError(ctx, error);\n  }\n});\n\n// create image\nrouterApp.on(\"environment/new_image\", async (ctx, data) => {\n  try {\n    const dockerFileText = data.dockerFile;\n    const name = data.name;\n    const tag = data.tag;\n    // Initialize the image file directory and Dockerfile\n    const uuid = v4();\n    const dockerFileDir = path.normalize(path.join(process.cwd(), \"tmp\", uuid));\n    if (!fs.existsSync(dockerFileDir)) fs.mkdirsSync(dockerFileDir);\n\n    // write to DockerFile\n    const dockerFilepath = path.normalize(path.join(dockerFileDir, \"Dockerfile\"));\n    await fs.writeFile(dockerFilepath, dockerFileText, { encoding: \"utf-8\" });\n\n    logger.info(\n      $t(\"TXT_CODE_environment_router.crateImage\", {\n        name: name,\n        tag: tag,\n        dockerFileText: dockerFileText\n      })\n    );\n\n    // pre-response\n    protocol.response(ctx, true);\n\n    // start creating\n    const dockerImageName = `${name}:${tag}`;\n    try {\n      await new DockerManager().startBuildImage(dockerFileDir, dockerImageName);\n      logger.info($t(\"TXT_CODE_environment_router.crateSuccess\", { name: name, tag: tag }));\n    } catch (error: any) {\n      logger.info(\n        $t(\"TXT_CODE_environment_router.crateErr\", { name: name, tag: tag, error: error })\n      );\n    }\n  } catch (error: any) {\n    protocol.responseError(ctx, error);\n  }\n});\n\n// delete image\nrouterApp.on(\"environment/del_image\", async (ctx, data) => {\n  try {\n    const imageId = data.imageId;\n    const docker = new DockerManager().getDocker();\n    const image = docker.getImage(imageId);\n    if (image) {\n      logger.info($t(\"TXT_CODE_environment_router.delImage\", { imageId: imageId }));\n      await image.remove();\n    } else {\n      throw new Error(\"Image does not exist\");\n    }\n    protocol.response(ctx, true);\n  } catch (error: any) {\n    protocol.responseError(ctx, error);\n  }\n});\n\n// Get the progress of all mirroring tasks\nrouterApp.on(\"environment/progress\", async (ctx) => {\n  try {\n    const data: any = {};\n    DockerManager.builderProgress.forEach((v, k) => {\n      data[k] = v;\n    });\n    protocol.response(ctx, data);\n  } catch (error: any) {\n    protocol.responseError(ctx, error);\n  }\n});\n","import { $t } from \"../i18n\";\nimport * as protocol from \"../service/protocol\";\nimport { routerApp } from \"../service/router\";\nimport InstanceSubsystem from \"../service/system_instance\";\nimport { getFileManager, getWindowsDisks } from \"../service/file_router_service\";\nimport { globalConfiguration, globalEnv } from \"../entity/config\";\nimport os from \"os\";\n\n// Some routers operate router authentication middleware\nrouterApp.use((event, ctx, data, next) => {\n  if (event.startsWith(\"file/\")) {\n    const instanceUuid = data.instanceUuid;\n    if (!InstanceSubsystem.exists(instanceUuid)) {\n      return protocol.error(ctx, event, {\n        instanceUuid: instanceUuid,\n        err: $t(\"TXT_CODE_file_router.instanceNotExist\", { instanceUuid: instanceUuid })\n      });\n    }\n  }\n  next();\n});\n\n// List the files in the specified instance working directory\nrouterApp.on(\"file/list\", (ctx, data) => {\n  try {\n    const fileManager = getFileManager(data.instanceUuid);\n    const { page, pageSize, target, fileName } = data;\n    fileManager.cd(target);\n    const overview = fileManager.list(page, pageSize, fileName);\n    protocol.response(ctx, overview);\n  } catch (error: any) {\n    protocol.responseError(ctx, error);\n  }\n});\n\n// File chmod (only Linux)\nrouterApp.on(\"file/chmod\", async (ctx, data) => {\n  try {\n    const fileManager = getFileManager(data.instanceUuid);\n    const { chmod, target, deep } = data;\n    await fileManager.chmod(target, chmod, deep);\n    protocol.response(ctx, true);\n  } catch (error: any) {\n    protocol.responseError(ctx, error);\n  }\n});\n\n// Query the status of the file management system\nrouterApp.on(\"file/status\", async (ctx, data) => {\n  try {\n    const instance = InstanceSubsystem.getInstance(data.instanceUuid);\n    if (!instance) throw new Error($t(\"TXT_CODE_3bfb9e04\"));\n    protocol.response(ctx, {\n      instanceFileTask: instance.info.fileLock ?? 0,\n      globalFileTask: globalEnv.fileTaskCount ?? 0,\n      platform: os.platform(),\n      isGlobalInstance: data.instanceUuid === InstanceSubsystem.GLOBAL_INSTANCE_UUID,\n      disks: getWindowsDisks()\n    });\n  } catch (error: any) {\n    protocol.responseError(ctx, error);\n  }\n});\n\n// Create a new file\nrouterApp.on(\"file/touch\", (ctx, data) => {\n  try {\n    const target = data.target;\n    const fileManager = getFileManager(data.instanceUuid);\n    fileManager.newFile(target);\n    protocol.response(ctx, true);\n  } catch (error: any) {\n    protocol.responseError(ctx, error);\n  }\n});\n\n// Create a directory\nrouterApp.on(\"file/mkdir\", (ctx, data) => {\n  try {\n    const target = data.target;\n    const fileManager = getFileManager(data.instanceUuid);\n    fileManager.mkdir(target);\n    protocol.response(ctx, true);\n  } catch (error: any) {\n    protocol.responseError(ctx, error);\n  }\n});\n\n// copy the file\nrouterApp.on(\"file/copy\", async (ctx, data) => {\n  try {\n    // [[\"a.txt\",\"b.txt\"],[\"cxz\",\"zzz\"]]\n    const targets = data.targets;\n    const fileManager = getFileManager(data.instanceUuid);\n    for (const target of targets) {\n      fileManager.copy(target[0], target[1]);\n    }\n    protocol.response(ctx, true);\n  } catch (error: any) {\n    protocol.responseError(ctx, error);\n  }\n});\n\n// move the file\nrouterApp.on(\"file/move\", async (ctx, data) => {\n  try {\n    // [[\"a.txt\",\"b.txt\"],[\"cxz\",\"zzz\"]]\n    const targets = data.targets;\n    const fileManager = getFileManager(data.instanceUuid);\n    for (const target of targets) {\n      await fileManager.move(target[0], target[1]);\n    }\n    protocol.response(ctx, true);\n  } catch (error: any) {\n    protocol.responseError(ctx, error);\n  }\n});\n\n// Delete Files\nrouterApp.on(\"file/delete\", async (ctx, data) => {\n  try {\n    const targets = data.targets;\n    const fileManager = getFileManager(data.instanceUuid);\n    for (const target of targets) {\n      // async delete\n      fileManager.delete(target);\n    }\n    protocol.response(ctx, true);\n  } catch (error: any) {\n    protocol.responseError(ctx, error);\n  }\n});\n\n// edit file\nrouterApp.on(\"file/edit\", async (ctx, data) => {\n  try {\n    const target = data.target;\n    const text = data.text;\n    const fileManager = getFileManager(data.instanceUuid);\n    const result = await fileManager.edit(target, text);\n    protocol.response(ctx, result ? result : true);\n  } catch (error: any) {\n    protocol.responseError(ctx, error);\n  }\n});\n\n// compress/decompress the file\nrouterApp.on(\"file/compress\", async (ctx, data) => {\n  const maxFileTask = globalConfiguration.config.maxFileTask;\n  try {\n    const source = data.source;\n    const targets = data.targets;\n    const type = data.type;\n    const code = data.code;\n    const fileManager = getFileManager(data.instanceUuid);\n    const instance = InstanceSubsystem.getInstance(data.instanceUuid);\n    if (!instance) throw new Error($t(\"TXT_CODE_3bfb9e04\"));\n    if (instance.info.fileLock >= maxFileTask) {\n      throw new Error(\n        $t(\"TXT_CODE_file_router.unzipLimit\", {\n          maxFileTask: maxFileTask,\n          fileLock: instance.info.fileLock\n        })\n      );\n    }\n    // Statistics of the number of tasks in a single instance file and the number of tasks in the entire daemon process\n    function fileTaskStart() {\n      if (instance) {\n        instance.info.fileLock++;\n        globalEnv.fileTaskCount++;\n      }\n    }\n    function fileTaskEnd() {\n      if (instance) {\n        instance.info.fileLock--;\n        globalEnv.fileTaskCount--;\n      }\n    }\n\n    // start decompressing or compressing the file\n    fileTaskStart();\n    try {\n      if (type === 1) {\n        await fileManager.zip(source, targets, code);\n      } else {\n        await fileManager.unzip(source, targets, code);\n      }\n      protocol.response(ctx, true);\n    } catch (error: any) {\n      throw error;\n    } finally {\n      fileTaskEnd();\n    }\n  } catch (error: any) {\n    protocol.responseError(ctx, error);\n  }\n});\n","import { $t } from \"../i18n\";\nimport Router from \"@koa/router\";\nimport send from \"koa-send\";\nimport fs from \"fs-extra\";\nimport path from \"path\";\nimport { missionPassport } from \"../service/mission_passport\";\nimport InstanceSubsystem from \"../service/system_instance\";\nimport FileManager from \"../service/system_file\";\nimport formidable from \"formidable\";\nimport { clearUploadFiles } from \"../tools/filepath\";\nimport logger from \"../service/log\";\n\nconst router = new Router();\n\n// Define the HTTP home page display route\nrouter.all(\"/\", async (ctx) => {\n  ctx.body = \"[MCSManager Daemon] Status: OK | reference: https://mcsmanager.com/\";\n  ctx.status = 200;\n});\n\n// file download route\nrouter.get(\"/download/:key/:fileName\", async (ctx) => {\n  const key = ctx.params.key;\n  const paramsFileName = ctx.params.fileName;\n  try {\n    // Get the task from the task center\n    const mission = missionPassport.getMission(key, \"download\");\n    if (!mission) throw new Error((ctx.body = \"Access denied: No task found\"));\n    const instance = InstanceSubsystem.getInstance(mission.parameter.instanceUuid);\n    if (!instance) throw new Error($t(\"TXT_CODE_http_router.instanceNotExist\"));\n    if (!FileManager.checkFileName(paramsFileName))\n      throw new Error($t(\"TXT_CODE_http_router.fileNameNotSpec\"));\n\n    const cwd = instance.absoluteCwdPath();\n    const fileRelativePath = mission.parameter.fileName;\n\n    // Check for file cross-directory security risks\n    const fileManager = new FileManager(cwd);\n    if (!fileManager.check(fileRelativePath))\n      throw new Error((ctx.body = \"Access denied: Invalid destination\"));\n\n    // send File\n    const fileAbsPath = fileManager.toAbsolutePath(fileRelativePath);\n    const fileDir = path.dirname(fileAbsPath);\n    const fileName = path.basename(fileAbsPath);\n    ctx.set(\"Content-Type\", \"application/octet-stream\");\n    await send(ctx, fileName, { root: fileDir + \"/\", hidden: true });\n  } catch (error: any) {\n    ctx.body = $t(\"TXT_CODE_http_router.downloadErr\", { error: error.message });\n    ctx.status = 500;\n  } finally {\n    missionPassport.deleteMission(key);\n  }\n});\n\n// File upload route\nrouter.post(\"/upload/:key\", async (ctx) => {\n  const key = ctx.params.key;\n  const unzip = ctx.query.unzip;\n  const zipCode = String(ctx.query.code);\n  let tmpFiles: formidable.File | formidable.File[] | undefined;\n  try {\n    const mission = missionPassport.getMission(key, \"upload\");\n    if (!mission) throw new Error(\"Access denied: No task found\");\n    const instance = InstanceSubsystem.getInstance(mission.parameter.instanceUuid);\n    if (!instance) throw new Error(\"Access denied: No instance found\");\n    const uploadDir = mission.parameter.uploadDir;\n    const cwd = instance.absoluteCwdPath();\n    const tmpFiles = ctx.request.files?.file;\n    if (tmpFiles) {\n      let uploadedFile: formidable.File;\n      if (tmpFiles instanceof Array) {\n        uploadedFile = tmpFiles[0];\n      } else {\n        throw new Error(\"Access denied: Files must a array!\");\n      }\n\n      const originFileName = uploadedFile.originalFilename || \"\";\n      if (!FileManager.checkFileName(path.basename(originFileName)))\n        throw new Error(\"Access denied: Malformed file name\");\n      const fileManager = new FileManager(cwd);\n\n      const ext = path.extname(originFileName);\n      const basename = path.basename(originFileName, ext);\n\n      let tempFileSaveName = basename + ext;\n      let counter = 1;\n\n      while (\n        fs.existsSync(\n          fileManager.toAbsolutePath(path.normalize(path.join(uploadDir, tempFileSaveName)))\n        ) &&\n        ctx.query.overwrite === \"false\"\n      ) {\n        if (counter == 1) {\n          tempFileSaveName = `${basename}-copy${ext}`;\n        } else {\n          tempFileSaveName = `${basename}-copy-${counter}${ext}`;\n        }\n        counter++;\n      }\n\n      let fileSaveRelativePath = path.normalize(path.join(uploadDir, tempFileSaveName));\n\n      if (!fileManager.checkPath(fileSaveRelativePath))\n        throw new Error(\"Access denied: Invalid destination\");\n\n      const fileSaveAbsolutePath = fileManager.toAbsolutePath(fileSaveRelativePath);\n\n      logger.info(\n        \"Browser Upload File:\",\n        fileSaveAbsolutePath,\n        \"File size:\",\n        Number(uploadedFile.size / 1024 / 1024).toFixed(0),\n        \"MB\"\n      );\n\n      await fs.move(uploadedFile.filepath, fileSaveAbsolutePath, {\n        overwrite: true\n      });\n\n      if (unzip) {\n        const fileManager = new FileManager(instance.absoluteCwdPath());\n        fileManager.unzip(fileSaveAbsolutePath, \"\", zipCode);\n      }\n      ctx.body = \"OK\";\n      return;\n    }\n    ctx.body = \"Access denied: No file found\";\n    ctx.status = 500;\n  } catch (error: any) {\n    ctx.body = error.message;\n    ctx.status = 500;\n  } finally {\n    missionPassport.deleteMission(key);\n    if (tmpFiles) clearUploadFiles(tmpFiles);\n  }\n});\nexport default router;\n","import * as protocol from \"../service/protocol\";\nimport { routerApp } from \"../service/router\";\nimport InstanceSubsystem from \"../service/system_instance\";\nimport Instance from \"../entity/instance/instance\";\n\nimport { systemInfo } from \"common\";\nimport { getVersion } from \"../service/version\";\nimport { globalConfiguration } from \"../entity/config\";\nimport i18next from \"i18next\";\nimport logger from \"../service/log\";\nimport fs from \"fs-extra\";\nimport { LOCAL_PRESET_LANG_PATH } from \"../const\";\nimport VisualDataSubsystem from \"../service/system_visual_data\";\n\n// Get the basic information of the daemon system\nrouterApp.on(\"info/overview\", async (ctx) => {\n  const daemonVersion = getVersion();\n  let total = 0;\n  let running = 0;\n  InstanceSubsystem.getInstances().forEach((v) => {\n    total++;\n    if (v.status() == Instance.STATUS_RUNNING) running++;\n  });\n  const info = {\n    version: daemonVersion,\n    process: {\n      cpu: process.cpuUsage().system,\n      memory: process.memoryUsage().heapUsed,\n      cwd: process.cwd()\n    },\n    instance: {\n      running,\n      total\n    },\n    system: systemInfo(),\n    cpuMemChart: VisualDataSubsystem.getSystemChartArray()\n  };\n  protocol.response(ctx, info);\n});\n\nrouterApp.on(\"info/setting\", async (ctx, data) => {\n  const language = String(data.language);\n  try {\n    logger.warn(\"Language change:\", language);\n    i18next.changeLanguage(language);\n    fs.remove(LOCAL_PRESET_LANG_PATH, () => {});\n    globalConfiguration.config.language = language;\n    globalConfiguration.store();\n    protocol.response(ctx, true);\n  } catch (error: any) {\n    protocol.responseError(ctx, error);\n  }\n});\n","import path from \"path\";\n\nimport RouterContext from \"../entity/ctx\";\nimport * as protocol from \"../service/protocol\";\nimport InstanceSubsystem from \"../service/system_instance\";\nimport fs from \"fs-extra\";\nconst MAX_LOG_SIZE = 512;\n\n// buffer\nconst buffer = new Map<string, string>();\nsetInterval(() => {\n  buffer.forEach((buf, instanceUuid) => {\n    if (!buf || !instanceUuid) return;\n    const logFilePath = path.join(InstanceSubsystem.LOG_DIR, `${instanceUuid}.log`);\n    if (!fs.existsSync(InstanceSubsystem.LOG_DIR)) fs.mkdirsSync(InstanceSubsystem.LOG_DIR);\n    try {\n      const fileInfo = fs.statSync(logFilePath);\n      if (fileInfo && fileInfo.size > 1024 * MAX_LOG_SIZE) fs.removeSync(logFilePath);\n    } catch (err: any) {}\n    fs.writeFile(logFilePath, buf, { encoding: \"utf-8\", flag: \"a\" }, () => {\n      buffer.set(instanceUuid, \"\");\n    });\n  });\n}, 500);\n\n// output stream record to buffer\nasync function outputLog(instanceUuid: string, text: string) {\n  const buf = (buffer.get(instanceUuid) ?? \"\") + text;\n  if (buf.length > 1024 * 1024) buffer.set(instanceUuid, \"\");\n  buffer.set(instanceUuid, buf ?? null);\n}\n\n// instance output stream event\n// By default, it is added to the data cache to control the sending rate to ensure its stability\nInstanceSubsystem.on(\"data\", (instanceUuid: string, text: string) => {\n  InstanceSubsystem.forEachForward(instanceUuid, (socket) => {\n    protocol.msg(new RouterContext(null, socket), \"instance/stdout\", {\n      instanceUuid: instanceUuid,\n      text: text\n    });\n  });\n  // Append the output to the log file\n  outputLog(instanceUuid, text)\n    .then(() => {})\n    .catch(() => {});\n});\n\n// instance exit event\nInstanceSubsystem.on(\"exit\", (obj: any) => {\n  InstanceSubsystem.forEachForward(obj.instanceUuid, (socket) => {\n    protocol.msg(new RouterContext(null, socket), \"instance/stopped\", {\n      instanceUuid: obj.instanceUuid,\n      instanceName: obj.instanceName\n    });\n  });\n});\n\n// instance start event\nInstanceSubsystem.on(\"open\", (obj: any) => {\n  InstanceSubsystem.forEachForward(obj.instanceUuid, (socket) => {\n    protocol.msg(new RouterContext(null, socket), \"instance/opened\", {\n      instanceUuid: obj.instanceUuid,\n      instanceName: obj.instanceName\n    });\n  });\n});\n\n// Instance failure event (usually used for startup failure, or other operation failures)\nInstanceSubsystem.on(\"failure\", (obj: any) => {\n  InstanceSubsystem.forEachForward(obj.instanceUuid, (socket) => {\n    protocol.msg(new RouterContext(null, socket), \"instance/failure\", {\n      instanceUuid: obj.instanceUuid,\n      instanceName: obj.instanceName\n    });\n  });\n});\n","import { $t } from \"../i18n\";\nimport { routerApp } from \"../service/router\";\nimport { missionPassport } from \"../service/mission_passport\";\nimport * as protocol from \"../service/protocol\";\n\nconst ONE_HOUR_TIME = 3600000;\nconst TASK_MAX_TIME = 1;\n\n// register temporary task passport\n// For example, file upload, file download, these operations that need to bypass the Web side,\n// all need to use this route\nrouterApp.on(\"passport/register\", (ctx, data) => {\n  const name = data.name;\n  const password = data.password;\n  const parameter = data.parameter;\n  const count = data.count;\n  const start = new Date().getTime();\n  const end = start + ONE_HOUR_TIME * TASK_MAX_TIME;\n  if (!name || !password) throw new Error($t(\"TXT_CODE_passport_router.registerErr\"));\n  missionPassport.registerMission(password, {\n    name,\n    parameter,\n    count,\n    start,\n    end\n  });\n  protocol.response(ctx, true);\n});\n","import { routerApp } from \"../service/router\";\nimport * as protocol from \"../service/protocol\";\nimport InstanceControlSubsystem from \"../service/system_instance_control\";\n\n// create a scheduled task\nrouterApp.on(\"schedule/register\", (ctx, data) => {\n  try {\n    InstanceControlSubsystem.registerScheduleJob(data);\n    protocol.response(ctx, true);\n  } catch (error: any) {\n    protocol.responseError(ctx, error);\n  }\n});\n\n// get the task list\nrouterApp.on(\"schedule/list\", (ctx, data) => {\n  protocol.response(ctx, InstanceControlSubsystem.listScheduleJob(data.instanceUuid));\n});\n\n// delete the task plan\nrouterApp.on(\"schedule/delete\", (ctx, data) => {\n  InstanceControlSubsystem.deleteScheduleTask(data.instanceUuid, data.name);\n  protocol.response(ctx, true);\n});\n","import { $t } from \"../i18n\";\nimport * as protocol from \"../service/protocol\";\nimport { routerApp } from \"../service/router\";\nimport {\n  LOGIN_FROM_STREAM,\n  missionPassport,\n  streamLoginSuccessful\n} from \"../service/mission_passport\";\nimport InstanceSubsystem from \"../service/system_instance\";\nimport SendCommand from \"../entity/commands/cmd\";\nimport { IGNORE } from \"../const\";\n\n// Authorization authentication middleware\nrouterApp.use(async (event, ctx, data, next) => {\n  // release data flow authentication route\n  if (event === \"stream/auth\") return next();\n  // Check other routes for data flow\n  if (event.startsWith(\"stream\")) {\n    if (\n      ctx.session.stream &&\n      ctx.session?.stream?.check === true &&\n      ctx.session.type === LOGIN_FROM_STREAM\n    ) {\n      return await next();\n    }\n    return protocol.error(ctx, \"error\", IGNORE, {\n      disablePrint: true\n    });\n  }\n  return await next();\n});\n\n// Publicly accessible dataflow authentication route\nrouterApp.on(\"stream/auth\", (ctx, data) => {\n  try {\n    const password = data.password;\n    const mission = missionPassport.getMission(password, \"stream_channel\");\n    if (!mission) throw new Error($t(\"TXT_CODE_stream_router.taskNotExist\"));\n    const instance = InstanceSubsystem.getInstance(mission.parameter.instanceUuid);\n    if (!instance) throw new Error($t(\"TXT_CODE_stream_router.instanceNotExist\"));\n    // Auth success!\n    streamLoginSuccessful(ctx, instance.instanceUuid);\n    // Start forwarding output stream data to this Socket\n    InstanceSubsystem.forward(instance.instanceUuid, ctx.socket);\n    // Cancel forwarding events when registration is disconnected\n    ctx.socket.on(\"disconnect\", () => {\n      InstanceSubsystem.stopForward(instance.instanceUuid, ctx.socket);\n    });\n    protocol.response(ctx, true);\n  } catch (error: any) {\n    protocol.responseError(ctx, error, {\n      disablePrint: true\n    });\n  }\n});\n\n// Get instance details\nrouterApp.on(\"stream/detail\", async (ctx) => {\n  try {\n    const instanceUuid = ctx.session?.stream?.instanceUuid;\n    const instance = InstanceSubsystem.getInstance(instanceUuid);\n    if (!instance) throw new Error($t(\"TXT_CODE_3bfb9e04\"));\n    protocol.response(ctx, {\n      instanceUuid: instance.instanceUuid,\n      started: instance.startCount,\n      status: instance.status(),\n      config: instance.config,\n      info: instance.info,\n      watcher: instance.watchers.size\n    });\n  } catch (error: any) {\n    protocol.responseError(ctx, error);\n  }\n});\n\n// Execute commands, line-based interactive input and output streams for ordinary processes\nrouterApp.on(\"stream/input\", async (ctx, data) => {\n  try {\n    const command = data.command;\n    const instanceUuid = ctx.session?.stream?.instanceUuid;\n    const instance = InstanceSubsystem.getInstance(instanceUuid);\n    await instance?.exec(new SendCommand(command));\n  } catch (error: any) {\n    // Ignore potential high frequency exceptions here\n  }\n});\n\n// Process terminal input, suitable for direct connection input and output streams of simulated terminals.\nrouterApp.on(\"stream/write\", async (ctx, data) => {\n  try {\n    const buf = data.input;\n    const instanceUuid = ctx.session?.stream?.instanceUuid;\n    const instance = InstanceSubsystem.getInstance(instanceUuid);\n    // run without command execution\n    if (instance?.process) instance.process.write(buf);\n  } catch (error: any) {\n    // Ignore potential high frequency exceptions here\n  }\n});\n\n// Handle terminal resize\n// interface IResizeOptions {\n//   h: number;\n//   w: number;\n// }\nrouterApp.on(\"stream/resize\", async (ctx, data) => {\n  try {\n    const instanceUuid = ctx.session?.stream?.instanceUuid;\n    const instance = InstanceSubsystem.getInstance(instanceUuid);\n    instance?.watchers.set(ctx.socket.id, {\n      terminalSize: {\n        w: Number(data.w) || 0,\n        h: Number(data.h) || 0\n      }\n    });\n    if (instance) await instance.execPreset(\"resize\");\n  } catch (error: any) {\n    // Ignore potential high frequency exceptions here\n  }\n});\n","import EventEmitter from \"events\";\nimport logger from \"../log\";\n\nexport type IAsyncTaskJSON = any;\n\nexport interface IAsyncTask extends EventEmitter {\n  // The taskId must be complex enough to prevent other users from accessing the information\n  taskId: string;\n  type: string;\n  start(): Promise<void>;\n  stop(): Promise<void>;\n  status(): number;\n  toObject(): IAsyncTaskJSON;\n}\n\nexport abstract class AsyncTask extends EventEmitter implements IAsyncTask {\n  public static readonly STATUS_STOP = 0;\n  public static readonly STATUS_RUNNING = 1;\n  public static readonly STATUS_ERROR = -1;\n\n  public taskId: string = \"\";\n  public type: string = \"\";\n\n  public errorInfo?: Error;\n\n  protected _status = AsyncTask.STATUS_STOP;\n\n  constructor() {\n    super();\n  }\n\n  public async start() {\n    this._status = AsyncTask.STATUS_RUNNING;\n    try {\n      await this.onStart();\n      this.emit(\"started\");\n    } catch (error: any) {\n      this.error(error);\n      throw error;\n    }\n  }\n\n  public async stop() {\n    if (this._status === AsyncTask.STATUS_STOP) return Promise.resolve();\n    try {\n      await this.onStop();\n    } finally {\n      if (this._status !== AsyncTask.STATUS_ERROR) this._status = AsyncTask.STATUS_STOP;\n      this.emit(\"stopped\");\n    }\n  }\n\n  public async error(err: Error) {\n    this._status = AsyncTask.STATUS_ERROR;\n    this.errorInfo = err;\n    logger.error(`AsyncTask - ID: ${this.taskId} TYPE: ${this.type} Error:`, err);\n    await this.onError(err);\n    this.emit(\"error\", err);\n    this.stop();\n  }\n\n  public wait() {\n    return new Promise<void>((resolve, reject) => {\n      if (this._status === AsyncTask.STATUS_STOP) {\n        return resolve();\n      }\n      if (this._status === AsyncTask.STATUS_ERROR) {\n        return reject(this.errorInfo);\n      }\n      this.once(\"stopped\", () => {\n        resolve();\n      });\n      this.once(\"error\", (err) => {\n        reject(err);\n      });\n    });\n  }\n\n  status(): number {\n    return this._status;\n  }\n\n  public abstract onStart(): Promise<void>;\n  public abstract onStop(): Promise<void>;\n  public abstract onError(err: Error): Promise<void>;\n  public abstract toObject(): IAsyncTaskJSON;\n}\n\nexport class TaskCenter {\n  public static tasks = new Array<IAsyncTask>();\n\n  public static addTask(t: IAsyncTask) {\n    TaskCenter.tasks.push(t);\n    t.start();\n    t.on(\"stopped\", () => TaskCenter.onTaskStopped(t));\n    t.on(\"error\", () => TaskCenter.onTaskError(t));\n  }\n\n  public static onTaskStopped(t: IAsyncTask) {\n    logger.info(\"Async Task:\", t.taskId, \"Stopped.\");\n  }\n\n  public static onTaskError(t: IAsyncTask) {\n    logger.info(\"Async Task:\", t.taskId, \"Failed.\");\n  }\n\n  public static getTask(taskId: string, type?: string) {\n    for (const iterator of TaskCenter.tasks) {\n      if (iterator.taskId === taskId && (type == null || iterator.type === type)) return iterator;\n    }\n  }\n\n  public static getTasks(type?: string) {\n    const result: IAsyncTask[] = [];\n    for (const iterator of TaskCenter.tasks) {\n      if (type == null || iterator.type === type) {\n        result.push(iterator);\n      }\n    }\n    return result;\n  }\n\n  public static deleteAllStoppedTask() {\n    TaskCenter.tasks.forEach((v, i, arr) => {\n      if (v.status() !== 1) {\n        arr.splice(i, 1);\n      }\n    });\n  }\n}\n","import { v4 } from \"uuid\";\nimport axios from \"axios\";\nimport { pipeline, Readable } from \"stream\";\nimport fs from \"fs-extra\";\nimport Instance from \"../../entity/instance/instance\";\nimport InstanceSubsystem from \"../system_instance\";\nimport InstanceConfig from \"../../entity/instance/Instance_config\";\nimport { $t } from \"../../i18n\";\nimport path from \"path\";\nimport { getFileManager } from \"../file_router_service\";\nimport { IAsyncTaskJSON, TaskCenter, AsyncTask } from \"./index\";\nimport logger from \"../log\";\nimport { t } from \"i18next\";\nimport type { IJsonData } from \"common/global\";\nimport { InstanceUpdateAction } from \"../instance_update_action\";\n\nexport class QuickInstallTask extends AsyncTask {\n  public static TYPE = \"QuickInstallTask\";\n\n  public instance: Instance;\n  public readonly TMP_ZIP_NAME = \"mcsm_install_package.zip\";\n  public readonly ZIP_CONFIG_JSON = \"mcsmanager-config.json\";\n  public filePath = \"\";\n  public extName = \"\";\n\n  private downloadStream?: fs.WriteStream;\n  private writeStream?: fs.WriteStream;\n  private updateTask?: InstanceUpdateAction;\n\n  constructor(\n    public instanceName: string,\n    public targetLink?: string,\n    public buildParams?: Partial<InstanceConfig>,\n    curInstance?: Instance\n  ) {\n    super();\n    const config = new InstanceConfig();\n    config.nickname = instanceName;\n    config.stopCommand = \"^c\";\n    if (!curInstance) {\n      config.cwd = \"\";\n      this.instance = InstanceSubsystem.createInstance(config);\n    } else {\n      this.instance = curInstance;\n    }\n    this.taskId = `${QuickInstallTask.TYPE}-${this.instance.instanceUuid}-${v4()}`;\n    this.type = QuickInstallTask.TYPE;\n    this.extName = path.extname(this.targetLink ?? \"\") || \".zip\";\n  }\n\n  private download(): Promise<boolean> {\n    return new Promise(async (resolve, reject) => {\n      try {\n        if (!this.targetLink) return reject(new Error(\"No targetLink!\"));\n        let downloadFileName = this.TMP_ZIP_NAME;\n        if (this.extName !== \".zip\") {\n          const url = new URL(this.targetLink);\n          downloadFileName = url.pathname.split(\"/\").pop() || `application${this.extName}`;\n        }\n        this.filePath = path.normalize(\n          path.join(this.instance.absoluteCwdPath(), downloadFileName)\n        );\n        this.writeStream = fs.createWriteStream(this.filePath);\n        const response = await axios<Readable>({\n          url: this.targetLink,\n          responseType: \"stream\"\n        });\n        this.downloadStream = pipeline(response.data, this.writeStream, (err) => {\n          if (err) {\n            reject(err);\n          } else {\n            resolve(true);\n          }\n        });\n      } catch (error: any) {\n        reject(error);\n      }\n    });\n  }\n\n  async onStart() {\n    const fileManager = getFileManager(this.instance.instanceUuid);\n    try {\n      if (this.targetLink) {\n        let result = await this.download();\n        if (this.extName === \".zip\")\n          result = await fileManager.unzip(this.TMP_ZIP_NAME, \".\", \"UTF-8\");\n        if (!result) throw new Error($t(\"TXT_CODE_quick_install.unzipError\"));\n      }\n\n      let config: Partial<InstanceConfig>;\n      if (this.buildParams?.startCommand || !fs.existsSync(this.ZIP_CONFIG_JSON)) {\n        config = this.buildParams || {};\n      } else {\n        config = JSON.parse(await fileManager.readFile(this.ZIP_CONFIG_JSON));\n      }\n\n      logger.info(\n        t(\"TXT_CODE_e5ba712d\"),\n        this.instance.config.nickname,\n        this.instance.instanceUuid,\n        \"URL:\",\n        this.targetLink\n      );\n      logger.info(t(\"TXT_CODE_ac225d07\") + JSON.stringify(config));\n\n      this.instance.parameters(config);\n\n      // Render startCommand with ENV\n      if (this.instance.config.startCommand) {\n        let startCommand = this.instance.config.startCommand;\n        const ENV_MAP: IJsonData = {\n          java: \"java\",\n          cwd: this.instance.absoluteCwdPath(),\n          rconIp: this.instance.config.rconIp || \"localhost\",\n          rconPort: String(this.instance.config.rconPort),\n          rconPassword: this.instance.config.rconPassword,\n          nickname: this.instance.config.nickname,\n          instanceUuid: this.instance.instanceUuid\n        };\n        for (const key in ENV_MAP) {\n          const varDefine = `{{${key}}}`;\n          while (startCommand.includes(varDefine))\n            startCommand = startCommand?.replace(varDefine, ENV_MAP[key] || \"\");\n        }\n        this.instance.parameters({\n          startCommand\n        });\n      }\n\n      if (this.instance?.config?.updateCommand) {\n        try {\n          this.updateTask = new InstanceUpdateAction(this.instance);\n          await this.updateTask.start();\n          await this.updateTask.wait();\n        } catch (error) {}\n      }\n\n      this.stop();\n    } catch (error: any) {\n      this.error(error);\n    } finally {\n      if (fs.existsSync(fileManager.toAbsolutePath(this.TMP_ZIP_NAME)))\n        fs.remove(fileManager.toAbsolutePath(this.TMP_ZIP_NAME), () => {});\n    }\n  }\n\n  async onStop() {\n    try {\n      this.writeStream?.destroy();\n      this.writeStream = undefined;\n      this.downloadStream?.destroy();\n      this.downloadStream = undefined;\n    } catch (error) {\n      logger.error(\"QuickInstallTask -> onStop(): destroy download stream error:\", error);\n    }\n\n    try {\n      await this.updateTask?.stop();\n      this.updateTask = undefined;\n    } catch (error: any) {\n      logger.error(\"QuickInstallTask -> onStop(): updateTask stop error:\", error);\n    }\n  }\n\n  toObject(): IAsyncTaskJSON {\n    return JSON.parse(\n      JSON.stringify({\n        taskId: this.taskId,\n        status: this.status(),\n        instanceUuid: this.instance.instanceUuid,\n        instanceStatus: this.instance.status(),\n        instanceConfig: this.instance.config\n      })\n    );\n  }\n\n  async onError() {}\n}\n\nexport function createQuickInstallTask(\n  targetLink?: string,\n  instanceName?: string,\n  buildParams?: any\n) {\n  if (!instanceName) throw new Error(\"Instance name is empty!\");\n  const task = new QuickInstallTask(instanceName, targetLink, buildParams);\n  TaskCenter.addTask(task);\n  return task;\n}\n","import { GOLANG_ZIP_PATH } from \"../const\";\nimport fs from \"fs-extra\";\nimport { t } from \"i18next\";\n\nexport function checkDependencies() {\n  const dependencies = [GOLANG_ZIP_PATH];\n  dependencies.forEach((path) => {\n    if (!fs.existsSync(path)) {\n      throw new Error(t(\"TXT_CODE_6915f2a\") + path);\n    }\n  });\n}\n","import { t } from \"i18next\";\nimport { commandStringToArray } from \"../entity/commands/base/command_parser\";\nimport DockerPullCommand from \"../entity/commands/docker/docker_pull\";\nimport Instance from \"../entity/instance/instance\";\nimport { DefaultDocker } from \"./docker_service\";\n\nimport path from \"path\";\nimport { $t } from \"../i18n\";\nimport logger from \"./log\";\nimport Docker from \"dockerode\";\nimport { EventEmitter } from \"stream\";\nimport { IInstanceProcess } from \"../entity/instance/interface\";\nimport { AsyncTask } from \"./async_task_service\";\nimport iconv from \"iconv-lite\";\nimport { toText } from \"common\";\n\n// Error exception at startup\nexport class StartupDockerProcessError extends Error {\n  constructor(msg: string) {\n    super(msg);\n  }\n}\n\nexport interface IDockerProcessAdapterStartParam {\n  isTty: boolean;\n  h: number;\n  w: number;\n}\n\nexport class SetupDockerContainer extends AsyncTask {\n  private container?: Docker.Container;\n\n  constructor(public readonly instance: Instance, public readonly startCommand?: string) {\n    super();\n  }\n\n  public async onStart() {\n    const instance = this.instance;\n    const customCommand = this.startCommand;\n    // Docker Image check\n    try {\n      await instance.forceExec(new DockerPullCommand());\n    } catch (error: any) {\n      throw error;\n    }\n\n    // Command text parsing\n    let commandList: string[] = [];\n    if (instance.config?.startCommand?.trim() || customCommand?.trim()) {\n      commandList = commandStringToArray(customCommand ?? instance.config.startCommand);\n    } else {\n      commandList = [];\n    }\n\n    // Parsing port open\n    // 25565:25565/tcp 8080:8080/tcp\n    const portMap = instance.config.docker.ports || [];\n    const publicPortArray: any = {};\n    const exposedPorts: any = {};\n    for (const iterator of portMap) {\n      const elem = iterator.split(\"/\");\n      if (elem.length != 2) throw new Error($t(\"TXT_CODE_1cf6fc4b\"));\n      const ports = elem[0];\n      const protocol = elem[1];\n      //Host (host) port: container port\n      const publicAndPrivatePort = ports.split(\":\");\n      if (publicAndPrivatePort.length != 2) throw new Error(t(\"TXT_CODE_2029027e\"));\n      publicPortArray[`${publicAndPrivatePort[1]}/${protocol}`] = [\n        { HostPort: publicAndPrivatePort[0] }\n      ];\n      exposedPorts[`${publicAndPrivatePort[1]}/${protocol}`] = {};\n    }\n\n    // resolve extra path mounts\n    const extraVolumes = instance.config.docker.extraVolumes || [];\n    const extraBinds: { hostPath: string; containerPath: string }[] = [];\n    for (const item of extraVolumes) {\n      if (!item) throw new Error($t(\"TXT_CODE_ae441ea3\"));\n      const paths = item.split(\"|\");\n      if (paths.length < 2) throw new Error($t(\"TXT_CODE_dca030b8\"));\n      const hostPath = path.normalize(paths[0]);\n      const containerPath = path.normalize(paths[1]);\n      extraBinds.push({ hostPath, containerPath });\n    }\n\n    // memory limit\n    let maxMemory = undefined;\n    if (instance.config.docker.memory) maxMemory = instance.config.docker.memory * 1024 * 1024;\n\n    // CPU usage calculation\n    let cpuQuota = undefined;\n    let cpuPeriod = undefined;\n    if (instance.config.docker.cpuUsage) {\n      cpuQuota = instance.config.docker.cpuUsage * 10 * 1000;\n      cpuPeriod = 1000 * 1000;\n    }\n\n    // Check the number of CPU cores\n    let cpusetCpus = undefined;\n    if (instance.config.docker.cpusetCpus) {\n      const arr = instance.config.docker.cpusetCpus.split(\",\");\n      arr.forEach((v) => {\n        if (isNaN(Number(v))) throw new Error($t(\"TXT_CODE_instance.invalidCpu\", { v }));\n      });\n      cpusetCpus = instance.config.docker.cpusetCpus;\n      // Note: check\n    }\n\n    // container name check\n    let containerName =\n      instance.config.docker.containerName || `MCSM-${instance.instanceUuid.slice(0, 6)}`;\n    if (containerName && (containerName.length > 64 || containerName.length < 2)) {\n      throw new Error($t(\"TXT_CODE_instance.invalidContainerName\", { v: containerName }));\n    }\n\n    // Whether to use TTY mode\n    const isTty = instance.config.terminalOption.pty;\n\n    const workingDir = instance.config.docker.workingDir ?? \"\";\n\n    let cwd = instance.absoluteCwdPath();\n    const hostRealPath = toText(process.env.MCSM_DOCKER_WORKSPACE_PATH);\n    if (hostRealPath) {\n      cwd = path.normalize(path.join(hostRealPath, instance.instanceUuid));\n    }\n\n    if (workingDir) {\n      instance.println(\"CONTAINER\", $t(\"TXT_CODE_e76e49e9\") + cwd + \" --> \" + workingDir + \"\\n\");\n    } else {\n      instance.println(\"CONTAINER\", $t(\"TXT_CODE_ffa884f9\"));\n    }\n\n    logger.info(\"----------------\");\n    logger.info(`[SetupDockerContainer]`);\n    logger.info(`UUID: [${instance.instanceUuid}] [${instance.config.nickname}]`);\n    logger.info(`NAME: [${containerName}]`);\n    logger.info(`COMMAND: ${commandList.join(\" \")}`);\n    logger.info(`CWD: ${cwd}, WORKING_DIR: ${workingDir}`);\n    logger.info(`NET_MODE: ${instance.config.docker.networkMode}`);\n    logger.info(`OPEN_PORT: ${JSON.stringify(publicPortArray)}`);\n    logger.info(\n      `BINDS: ${JSON.stringify([\n        workingDir ? `${cwd} --> ${workingDir}` : \"<Working directory not mounted>\",\n        ...extraBinds\n      ])}`\n    );\n    logger.info(`NET_ALIASES: ${JSON.stringify(instance.config.docker.networkAliases)}`);\n    logger.info(`MEM_LIMIT: ${maxMemory || \"--\"} MB`);\n    logger.info(`TYPE: Docker Container`);\n    logger.info(\"----------------\");\n\n    const mounts: Docker.MountConfig =\n      extraBinds.map((v) => {\n        return {\n          Type: \"bind\",\n          Source: v.hostPath,\n          Target: v.containerPath\n        };\n      }) || [];\n    if (workingDir && cwd) {\n      mounts.push({\n        Type: \"bind\",\n        Source: cwd,\n        Target: workingDir\n      });\n    }\n\n    // Start Docker container creation and running\n    const docker = new DefaultDocker();\n    this.container = await docker.createContainer({\n      name: containerName,\n      Hostname: containerName,\n      Image: instance.config.docker.image,\n      AttachStdin: true,\n      AttachStdout: true,\n      AttachStderr: true,\n      Tty: isTty,\n      WorkingDir: workingDir,\n      Cmd: commandList ? commandList : undefined,\n      OpenStdin: true,\n      StdinOnce: false,\n      ExposedPorts: exposedPorts,\n      Env: instance.config.docker?.env || [],\n      HostConfig: {\n        Memory: maxMemory,\n        AutoRemove: true,\n        CpusetCpus: cpusetCpus,\n        CpuPeriod: cpuPeriod,\n        CpuQuota: cpuQuota,\n        PortBindings: publicPortArray,\n        NetworkMode: instance.config.docker.networkMode,\n        Mounts: mounts\n      },\n      NetworkingConfig: {\n        EndpointsConfig: {\n          [instance.config.docker.networkMode || \"bridge\"]: {\n            Aliases: instance.config.docker.networkAliases\n          }\n        }\n      }\n    });\n\n    await this.container.start();\n\n    // Listen to events\n    this.container.wait(async (v) => {\n      this.stop();\n    });\n  }\n  public async onStop() {\n    try {\n      await this.container?.kill();\n    } catch (error) {}\n    try {\n      await this.container?.remove();\n    } catch (error) {}\n  }\n\n  public getContainer() {\n    if (!this.container) throw new Error(\"Function getContainer(): Failed, Container is Null!\");\n    return this.container;\n  }\n\n  public async attach(instance: Instance) {\n    const outputCode = instance.config.terminalOption.pty ? \"utf-8\" : instance.config.oe;\n    const container = this.container;\n    if (!container) throw new Error(\"Attach Failed, Container is Null!\");\n    try {\n      const stream = await container.attach({\n        stream: true,\n        stdout: true,\n        stderr: true,\n        stdin: true\n      });\n      stream.on(\"data\", (text: any) => instance.print(iconv.decode(text, outputCode)));\n      stream.on(\"error\", (text: any) => instance.print(iconv.decode(text, outputCode)));\n    } catch (error: any) {\n      this.error(error);\n      throw error;\n    }\n  }\n\n  public async onError(err: Error) {}\n\n  public toObject() {}\n}\n\n// SubProcess adapter for Instance\nexport class DockerProcessAdapter extends EventEmitter implements IInstanceProcess {\n  pid?: number | string;\n\n  private stream?: NodeJS.ReadWriteStream;\n  public container?: Docker.Container;\n\n  constructor(public readonly containerWrapper: SetupDockerContainer) {\n    super();\n  }\n\n  // Once the program is actually started, no errors can block the next startup process\n  public async start(param: IDockerProcessAdapterStartParam) {\n    try {\n      await this.containerWrapper.start();\n      this.container = this.containerWrapper.getContainer();\n\n      const { isTty, h, w } = param;\n      if (isTty) {\n        this.container.resize({ h, w });\n      }\n\n      this.pid = this.container.id;\n      this.stream = await this.container.attach({\n        stream: true,\n        stdout: true,\n        stderr: true,\n        stdin: true\n      });\n      this.stream.on(\"data\", (data) => this.emit(\"data\", data));\n      this.stream.on(\"error\", (data) => this.emit(\"data\", data));\n      this.wait();\n    } catch (error: any) {\n      this.kill();\n      throw error;\n    }\n  }\n\n  public write(data?: string) {\n    if (this.stream && data) this.stream.write(data);\n  }\n\n  public async kill(s?: string) {\n    await this.container?.kill();\n    return true;\n  }\n\n  public async destroy() {\n    try {\n      await this.container?.remove();\n    } catch (error: any) {}\n  }\n\n  private wait() {\n    this.container?.wait(async (v) => {\n      await this.destroy();\n      this.emit(\"exit\", v);\n    });\n  }\n}\n","import Docker from \"dockerode\";\n\nexport class DefaultDocker extends Docker {\n  public static readonly defaultConfig: Docker.DockerOptions = {\n    socketPath: process.env.DOCKER_HOST ?? '/var/run/docker.sock'\n  };\n\n  constructor(p?: Docker.DockerOptions) {\n    super(Object.assign(p ?? {}, DefaultDocker.defaultConfig));\n  }\n}\n\nexport class DockerManager {\n  // 1=creating 2=creating completed -1=creating error\n  public static readonly builderProgress = new Map<string, number>();\n\n  public docker: Docker;\n\n  constructor(p?: any) {\n    this.docker = new DefaultDocker(p);\n  }\n\n  public getDocker() {\n    return this.docker;\n  }\n\n  public static setBuilderProgress(imageName: string, status: number) {\n    DockerManager.builderProgress.set(imageName, status);\n  }\n\n  public static getBuilderProgress(imageName: string) {\n    return DockerManager.builderProgress.get(imageName);\n  }\n\n  async startBuildImage(dockerFileDir: string, dockerImageName: string) {\n    try {\n      // Set the current image creation progress\n      DockerManager.setBuilderProgress(dockerImageName, 1);\n      // Issue the create image command\n      const stream = await this.docker.buildImage(\n        {\n          context: dockerFileDir,\n          src: [\"Dockerfile\"]\n        },\n        { t: dockerImageName }\n      );\n      // wait for creation to complete\n      await new Promise((resolve, reject) => {\n        this.docker.modem.followProgress(stream, (err, res) => (err ? reject(err) : resolve(res)));\n      });\n      // Set the current image creation progress\n      DockerManager.setBuilderProgress(dockerImageName, 2);\n    } catch (error: any) {\n      // Set the current image creation progress\n      DockerManager.setBuilderProgress(dockerImageName, -1);\n    }\n  }\n}\n","import path from \"path\";\nimport fs from \"fs-extra\";\nimport axios from \"axios\";\nimport { pipeline, Readable } from \"stream\";\nimport logger from \"./log\";\n\nexport function downloadFileToLocalFile(url: string, localFilePath: string): Promise<boolean> {\n  logger.info(`Download File: ${url} --> ${path.normalize(localFilePath)}`);\n  return new Promise(async (resolve, reject) => {\n    try {\n      if (fs.existsSync(localFilePath)) fs.removeSync(localFilePath);\n      const response = await axios<Readable>({\n        url,\n        responseType: \"stream\",\n        timeout: 1000 * 10\n      });\n      const writeStream = fs.createWriteStream(path.normalize(localFilePath));\n      pipeline(response.data, writeStream, (err) => {\n        if (err) {\n          fs.remove(localFilePath, () => {});\n          reject(err);\n        } else {\n          fs.chmodSync(localFilePath, 0o777);\n          resolve(true);\n        }\n      });\n    } catch (error: any) {\n      reject(error.message);\n    }\n  });\n}\n","import fs from \"fs-extra\";\nimport { $t } from \"../i18n\";\nimport InstanceSubsystem from \"../service/system_instance\";\nimport FileManager from \"./system_file\";\nimport os from \"os\";\n\nexport function getFileManager(instanceUuid: string) {\n  // Initialize a file manager for the instance, and assign codes, restrictions, etc.\n  const instance = InstanceSubsystem.getInstance(instanceUuid);\n  if (!instance)\n    throw new Error($t(\"TXT_CODE_file_router_service.instanceNotExit\", { uuid: instanceUuid }));\n  const fileCode = instance.config?.fileCode;\n  return new FileManager(instance.absoluteCwdPath(), fileCode);\n}\n\nlet cacheDisks: string[] = [];\n\nexport function getWindowsDisks() {\n  if (os.platform() !== \"win32\") return [];\n  if (cacheDisks.length > 0) return cacheDisks;\n  const res: string[] = [];\n  // A - Z\n  for (let i = 65; i <= 90; i++) {\n    const letter = String.fromCharCode(i);\n    try {\n      if (fs.existsSync(`${letter}:\\\\`)) res.push(letter);\n    } catch (error) {\n      // ignore error\n    }\n  }\n  cacheDisks = res;\n  return res;\n}\n","import Koa from \"koa\";\nimport koaBody from \"koa-body-patch\";\nimport koaRouter from \"../routers/http_router\";\nimport logger from \"./log\";\nimport { globalConfiguration } from \"../entity/config\";\nimport { removeTrail } from \"common\";\n\nexport function initKoa() {\n  const koaApp = new Koa();\n  const config = globalConfiguration.config;\n  koaApp.use(\n    koaBody({\n      multipart: true,\n      formidable: {\n        maxFileSize: Number.MAX_SAFE_INTEGER,\n        maxFiles: 1\n      },\n      onError(err, ctx) {\n        logger.error(\"koaBody Lib Error:\", err);\n      }\n    })\n  );\n  // Load Koa top-level middleware\n  koaApp.use(async (ctx, next) => {\n    await next();\n    // Because all HTTP requests can only be used by creating a task passport on the panel side, cross-domain requests are allowed, and security can also be guaranteed\n    ctx.response.set(\"Access-Control-Allow-Origin\", \"*\");\n    ctx.response.set(\"Access-Control-Allow-Methods\", \"POST, GET, PUT, DELETE, OPTIONS\");\n    ctx.response.set(\n      \"Access-Control-Allow-Headers\",\n      \"Content-Type, Cookie, Accept-Encoding, User-Agent, Host, Referer, \" +\n        \"X-Requested-With, Accept, Accept-Language, Cache-Control, Connection\"\n    );\n    ctx.response.set(\"X-Power-by\", \"MCSManager\");\n  });\n\n  if (config.prefix != \"\") {\n    const prefix = config.prefix;\n    koaApp.use(async (ctx, next) => {\n      if (ctx.url.startsWith(prefix)) {\n        const orig = ctx.url;\n        ctx.url = ctx.url.slice(prefix.length);\n        if (!ctx.url.startsWith(\"/\")) {\n          ctx.url = \"/\" + ctx.url;\n        }\n        await next();\n        ctx.url = orig;\n      } else {\n        ctx.redirect(removeTrail(prefix, \"/\") + ctx.url);\n      }\n    });\n  }\n  koaApp.use(koaRouter.routes()).use(koaRouter.allowedMethods());\n  return koaApp;\n}\n","import { $t } from \"../i18n\";\nimport { killProcess } from \"common\";\nimport { ChildProcessWithoutNullStreams, spawn } from \"child_process\";\nimport logger from \"../service/log\";\nimport Instance from \"../entity/instance/instance\";\nimport { commandStringToArray } from \"../entity/commands/base/command_parser\";\nimport iconv from \"iconv-lite\";\nimport { AsyncTask, IAsyncTaskJSON } from \"../service/async_task_service\";\nimport { SetupDockerContainer } from \"./docker_process_service\";\n\nexport class InstanceUpdateAction extends AsyncTask {\n  public pid?: number;\n\n  private process?: ChildProcessWithoutNullStreams;\n  private containerWrapper?: SetupDockerContainer;\n\n  constructor(public readonly instance: Instance) {\n    super();\n  }\n\n  public async onStart() {\n    let updateCommand = this.instance.config.updateCommand;\n    updateCommand = updateCommand.replace(/\\{mcsm_workspace\\}/gm, this.instance.absoluteCwdPath());\n    logger.info(\n      $t(\"TXT_CODE_general_update.readyUpdate\", { instanceUuid: this.instance.instanceUuid })\n    );\n    logger.info(\n      $t(\"TXT_CODE_general_update.updateCmd\", { instanceUuid: this.instance.instanceUuid })\n    );\n    logger.info(updateCommand);\n\n    this.instance.println(\n      $t(\"TXT_CODE_general_update.update\"),\n      $t(\"TXT_CODE_general_update.readyUpdate\", { instanceUuid: this.instance.instanceUuid })\n    );\n\n    // Docker Update Command Mode\n    if (this.instance.config.processType === \"docker\" && this.instance.config.docker?.image) {\n      this.containerWrapper = new SetupDockerContainer(\n        this.instance,\n        this.instance.config.updateCommand\n      );\n      await this.containerWrapper.start();\n      await this.containerWrapper.attach(this.instance);\n      await this.containerWrapper.wait();\n      this.stop();\n      return;\n    }\n\n    // command parsing\n    const commandList = commandStringToArray(updateCommand);\n    const commandExeFile = commandList[0];\n    const commandParameters = commandList.slice(1);\n    if (commandList.length === 0) {\n      return this.instance.failure(new Error($t(\"TXT_CODE_general_update.cmdFormatErr\")));\n    }\n\n    // start the update command\n    const process = spawn(commandExeFile, commandParameters, {\n      cwd: this.instance.absoluteCwdPath(),\n      stdio: \"pipe\",\n      windowsHide: true\n    });\n    if (!process || !process.pid) {\n      return this.instance.println(\n        $t(\"TXT_CODE_general_update.err\"),\n        $t(\"TXT_CODE_general_update.updateFailed\")\n      );\n    }\n\n    // process & pid\n    this.pid = process.pid;\n    this.process = process;\n\n    process.stdout.on(\"data\", (text) => {\n      this.instance.print(iconv.decode(text, this.instance.config.oe));\n    });\n    process.stderr.on(\"data\", (text) => {\n      this.instance.print(iconv.decode(text, this.instance.config.oe));\n    });\n\n    process.on(\"exit\", (code) => {\n      if (code === 0) {\n        this.stop();\n      } else {\n        this.error(new Error($t(\"TXT_CODE_general_update.updateErr\")));\n      }\n    });\n  }\n\n  public async onStop() {\n    if (this.containerWrapper) {\n      await this.containerWrapper.stop();\n    }\n    if (this.pid && this.process) {\n      killProcess(this.pid, this.process);\n    }\n  }\n\n  public async onError(err: Error) {}\n  public toObject(): IAsyncTaskJSON {\n    throw new Error(\"Method not implemented.\");\n  }\n}\n","import fs from \"fs-extra\";\nimport * as log4js from \"log4js\";\nimport { systemInfo } from \"common\";\nimport { $t } from \"../i18n\";\n\nconst LOG_FILE_PATH = \"logs/current.log\";\nconst LOG_SYS_INFO_FILE_PATH = \"logs/sysinfo.log\";\n\nconst time = new Date();\nconst timeString =\n  `${time.getFullYear()}-${time.getMonth() + 1}-${time.getDate()}` +\n  `_${time.getHours()}-${time.getMinutes()}-${time.getSeconds()}`;\n\nif (fs.existsSync(LOG_FILE_PATH)) {\n  fs.renameSync(LOG_FILE_PATH, `logs/${timeString}.log`);\n}\n\nif (fs.existsSync(LOG_SYS_INFO_FILE_PATH)) {\n  fs.renameSync(LOG_SYS_INFO_FILE_PATH, `logs/sysinfo_${timeString}.log`);\n}\n\nlog4js.configure({\n  appenders: {\n    out: {\n      type: \"stdout\",\n      layout: {\n        type: \"pattern\",\n        pattern: \"[%d{MM/dd hh:mm:ss}] [%[%p%]] %m\"\n      }\n    },\n    app: {\n      type: \"file\",\n      filename: LOG_FILE_PATH,\n      layout: {\n        type: \"pattern\",\n        pattern: \"[%d{MM/dd hh:mm:ss}] [%p] %m\"\n      }\n    },\n    sys: {\n      type: \"file\",\n      filename: LOG_SYS_INFO_FILE_PATH,\n      layout: {\n        type: \"pattern\",\n        pattern: \"[%d{MM/dd hh:mm:ss}] [%p] %m\"\n      }\n    }\n  },\n  categories: {\n    default: {\n      appenders: [\"out\", \"app\"],\n      level: \"info\"\n    },\n    sysinfo: {\n      appenders: [\"sys\"],\n      level: \"info\"\n    }\n  }\n});\n\nconst logger = log4js.getLogger(\"default\");\nconst loggerSysInfo = log4js.getLogger(\"sysinfo\");\nfunction toInt(v: number) {\n  return parseInt(String(v));\n}\n\nfunction systemInfoReport() {\n  const MB_SIZE = 1024 * 1024;\n  const info = systemInfo();\n\n  const self = process.memoryUsage();\n  const sysInfo =\n    `MEM: ${toInt((info.totalmem - info.freemem) / MB_SIZE)}MB/${toInt(\n      info.totalmem / MB_SIZE\n    )}MB` + ` CPU: ${toInt(info.cpuUsage * 100)}%`;\n  const selfInfo = `Heap: ${toInt(self.heapUsed / MB_SIZE)}MB/${toInt(self.heapTotal / MB_SIZE)}MB`;\n  const selfInfo2 = `RSS: ${toInt(self.rss / MB_SIZE)}MB`;\n  const logTip = $t(\"TXT_CODE_app.sysinfo\");\n  loggerSysInfo.info([`[${logTip}]`, sysInfo, selfInfo, selfInfo2].join(\" \"));\n}\n\nsetInterval(systemInfoReport, 1000 * 5);\n\nexport default logger;\n","import RouterContext from \"../entity/ctx\";\n\ninterface IMission {\n  name: string;\n  parameter: any;\n  start: number;\n  end: number;\n  count?: number;\n}\n\n// Task passport manager\nclass MissionPassport {\n  // temporary task passport list\n  public readonly missions = new Map<string, IMission>();\n\n  constructor() {\n    // Set up to check the task expiration every hour\n    setInterval(() => {\n      const t = new Date().getTime();\n      this.missions.forEach((m, k) => {\n        if (t > m.end) this.missions.delete(k);\n      });\n    }, 1000);\n  }\n\n  // register task passport\n  public registerMission(password: string, mission: IMission) {\n    if (this.missions.has(password))\n      throw new Error(\"Duplicate primary key, failed to create task\");\n    this.missions.set(password, mission);\n  }\n\n  // Get the task based on the passport and task name\n  public getMission(password: string, missionName: string) {\n    if (!this.missions.has(password)) return null;\n    const m = this.missions.get(password);\n    if (m?.name === missionName) return m;\n    return null;\n  }\n\n  public deleteMission(password: string) {\n    this.missions.delete(password);\n  }\n}\n\nconst LOGIN_BY_TOP_LEVEL = \"TOP_LEVEL\";\nconst LOGIN_FROM_STREAM = \"STREAM\";\n\n// This function must be executed after successful login\nfunction loginSuccessful(ctx: RouterContext, key: string) {\n  ctx.session.key = key;\n  ctx.session.login = true;\n  ctx.session.id = ctx.socket.id;\n  ctx.session.type = LOGIN_BY_TOP_LEVEL;\n  ctx.session.stream = {};\n  return ctx.session;\n}\n\nfunction streamLoginSuccessful(ctx: RouterContext, instanceUuid: string) {\n  ctx.session.id = ctx.socket.id;\n  ctx.session.login = true;\n  ctx.session.type = LOGIN_FROM_STREAM;\n  ctx.session.stream = {\n    check: true,\n    instanceUuid\n  };\n  return ctx.session;\n}\n\nconst missionPassport = new MissionPassport();\n\nexport {\n  missionPassport,\n  IMission,\n  LOGIN_BY_TOP_LEVEL,\n  LOGIN_FROM_STREAM,\n  loginSuccessful,\n  streamLoginSuccessful\n};\n","import { $t } from \"../i18n\";\nimport { Socket } from \"socket.io\";\nimport RouterContext from \"../entity/ctx\";\nimport logger from \"./log\";\nimport { IGNORE } from \"../const\";\n\n// Define network protocols and common send/broadcast/parse functions, the client should also have this file\n\nconst STATUS_OK = 200;\nconst STATUS_ERR = 500;\n\n// packet format definition\nexport interface IPacket {\n  uuid: string | null;\n  status: number;\n  event: string | null;\n  data: any;\n}\n\nexport interface IResponseErrorConfig {\n  disablePrint: boolean;\n}\n\n// global socket storage\nconst globalSocket = new Map<String, Socket>();\n\nexport class Packet implements IPacket {\n  constructor(\n    public uuid: string | null = null,\n    public status = 200,\n    public event: string | null = null,\n    public data: any = null\n  ) {}\n}\n\nexport function response(ctx: RouterContext, data: any) {\n  if (ctx.event) {\n    const packet = new Packet(ctx.uuid, STATUS_OK, ctx.event, data);\n    ctx.socket.emit(ctx.event, packet);\n  }\n}\n\nexport function responseError(\n  ctx: RouterContext,\n  err: Error | string,\n  config?: IResponseErrorConfig\n) {\n  let errinfo: any = \"\";\n  if (err) errinfo = err.toString();\n  else errinfo = err;\n  const packet = new Packet(ctx.uuid, STATUS_ERR, ctx.event, errinfo);\n  // Ignore\n  if (String(err).includes(IGNORE) && ctx.event) return ctx.socket.emit(ctx.event, packet);\n  if (!config?.disablePrint)\n    logger.warn(\n      $t(\"TXT_CODE_protocol.socketErr\", {\n        id: ctx.socket.id,\n        address: ctx.socket.handshake.address,\n        event: ctx.event\n      }),\n      err\n    );\n  if (ctx.event) ctx.socket.emit(ctx.event, packet);\n}\n\nexport function msg(ctx: RouterContext, event: string, data: any) {\n  const packet = new Packet(ctx.uuid, STATUS_OK, event, data);\n  ctx.socket.emit(event, packet);\n}\n\nexport function error(ctx: RouterContext, event: string, err: any, config?: IResponseErrorConfig) {\n  const packet = new Packet(ctx.uuid, STATUS_ERR, event, err);\n  // Ignore\n  if (String(err).includes(IGNORE) && ctx.event) return ctx.socket.emit(ctx.event, packet);\n  if (!config?.disablePrint)\n    logger.warn(\n      $t(\"TXT_CODE_protocol.socketErr\", {\n        id: ctx.socket.id,\n        address: ctx.socket.handshake.address,\n        event: ctx.event\n      }),\n      err\n    );\n\n  ctx.socket.emit(event, packet);\n}\n\nexport function parse(text: IPacket) {\n  if (typeof text == \"object\") {\n    return new Packet(text.uuid || null, text.status, text.event, text.data);\n  }\n  const obj = JSON.parse(text);\n  return new Packet(null, obj.status, obj.event, obj.data);\n}\n\nexport function stringify(obj: any) {\n  return JSON.stringify(obj);\n}\n\nexport function addGlobalSocket(socket: Socket) {\n  globalSocket.set(socket.id, socket);\n}\n\nexport function delGlobalSocket(socket: Socket) {\n  globalSocket.delete(socket.id);\n}\n\nexport function socketObjects() {\n  return globalSocket;\n}\n\n// global socket broadcast\nexport function broadcast(event: string, obj: any) {\n  globalSocket.forEach((socket) => {\n    msg(new RouterContext(null, socket), event, obj);\n  });\n}\n","import { $t } from \"../i18n\";\nimport { EventEmitter } from \"events\";\nimport { Socket } from \"socket.io\";\nimport logger from \"./log\";\nimport RouterContext from \"../entity/ctx\";\nimport { IPacket, response, responseError } from \"../service/protocol\";\n// Routing controller class (singleton class)\nclass RouterApp extends EventEmitter {\n  public readonly middlewares: Array<Function>;\n\n  constructor() {\n    super();\n    this.middlewares = [];\n  }\n\n  emitRouter(event: string, ctx: RouterContext, data: any) {\n    try {\n      // service logic routing trigger point\n      super.emit(event, ctx, data);\n    } catch (error: any) {\n      responseError(ctx, error);\n    }\n    return this;\n  }\n\n  on(event: string, fn: (ctx: RouterContext, data: any) => void) {\n    // logger.info(` Register event: ${event} `);\n    return super.on(event, fn);\n  }\n\n  use(fn: (event: string, ctx: RouterContext, data: any, next: Function) => void) {\n    this.middlewares.push(fn);\n  }\n\n  getMiddlewares() {\n    return this.middlewares;\n  }\n}\n\n// routing controller singleton class\nexport const routerApp = new RouterApp();\n\n/**\n * Based on Socket.io for routing decentralization and secondary forwarding\n * @param {Socket} socket\n */\nexport function navigation(socket: Socket) {\n  // Full-life session variables (Between connection and disconnection)\n  const session: any = {};\n  // Register all middleware with Socket\n  for (const fn of routerApp.getMiddlewares()) {\n    socket.use((packet, next) => {\n      const protocol = packet[1] as IPacket;\n      if (!protocol)\n        return logger.info(`session ${socket.id} request data protocol format is incorrect`);\n      const ctx = new RouterContext(protocol.uuid, socket, session);\n      fn(packet[0], ctx, protocol.data, next);\n    });\n  }\n  // Register all events with Socket\n  for (const event of routerApp.eventNames()) {\n    socket.on(event as string, (protocol: IPacket) => {\n      if (!protocol)\n        return logger.info(`session ${socket.id} request data protocol format is incorrect`);\n      const ctx = new RouterContext(protocol.uuid, socket, session, event.toString());\n      routerApp.emitRouter(event as string, ctx, protocol.data);\n    });\n  }\n  // The connected event route is triggered\n  const ctx = new RouterContext(null, socket, session);\n  routerApp.emitRouter(\"connection\", ctx, null);\n}\n\n// The authentication routing order must be the first load. These routing orders cannot be changed without authorization\nimport \"../routers/auth_router\";\nimport \"../routers/passport_router\";\nimport \"../routers/info_router\";\nimport \"../routers/Instance_router\";\nimport \"../routers/instance_event_router\";\nimport \"../routers/file_router\";\nimport \"../routers/stream_router\";\nimport \"../routers/environment_router\";\nimport \"../routers/schedule_router\";\n\nlogger.info($t(\"TXT_CODE_router.initComplete\"));\n","import { $t, i18next } from \"../i18n\";\nimport path from \"path\";\nimport fs from \"fs-extra\";\nimport { compress, decompress } from \"../common/compress\";\nimport iconv from \"iconv-lite\";\nimport { globalConfiguration } from \"../entity/config\";\nimport { ProcessWrapper } from \"common\";\nimport os from \"os\";\n\nconst ERROR_MSG_01 = $t(\"TXT_CODE_system_file.illegalAccess\");\nconst MAX_EDIT_SIZE = 1024 * 1024 * 5;\n\ninterface IFile {\n  name: string;\n  size: number;\n  time: string;\n  type: number;\n  mode: number;\n}\n\nexport default class FileManager {\n  public cwd: string = \".\";\n\n  constructor(public topPath: string = \"\", public fileCode?: string) {\n    if (!path.isAbsolute(topPath)) {\n      this.topPath = path.normalize(path.join(process.cwd(), topPath));\n    } else {\n      this.topPath = path.normalize(topPath);\n    }\n    if (!fileCode) {\n      this.fileCode = \"utf-8\";\n      if (i18next.language == \"zh_cn\") this.fileCode = \"gbk\";\n    }\n  }\n\n  isRootTopRath() {\n    return this.topPath === \"/\" || this.topPath === \"\\\\\";\n  }\n\n  toAbsolutePath(fileName: string = \"\") {\n    const topAbsolutePath = this.topPath;\n    let finalPath: string = \"\";\n    if (os.platform() === \"win32\") {\n      const reg = new RegExp(\"^[A-Za-z]{1}:[\\\\\\\\/]{1}\");\n      if (reg.test(this.cwd)) {\n        finalPath = path.normalize(path.join(this.cwd, fileName));\n      } else if (reg.test(fileName)) {\n        finalPath = path.normalize(fileName);\n      }\n    }\n    if (!finalPath) {\n      finalPath = path.normalize(path.join(this.topPath, this.cwd, fileName));\n    }\n\n    if (\n      finalPath.indexOf(topAbsolutePath) !== 0 &&\n      topAbsolutePath !== \"/\" &&\n      topAbsolutePath !== \"\\\\\"\n    )\n      throw new Error(ERROR_MSG_01);\n    return finalPath;\n  }\n\n  checkPath(fileNameOrPath: string) {\n    if (this.isRootTopRath()) return true;\n    const destAbsolutePath = this.toAbsolutePath(fileNameOrPath);\n    const topAbsolutePath = this.topPath;\n    return destAbsolutePath.indexOf(topAbsolutePath) === 0;\n  }\n\n  check(destPath: string) {\n    if (this.isRootTopRath()) return true;\n    return this.checkPath(destPath) && fs.existsSync(this.toAbsolutePath(destPath));\n  }\n\n  cd(dirName: string) {\n    if (!this.check(dirName)) throw new Error(ERROR_MSG_01);\n    this.cwd = path.normalize(path.join(this.cwd, dirName));\n  }\n\n  list(page: 0, pageSize = 40, searchFileName?: string) {\n    if (pageSize > 100 || pageSize <= 0 || page < 0) throw new Error(\"Beyond the value limit\");\n    let fileNames = fs.readdirSync(this.toAbsolutePath());\n    if (searchFileName)\n      fileNames = fileNames.filter((name) =>\n        name.toLowerCase().includes(searchFileName.toLowerCase())\n      );\n\n    const total = fileNames.length;\n    const sliceStart = page * pageSize;\n    const sliceEnd = sliceStart + pageSize;\n    const files: IFile[] = [];\n    const dirs: IFile[] = [];\n    fileNames.forEach((name) => {\n      try {\n        const info = fs.statSync(this.toAbsolutePath(name));\n        const mode = parseInt(String(parseInt(info.mode?.toString(8), 10)).slice(-3));\n        const commonInfo = {\n          name: name,\n          size: info.size,\n          time: info.atime.toString(),\n          mode,\n          type: info.isFile() ? 1 : 0\n        };\n        if (info.isFile()) {\n          files.push(commonInfo);\n        } else {\n          dirs.push(commonInfo);\n        }\n      } catch (error: any) {\n        // Ignore a file information retrieval error to prevent an overall error\n      }\n    });\n    files.sort((a, b) => (a.name > b.name ? 1 : -1));\n    dirs.sort((a, b) => (a.name > b.name ? 1 : -1));\n    let resultList = dirs.concat(files);\n    resultList = resultList.slice(sliceStart, sliceEnd);\n    return {\n      items: resultList,\n      page,\n      pageSize,\n      total,\n      absolutePath: this.toAbsolutePath()\n    };\n  }\n\n  async chmod(fileName: string, chmodValue: number, deep: boolean) {\n    if (!this.check(fileName) || isNaN(parseInt(chmodValue as any))) throw new Error(ERROR_MSG_01);\n    const absPath = this.toAbsolutePath(fileName);\n    const defaultPath = \"/bin/chmod\";\n    let file = \"chmod\";\n    if (fs.existsSync(defaultPath)) file = defaultPath;\n    const params: string[] = [];\n    if (deep) params.push(\"-R\");\n    params.push(String(chmodValue));\n    params.push(absPath);\n    return await new ProcessWrapper(file, params, \".\", 60 * 10).start();\n  }\n\n  async readFile(fileName: string) {\n    if (!this.check(fileName)) throw new Error(ERROR_MSG_01);\n    const absPath = this.toAbsolutePath(fileName);\n    const buf = await fs.readFile(absPath);\n    const text = iconv.decode(buf, this.fileCode || \"utf-8\");\n    return text;\n  }\n\n  async writeFile(fileName: string, data: string) {\n    if (!this.check(fileName)) throw new Error(ERROR_MSG_01);\n    const absPath = this.toAbsolutePath(fileName);\n    const buf = iconv.encode(data, this.fileCode || \"utf-8\");\n    return await fs.writeFile(absPath, buf);\n  }\n\n  async newFile(fileName: string) {\n    // if (!FileManager.checkFileName(fileName)) throw new Error(ERROR_MSG_01);\n    if (!this.checkPath(fileName)) throw new Error(ERROR_MSG_01);\n    const target = this.toAbsolutePath(fileName);\n    fs.createFile(target);\n  }\n\n  async copy(target1: string, target2: string) {\n    if (!this.checkPath(target2) || !this.check(target1)) throw new Error(ERROR_MSG_01);\n    const targetPath = this.toAbsolutePath(target1);\n    target2 = this.toAbsolutePath(target2);\n    return await fs.copy(targetPath, target2);\n  }\n\n  mkdir(target: string) {\n    if (!this.checkPath(target)) throw new Error(ERROR_MSG_01);\n    const targetPath = this.toAbsolutePath(target);\n    return fs.mkdirSync(targetPath);\n  }\n\n  async delete(target: string): Promise<boolean> {\n    if (!this.check(target)) throw new Error(ERROR_MSG_01);\n    const targetPath = this.toAbsolutePath(target);\n    return new Promise((r, j) => {\n      fs.remove(targetPath, (err) => {\n        if (!err) r(true);\n        else j(err);\n      });\n    });\n  }\n\n  async move(target: string, destPath: string) {\n    if (!this.check(target)) throw new Error(ERROR_MSG_01);\n    if (!this.checkPath(destPath)) throw new Error(ERROR_MSG_01);\n    const targetPath = this.toAbsolutePath(target);\n    destPath = this.toAbsolutePath(destPath);\n    await fs.move(targetPath, destPath);\n  }\n\n  private zipFileCheck(path: string) {\n    const fileInfo = fs.statSync(path);\n    const MAX_ZIP_GB = globalConfiguration.config.maxZipFileSize;\n    if (fileInfo.size > 1024 * 1024 * 1024 * MAX_ZIP_GB)\n      throw new Error($t(\"TXT_CODE_system_file.unzipLimit\", { max: MAX_ZIP_GB }));\n  }\n\n  async unzip(sourceZip: string, destDir: string, code?: string) {\n    if (!code) code = this.fileCode;\n    if (!this.check(sourceZip) || !this.checkPath(destDir)) throw new Error(ERROR_MSG_01);\n    this.zipFileCheck(this.toAbsolutePath(sourceZip));\n    return await decompress(this.toAbsolutePath(sourceZip), this.toAbsolutePath(destDir), code);\n  }\n\n  async zip(sourceZip: string, files: string[], code?: string) {\n    if (!code) code = this.fileCode;\n    if (!this.checkPath(sourceZip)) throw new Error(ERROR_MSG_01);\n    const MAX_ZIP_GB = globalConfiguration.config.maxZipFileSize;\n    const MAX_TOTAL_FIELS_SIZE = 1024 * 1024 * 1024 * MAX_ZIP_GB;\n    const sourceZipPath = this.toAbsolutePath(sourceZip);\n    const filesPath = [];\n    let totalSize = 0;\n    for (const iterator of files) {\n      if (this.check(iterator)) {\n        filesPath.push(this.toAbsolutePath(iterator));\n        try {\n          totalSize += fs.statSync(this.toAbsolutePath(iterator))?.size;\n        } catch (error: any) {}\n      }\n    }\n    if (totalSize > MAX_TOTAL_FIELS_SIZE)\n      throw new Error($t(\"TXT_CODE_system_file.unzipLimit\", { max: MAX_ZIP_GB }));\n    return await compress(sourceZipPath, filesPath, code);\n  }\n\n  async edit(target: string, data?: string) {\n    if (!this.check(target)) throw new Error(ERROR_MSG_01);\n    if (data || typeof data === \"string\") {\n      return await this.writeFile(target, data);\n    } else {\n      const absPath = this.toAbsolutePath(target);\n      const info = fs.statSync(absPath);\n      if (info.size > MAX_EDIT_SIZE) {\n        throw new Error($t(\"TXT_CODE_system_file.execLimit\"));\n      }\n      return await this.readFile(target);\n    }\n  }\n\n  rename(target: string, newName: string) {\n    if (!this.check(target)) throw new Error(ERROR_MSG_01);\n    if (!this.checkPath(newName)) throw new Error(ERROR_MSG_01);\n    const targetPath = this.toAbsolutePath(target);\n    const newPath = this.toAbsolutePath(newName);\n    fs.renameSync(targetPath, newPath);\n  }\n\n  public static checkFileName(fileName?: string): boolean {\n    if (!fileName) return false;\n    const blackKeys = [\"/\", \"\\\\\", \"|\", \"?\", \"*\", \">\", \"<\", \";\", '\"'];\n    for (const ch of blackKeys) {\n      if (fileName.includes(ch)) return false;\n    }\n    return true;\n  }\n}\n","import { $t } from \"../i18n\";\nimport fs from \"fs-extra\";\nimport path from \"path\";\nimport os from \"os\";\nimport Instance from \"../entity/instance/instance\";\nimport EventEmitter from \"events\";\nimport KillCommand from \"../entity/commands/kill\";\nimport logger from \"./log\";\nimport { v4 } from \"uuid\";\nimport { Socket } from \"socket.io\";\nimport StorageSubsystem from \"../common/system_storage\";\nimport InstanceConfig from \"../entity/instance/Instance_config\";\nimport { QueryMapWrapper, InstanceStreamListener } from \"common\";\nimport FunctionDispatcher from \"../entity/commands/dispatcher\";\nimport InstanceControl from \"./system_instance_control\";\nimport StartCommand from \"../entity/commands/start\";\nimport { globalConfiguration } from \"../entity/config\";\n\n// init instance default install path\nglobalConfiguration.load();\nlet INSTANCE_DATA_DIR = path.join(process.cwd(), \"data/InstanceData\");\nif (globalConfiguration.config.defaultInstancePath) {\n  INSTANCE_DATA_DIR = path.normalize(globalConfiguration.config.defaultInstancePath);\n}\n\nif (!fs.existsSync(INSTANCE_DATA_DIR)) {\n  fs.mkdirsSync(INSTANCE_DATA_DIR);\n}\n\nclass InstanceSubsystem extends EventEmitter {\n  public readonly GLOBAL_INSTANCE = \"__MCSM_GLOBAL_INSTANCE__\";\n  public readonly GLOBAL_INSTANCE_UUID = \"global0001\";\n\n  public readonly LOG_DIR = \"data/InstanceLog/\";\n\n  public readonly instances = new Map<string, Instance>();\n  public readonly instanceStream = new InstanceStreamListener();\n\n  constructor() {\n    super();\n  }\n\n  // start automatically at boot\n  private autoStart() {\n    this.instances.forEach((instance) => {\n      if (instance.config.eventTask.autoStart) {\n        instance\n          .exec(new StartCommand())\n          .then(() => {\n            logger.info(\n              $t(\"TXT_CODE_system_instance.autoStart\", {\n                name: instance.config.nickname,\n                uuid: instance.instanceUuid\n              })\n            );\n          })\n          .catch((reason) => {\n            logger.error(\n              $t(\"TXT_CODE_system_instance.autoStartErr\", {\n                name: instance.config.nickname,\n                uuid: instance.instanceUuid,\n                reason: reason\n              })\n            );\n          });\n      }\n    });\n  }\n\n  // init all instances from local files\n  loadInstances() {\n    const instanceConfigs = StorageSubsystem.list(\"InstanceConfig\");\n    instanceConfigs.forEach((uuid) => {\n      if (uuid === this.GLOBAL_INSTANCE_UUID) return;\n      try {\n        const instanceConfig = StorageSubsystem.load(\"InstanceConfig\", InstanceConfig, uuid);\n        const instance = new Instance(uuid, instanceConfig);\n\n        // Fix BUG, reset state\n        instanceConfig.eventTask.ignore = false;\n\n        // All instances are all function schedulers\n        instance\n          .forceExec(new FunctionDispatcher())\n          .then((v) => {})\n          .catch((v) => {});\n        this.addInstance(instance);\n      } catch (error: any) {\n        logger.error(\n          $t(\"TXT_CODE_system_instance.readInstanceFailed\", { uuid: uuid, error: error.message })\n        );\n        logger.error($t(\"TXT_CODE_system_instance.checkConf\", { uuid: uuid }));\n      }\n    });\n\n    this.createInstance(\n      {\n        nickname: this.GLOBAL_INSTANCE,\n        cwd: \"/\",\n        startCommand: os.platform() === \"win32\" ? \"cmd.exe\" : \"bash\",\n        stopCommand: \"^c\",\n        ie: \"utf-8\",\n        oe: \"utf-8\",\n        type: Instance.TYPE_UNIVERSAL,\n        processType: \"general\"\n      },\n      false,\n      this.GLOBAL_INSTANCE_UUID\n    );\n\n    // handle autostart\n    this.autoStart();\n  }\n\n  createInstance(cfg: any, persistence = true, uuid?: string) {\n    const newUuid = uuid || v4().replace(/-/gim, \"\");\n    const instance = new Instance(newUuid, new InstanceConfig());\n    // Instance working directory verification and automatic creation\n    if (!cfg.cwd || cfg.cwd === \".\") {\n      cfg.cwd = path.normalize(`${INSTANCE_DATA_DIR}/${instance.instanceUuid}`);\n    }\n    if (!fs.existsSync(cfg.cwd)) fs.mkdirsSync(cfg.cwd);\n    // Set the default input and output encoding\n    cfg.ie = cfg.oe = cfg.fileCode = \"utf8\";\n    // Build and initialize the type from the parameters\n\n    instance.parameters(cfg, persistence);\n    instance.forceExec(new FunctionDispatcher());\n    this.addInstance(instance);\n    return instance;\n  }\n\n  addInstance(instance: Instance) {\n    if (instance.instanceUuid == null) throw new Error($t(\"TXT_CODE_system_instance.uuidEmpty\"));\n    if (this.instances.has(instance.instanceUuid)) {\n      throw new Error(`The application instance ${instance.instanceUuid} already exists.`);\n    }\n    this.instances.set(instance.instanceUuid, instance);\n    // Dynamically monitor the newly added instance output stream and pass it to its own event stream\n    instance.on(\"data\", (...arr) => {\n      this.emit(\"data\", instance.instanceUuid, ...arr);\n    });\n    instance.on(\"exit\", (...arr) => {\n      this.emit(\n        \"exit\",\n        {\n          instanceUuid: instance.instanceUuid,\n          instanceName: instance.config.nickname\n        },\n        ...arr\n      );\n    });\n    instance.on(\"open\", (...arr) => {\n      this.emit(\n        \"open\",\n        {\n          instanceUuid: instance.instanceUuid,\n          instanceName: instance.config.nickname\n        },\n        ...arr\n      );\n    });\n    instance.on(\"failure\", (...arr) => {\n      this.emit(\n        \"failure\",\n        {\n          instanceUuid: instance.instanceUuid,\n          instanceName: instance.config.nickname\n        },\n        ...arr\n      );\n    });\n  }\n\n  removeInstance(instanceUuid: string, deleteFile: boolean) {\n    const instance = this.getInstance(instanceUuid);\n    if (instance) {\n      if (instance.status() !== Instance.STATUS_STOP) throw new Error($t(\"TXT_CODE_fb547313\"));\n      instance.destroy();\n      this.instances.delete(instanceUuid);\n      StorageSubsystem.delete(\"InstanceConfig\", instanceUuid);\n      InstanceControl.deleteInstanceAllTask(instanceUuid);\n      if (deleteFile) fs.remove(instance.absoluteCwdPath(), (err) => {});\n      return true;\n    }\n    throw new Error($t(\"TXT_CODE_3bfb9e04\"));\n  }\n\n  forward(targetInstanceUuid: string, socket: Socket) {\n    try {\n      this.instanceStream.requestForward(socket, targetInstanceUuid);\n    } catch (err) {}\n  }\n\n  stopForward(targetInstanceUuid: string, socket: Socket) {\n    try {\n      const instance = this.getInstance(targetInstanceUuid);\n      if (!instance) throw new Error($t(\"TXT_CODE_3bfb9e04\"));\n      instance.watchers.delete(socket.id);\n      this.instanceStream.cannelForward(socket, targetInstanceUuid);\n    } catch (err) {}\n  }\n\n  forEachForward(instanceUuid: string, callback: (socket: Socket) => void) {\n    this.instanceStream.forwardViaCallback(instanceUuid, (_socket: Socket) => {\n      callback(_socket);\n    });\n  }\n\n  getInstance(instanceUuid: string) {\n    return this.instances.get(instanceUuid);\n  }\n\n  getQueryMapWrapper() {\n    return new QueryMapWrapper(this.instances);\n  }\n\n  exists(instanceUuid: string) {\n    return this.instances.has(instanceUuid);\n  }\n\n  async exit() {\n    let promises = [];\n    for (const iterator of this.instances) {\n      const instance = iterator[1];\n      if (instance.status() != Instance.STATUS_STOP) {\n        logger.info(\n          `Instance ${instance.config.nickname} (${instance.instanceUuid}) is running or busy, and is being forced to end.`\n        );\n        promises.push(\n          instance.execCommand(new KillCommand()).then(() => {\n            if (!this.isGlobalInstance(instance))\n              StorageSubsystem.store(\"InstanceConfig\", instance.instanceUuid, instance.config);\n            logger.info(\n              `Instance ${instance.config.nickname} (${instance.instanceUuid}) saved successfully.`\n            );\n          })\n        );\n      }\n    }\n    await Promise.all(promises);\n  }\n\n  getInstances() {\n    let newArr = new Array<Instance>();\n    this.instances.forEach((instance) => {\n      if (!this.isGlobalInstance(instance)) newArr.push(instance);\n    });\n    newArr = newArr.sort((a, b) => (a.config.nickname > a.config.nickname ? 1 : -1));\n    return newArr;\n  }\n\n  isGlobalInstance(instance: Instance) {\n    return (\n      instance.instanceUuid === this.GLOBAL_INSTANCE_UUID ||\n      instance.config.nickname === this.GLOBAL_INSTANCE\n    );\n  }\n}\n\nexport default new InstanceSubsystem();\n","import { $t } from \"../i18n\";\nimport schedule from \"node-schedule\";\nimport InstanceSubsystem from \"./system_instance\";\nimport StorageSubsystem from \"../common/system_storage\";\nimport logger from \"./log\";\nimport StartCommand from \"../entity/commands/start\";\nimport StopCommand from \"../entity/commands/stop\";\nimport SendCommand from \"../entity/commands/cmd\";\nimport RestartCommand from \"../entity/commands/restart\";\nimport KillCommand from \"../entity/commands/kill\";\nimport FileManager from \"./system_file\";\n\n// Scheduled task configuration item interface\ninterface IScheduleTask {\n  instanceUuid: string;\n  name: string;\n  count: number;\n  time: string;\n  action: string;\n  payload: string;\n  type: number;\n}\n\n// Scheduled task timer/periodic task interface\ninterface IScheduleJob {\n  cancel: Function;\n}\n\n// @Entity\n// Schedule task configuration data entity class\nclass TaskConfig implements IScheduleTask {\n  instanceUuid = \"\";\n  name: string = \"\";\n  count: number = 1;\n  time: string = \"\";\n  action: string = \"\";\n  payload: string = \"\";\n  type: number = 1;\n}\n\nclass IntervalJob implements IScheduleJob {\n  public job: number = 0;\n\n  constructor(private callback: Function, public time: number) {\n    this.job = setInterval(callback, time * 1000);\n  }\n\n  cancel() {\n    clearInterval(this.job);\n  }\n}\n\n// Scheduled task instance class\nclass Task {\n  constructor(public config: TaskConfig, public job?: IScheduleJob) {}\n}\n\nclass InstanceControlSubsystem {\n  public readonly taskMap = new Map<string, Array<Task>>();\n  public readonly taskJobMap = new Map<string, schedule.Job>();\n\n  constructor() {\n    // Initialize all persistent data and load into memory one by one\n    StorageSubsystem.list(\"TaskConfig\").forEach((uuid) => {\n      const config = StorageSubsystem.load(\"TaskConfig\", TaskConfig, uuid) as TaskConfig;\n      try {\n        this.registerScheduleJob(config, false);\n      } catch (error: any) {\n        // Some scheduled tasks may be left, but the upper limit will not change\n        // Ignore the scheduled task registration at startup\n      }\n    });\n  }\n\n  public registerScheduleJob(task: IScheduleTask, needStore = true) {\n    const key = `${task.instanceUuid}`;\n    if (!this.taskMap.has(key)) {\n      this.taskMap.set(key, []);\n    }\n    const registeredTask = this.taskMap.get(key);\n    if (registeredTask && registeredTask?.length >= 8)\n      throw new Error($t(\"TXT_CODE_system_instance_control.execLimit\"));\n    if (!this.checkTask(key, task.name))\n      throw new Error($t(\"TXT_CODE_system_instance_control.existRepeatTask\"));\n    if (!FileManager.checkFileName(task.name))\n      throw new Error($t(\"TXT_CODE_system_instance_control.illegalName\"));\n    if (needStore)\n      logger.info(\n        $t(\"TXT_CODE_system_instance_control.crateTask\", {\n          name: task.name,\n          task: JSON.stringify(task)\n        })\n      );\n\n    let job: IScheduleJob;\n\n    // min interval check\n    if (task.type === 1) {\n      let internalTime = Number(task.time);\n      if (isNaN(internalTime) || internalTime < 1) internalTime = 1;\n\n      // task.type=1: Time interval scheduled task, implemented with built-in timer\n      job = new IntervalJob(() => {\n        this.action(task);\n        if (task.count === -1) return;\n        if (task.count === 1) {\n          job.cancel();\n          this.deleteTask(key, task.name);\n        } else {\n          task.count--;\n          this.updateTaskConfig(key, task.name, task);\n        }\n      }, internalTime);\n    } else {\n      // Expression validity check: 8 19 14 * * 1,2,3,4\n      const timeArray = task.time.split(\" \");\n      const checkIndex = [0, 1, 2];\n      checkIndex.forEach((item) => {\n        if (isNaN(Number(timeArray[item])) && Number(timeArray[item]) >= 0) {\n          throw new Error(\n            $t(\"TXT_CODE_system_instance_control.crateTaskErr\", {\n              name: task.name,\n              timeArray: timeArray\n            })\n          );\n        }\n      });\n      // task.type=2: Specify time-based scheduled tasks, implemented by node-schedule library\n      job = schedule.scheduleJob(task.time, () => {\n        this.action(task);\n        if (task.count === -1) return;\n        if (task.count === 1) {\n          job.cancel();\n          this.deleteTask(key, task.name);\n        } else {\n          task.count--;\n          this.updateTaskConfig(key, task.name, task);\n        }\n      });\n    }\n    const newTask = new Task(task, job);\n    this.taskMap.get(key)?.push(newTask);\n    if (needStore) {\n      StorageSubsystem.store(\"TaskConfig\", `${key}_${newTask.config.name}`, newTask.config);\n    }\n    if (needStore)\n      logger.info($t(\"TXT_CODE_system_instance_control.crateSuccess\", { name: task.name }));\n  }\n\n  public listScheduleJob(instanceUuid: string) {\n    const key = `${instanceUuid}`;\n    const arr = this.taskMap.get(key) || [];\n    const res: IScheduleTask[] = [];\n    arr.forEach((v) => {\n      res.push(v.config);\n    });\n    return res;\n  }\n\n  public async action(task: IScheduleTask) {\n    try {\n      const payload = task.payload;\n      const instanceUuid = task.instanceUuid;\n      const instance = InstanceSubsystem.getInstance(instanceUuid);\n      // If the instance has been deleted, it needs to be automatically destroyed\n      if (!instance) {\n        return this.deleteScheduleTask(task.instanceUuid, task.name);\n      }\n      const instanceStatus = instance.status();\n      // logger.info(`Execute scheduled task: ${task.name} ${task.action} ${task.time} ${task.count} `);\n      if (task.action === \"start\") {\n        if (instanceStatus === 0) {\n          return await instance.exec(new StartCommand(\"ScheduleJob\"));\n        }\n      }\n      if (task.action === \"stop\") {\n        if (instanceStatus === 3) {\n          return await instance.exec(new StopCommand());\n        }\n      }\n      if (task.action === \"restart\") {\n        if (instanceStatus === 3) {\n          return await instance.exec(new RestartCommand());\n        }\n      }\n      if (task.action === \"command\") {\n        if (instanceStatus === 3) {\n          return await instance.exec(new SendCommand(payload));\n        }\n      }\n      if (task.action === \"kill\") {\n        return await instance.exec(new KillCommand());\n      }\n    } catch (error: any) {\n      logger.error(\n        $t(\"TXT_CODE_system_instance_control.execCmdErr\", {\n          uuid: task.instanceUuid,\n          name: task.name,\n          error: error\n        })\n      );\n    }\n  }\n\n  public deleteInstanceAllTask(instanceUuid: string) {\n    const tasks = this.listScheduleJob(instanceUuid);\n    if (tasks)\n      tasks.forEach((v) => {\n        this.deleteScheduleTask(instanceUuid, v.name);\n      });\n  }\n\n  public deleteScheduleTask(instanceUuid: string, name: string) {\n    const key = `${instanceUuid}`;\n    this.deleteTask(key, name);\n  }\n\n  private deleteTask(key: string, name: string) {\n    this.taskMap.get(key)?.forEach((v, index, arr) => {\n      if (v?.config?.name === name) {\n        v?.job?.cancel();\n        arr.splice(index, 1);\n      }\n    });\n    StorageSubsystem.delete(\"TaskConfig\", `${key}_${name}`);\n  }\n\n  private checkTask(key: string, name: string) {\n    let f = true;\n    this.taskMap?.get(key)?.forEach((v, index, arr) => {\n      if (v.config.name === name) f = false;\n    });\n    return f;\n  }\n\n  private updateTaskConfig(key: string, name: string, data: IScheduleTask) {\n    const list = this.taskMap.get(key);\n    for (const index in list) {\n      const t = list[index as any];\n      if (t.config.name === name) {\n        list[index as any].config = data;\n        break;\n      }\n    }\n  }\n\n  private checkScheduledTaskLimit(instanceUuid: string) {\n    for (const iterator of this.taskMap) {\n    }\n  }\n}\n\nexport default new InstanceControlSubsystem();\n","import { systemInfo } from \"common\";\n\n// Visual data subsystem: responsible for collecting system data and event data, and providing some methods to display them\nclass LineQueue<T> {\n  private readonly arr = new Array<T>();\n\n  constructor(public readonly maxSize: number, defaultValue: T) {\n    for (let index = 0; index < maxSize; index++) {\n      this.arr.push(defaultValue);\n    }\n  }\n\n  push(data: T) {\n    if (this.arr.length < this.maxSize) {\n      this.arr.push(data);\n    } else {\n      this.arr.shift();\n      this.arr.push(data);\n    }\n  }\n\n  getArray() {\n    return this.arr;\n  }\n}\n\ninterface ISystemChartInfo {\n  cpu: number;\n  mem: number;\n}\n\nclass VisualDataSubsystem {\n  public readonly countMap: Map<string, number> = new Map<string, number>();\n\n  public readonly systemChart = new LineQueue<ISystemChartInfo>(200, { cpu: 0, mem: 0 });\n\n  private requestCount = 0;\n\n  constructor() {\n    setInterval(() => {\n      const info = systemInfo();\n      if (info) {\n        this.systemChart.push({\n          cpu: Number((info.cpuUsage * 100).toFixed(0)),\n          mem: Number((info.memUsage * 100).toFixed(0))\n        });\n      } else {\n        this.systemChart.push({\n          cpu: 0,\n          mem: 0\n        });\n      }\n    }, 1000 * 3);\n  }\n\n  addRequestCount() {\n    this.requestCount++;\n  }\n\n  getSystemChartArray() {\n    return this.systemChart.getArray();\n  }\n\n  // Trigger counting event\n  emitCountEvent(eventName: string) {\n    const v = this.countMap.get(eventName);\n    if (v) {\n      this.countMap.set(eventName, v + 1);\n    } else {\n      this.countMap.set(eventName, 1);\n    }\n  }\n\n  // Trigger counting event\n  eventCount(eventName: string) {\n    return this.countMap.get(eventName);\n  }\n\n  // Trigger log event\n  emitLogEvent(eventName: string, source: any) {\n    const time = new Date().toLocaleString();\n  }\n}\n\nexport default new VisualDataSubsystem();\n","import { $t } from \"../i18n\";\nimport * as fs from \"fs-extra\";\nimport { GlobalVariable } from \"common\";\nimport logger from \"./log\";\n\nconst PACKAGE_JSON = \"package.json\";\n\nexport function initVersionManager() {\n  try {\n    GlobalVariable.set(\"version\", \"Unknown\");\n    if (fs.existsSync(PACKAGE_JSON)) {\n      const data: any = JSON.parse(fs.readFileSync(PACKAGE_JSON, { encoding: \"utf-8\" }));\n      if (data.version) {\n        GlobalVariable.set(\"version\", data.version);\n      }\n    }\n  } catch (error: any) {\n    logger.error($t(\"TXT_CODE_version.versionDetectErr\"), error);\n  }\n}\n\nexport function getVersion() {\n  return GlobalVariable.get(\"version\", \"Unknown\");\n}\n","import StorageSubsystem from \"../common/system_storage\";\nimport logger from \"./log\";\nimport { t } from \"i18next\";\n\nfunction readCategoryConfig(configCategory: string, callback: (config: any) => boolean) {\n  const configPaths = StorageSubsystem.readDir(configCategory);\n  for (const configPath of configPaths) {\n    try {\n      const config = JSON.parse(StorageSubsystem.readFile(configPath));\n      if (callback(config)) {\n        logger.info(t(\"TXT_CODE_6b2a9cab\"), configPath);\n        StorageSubsystem.writeFile(configPath, JSON.stringify(config, null, 4));\n      }\n    } catch (error: any) {\n      logger.error(t(\"TXT_CODE_fb75aba9\"), error);\n    }\n  }\n}\n\nfunction refactorInstanceConfig(config: any) {\n  if (isNaN(config.passWordType)) config.passWordType = 0;\n  if (typeof config.endTime === \"string\") {\n    config.endTime = new Date(config.endTime).getTime();\n    return true;\n  }\n  return false;\n}\n\nfunction detectConfig() {\n  readCategoryConfig(\"InstanceConfig\", refactorInstanceConfig);\n}\n\nexport default { detectConfig };\n","import formidable from \"formidable\";\nimport fs from \"fs-extra\";\n\nexport function checkFileName(fileName: string) {\n  const blackKeys = [\"/\", \"\\\\\", \"|\", \"?\", \"*\", \">\", \"<\", \";\", '\"'];\n  for (const ch of blackKeys) {\n    if (fileName.includes(ch)) return false;\n  }\n  return true;\n}\n\nexport function clearUploadFiles(file?: formidable.File | formidable.File[]) {\n  if (!file) return;\n  if (file instanceof Array) {\n    file.forEach((v) => {\n      fs.remove(v.filepath, () => {});\n    });\n  } else {\n    fs.remove(file.filepath, () => {});\n  }\n}\n","module.exports = require(\"@iarna/toml\");","module.exports = require(\"@koa/router\");","module.exports = require(\"axios\");","module.exports = require(\"dockerode\");","module.exports = require(\"events\");","module.exports = require(\"fs-extra\");","module.exports = require(\"i18next\");","module.exports = require(\"iconv-lite\");","module.exports = require(\"koa\");","module.exports = require(\"koa-body-patch\");","module.exports = require(\"koa-send\");","module.exports = require(\"log4js\");","module.exports = require(\"module-alias/register\");","module.exports = require(\"node-schedule\");","module.exports = require(\"os-utils\");","module.exports = require(\"pidusage\");","module.exports = require(\"properties\");","module.exports = require(\"rcon-srcds\");","module.exports = require(\"socket.io\");","module.exports = require(\"uuid\");","module.exports = require(\"yaml\");","module.exports = require(\"child_process\");","module.exports = require(\"fs\");","module.exports = require(\"http\");","module.exports = require(\"net\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"readline\");","module.exports = require(\"stream\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/app.ts\");\n",""],"names":[],"sourceRoot":""}